var Xa = Object.defineProperty;
var Ka = (e, t, a) => t in e ? Xa(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a;
var te = (e, t, a) => (Ka(e, typeof t != "symbol" ? t + "" : t, a), a);
import { computed as d, reactive as Be, inject as $e, onMounted as ue, onBeforeUnmount as bt, Comment as Ja, ref as j, toRef as o, onActivated as mt, watch as ie, nextTick as ke, defineComponent as x, provide as Oe, openBlock as c, createElementBlock as m, unref as s, normalizeClass as I, renderSlot as C, createBlock as z, resolveDynamicComponent as q, withCtx as N, createElementVNode as E, withDirectives as Te, createTextVNode as ee, toDisplayString as R, createVNode as pe, createCommentVNode as P, normalizeStyle as Ae, useSlots as we, mergeProps as G, getCurrentInstance as Ya, Fragment as Q, renderList as ae, resolveComponent as gt, isReactive as Za, h as X, Transition as Qa, onUnmounted as el, useAttrs as Ht, withModifiers as pt, isRef as He, vModelCheckbox as tl, vModelRadio as al, vModelSelect as ll, normalizeProps as We, guardReactiveProps as Xe, Teleport as nl, createSlots as ol, vShow as St } from "vue";
import { Collapse as sl, Alert as il, Carousel as rl, Dropdown as ul, Modal as dl, Popover as ot, Tooltip as Qe, Offcanvas as cl } from "bootstrap";
const fl = (e) => d(
  () => e.value === "center" ? "justify-content-center" : e.value === "end" ? "justify-content-end" : "justify-content-start"
), qt = Symbol(), Dt = {
  items: Be([]),
  reset() {
    this.items = Be([]);
  }
}, vl = (e) => {
  e.provide(qt, Dt);
}, bl = () => {
  const e = $e(qt);
  return e || Dt;
}, ne = (e, t, a) => {
  ue(() => {
    var l;
    (l = e == null ? void 0 : e.value) == null || l.addEventListener(t, a);
  }), bt(() => {
    var l;
    (l = e == null ? void 0 : e.value) == null || l.removeEventListener(t, a);
  });
}, ml = (e, t) => e.indexOf(t) !== -1, gl = (...e) => Array.from([...e]), pl = (...e) => Array.prototype.concat.apply([], e);
class Ke {
  constructor(t, a = {}) {
    te(this, "cancelable", !0);
    te(this, "componentId", null);
    te(this, "defaultPrevented", !1);
    te(this, "nativeEvent", null);
    te(this, "preventDefault");
    te(this, "relatedTarget", null);
    te(this, "target", null);
    te(this, "eventType", "");
    te(this, "vueTarget", null);
    if (!t)
      throw new TypeError(
        `Failed to construct '${this.constructor.name}'. 1 argument required, ${arguments.length} given.`
      );
    El(this, Ke.Defaults, this.constructor.Defaults, a, { eventType: t }), Hl(this, {
      type: Ce(),
      cancelable: Ce(),
      nativeEvent: Ce(),
      target: Ce(),
      relatedTarget: Ce(),
      vueTarget: Ce(),
      componentId: Ce()
    });
    let l = !1;
    this.preventDefault = function() {
      this.cancelable && (l = !0);
    }, ql(this, "defaultPrevented", {
      enumerable: !0,
      get() {
        return l;
      }
    });
  }
  static get Defaults() {
    return {
      eventType: "",
      cancelable: !0,
      nativeEvent: null,
      target: null,
      relatedTarget: null,
      vueTarget: null,
      componentId: null
    };
  }
}
const et = (e) => `\\${e}`, hl = (e) => {
  e = it(e);
  const { length: t } = e, a = e.charCodeAt(0);
  return e.split("").reduce((l, n, i) => {
    const u = e.charCodeAt(i);
    return u === 0 ? `${l}\uFFFD` : u === 127 || u >= 1 && u <= 31 || i === 0 && u >= 48 && u <= 57 || i === 1 && u >= 48 && u <= 57 && a === 45 ? l + et(`${u.toString(16)} `) : i === 0 && u === 45 && t === 1 ? l + et(n) : u >= 128 || u === 45 || u === 95 || u >= 48 && u <= 57 || u >= 65 && u <= 90 || u >= 97 && u <= 122 ? l + n : l + et(n);
  }, "");
}, jt = typeof window < "u", Rt = typeof document < "u", yl = typeof navigator < "u", Bl = jt && Rt && yl, Mt = Rt ? document : {}, Se = (e) => !!(e && e.nodeType === Node.ELEMENT_NODE), $l = (e) => Se(e) ? e.getBoundingClientRect() : null, kl = (e = []) => {
  const { activeElement: t } = document;
  return t && !e.some((a) => a === t) ? t : null;
}, Sl = (e) => Se(e) && e === kl(), Cl = (e, t = {}) => {
  try {
    e.focus(t);
  } catch (a) {
    console.error(a);
  }
  return Sl(e);
}, Tl = (e, t) => t && Se(e) && e.getAttribute(t) || null, wl = (e) => {
  if (Tl(e, "display") === "none")
    return !1;
  const t = $l(e);
  return !!(t && t.height > 0 && t.width > 0);
}, Ct = (e, t) => !e || e(t).filter((a) => a.type !== Ja).length < 1, Vl = (e, t) => (Se(t) ? t : Mt).querySelector(e) || null, _l = (e, t) => gl((Se(t) ? t : Mt).querySelectorAll(e)), Gt = (e, t) => t && Se(e) ? e.getAttribute(t) : null, xl = (e, t, a) => {
  t && Se(e) && e.setAttribute(t, a);
}, Al = (e, t) => {
  t && Se(e) && e.removeAttribute(t);
}, Il = (e, t) => it(e).toLowerCase() === it(t).toLowerCase(), qe = jt ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || ((e) => setTimeout(e, 16)) : (e) => setTimeout(e, 0), Je = (e, t, a) => t.concat(["sm", "md", "lg", "xl", "xxl"]).reduce((l, n) => (l[e ? `${e}${n.charAt(0).toUpperCase() + n.slice(1)}` : n] = a, l), /* @__PURE__ */ Object.create(null)), Ut = (e, t, a, l = a) => Object.keys(t).reduce((n, i) => (e[i] && n.push(
  [l, i.replace(a, ""), e[i]].filter((u) => u && typeof u != "boolean").join("-").toLowerCase()
), n), []), ye = (e = "") => `__BVID__${Math.random().toString().slice(2, 8)}___BV_${e}__`, Ye = (e, t) => e === !0 || e === "true" || e === "" ? "true" : e === "grammar" || e === "spelling" ? e : t === !1 ? "true" : e === !1 || e === "false" ? "false" : e, Fl = /^[0-9]*\.?[0-9]+$/, tt = (e) => Kt(e) === "boolean", Ol = (e) => e !== null && typeof e == "object", Ie = (e) => typeof e == "string", zl = (e) => e === void 0, Ll = (e) => e === null, Wt = (e) => zl(e) || Ll(e), Xt = (e) => Fl.test(String(e)), Nl = (e) => typeof e == "number", Kt = (e) => typeof e, Jt = (e) => Kt(e) === "function", Yt = (e) => Object.prototype.toString.call(e) === "[object Object]", Zt = (e) => Array.isArray(e), at = (e) => e && typeof e == "object" && e.constructor === Object, st = (e, t, a = !0) => {
  const l = e instanceof Date && typeof e.getMonth == "function" ? new Date(e) : Object.assign({}, e);
  return at(e) && at(t) && Object.keys(t).forEach((n) => {
    at(t[n]) ? n in e ? l[n] = st(e[n], t[n], a) : Object.assign(l, { [n]: t[n] }) : Array.isArray(t[n]) && Array.isArray(e[n]) ? Object.assign(l, {
      [n]: a ? e[n].concat(t[n].filter((i) => !e[n].includes(i))) : t[n]
    }) : Object.assign(l, { [n]: t[n] });
  }), l;
}, fe = (e, t = {}, a = {}) => {
  const l = [e];
  let n;
  for (let i = 0; i < l.length && !n; i++) {
    const u = l[i];
    n = a[u];
  }
  return n && Jt(n) ? n(t) : n;
}, Fe = (e, t = NaN) => Number.isInteger(e) ? e : t, Pl = (e, t = NaN) => {
  const a = parseInt(e, 10);
  return isNaN(a) ? t : a;
}, ht = (e, t = NaN) => {
  const a = parseFloat(e.toString());
  return isNaN(a) ? t : a;
}, El = (e, ...t) => Object.assign(e, ...t), Hl = (e, t) => Object.defineProperties(e, t), ql = (e, t, a) => Object.defineProperty(e, t, a), Ze = (e, t) => Object.keys(e).filter((a) => t.indexOf(a) === -1).reduce((a, l) => ({ ...a, [l]: e[l] }), {}), Ce = () => ({ enumerable: !0, configurable: !1, writable: !1 }), Tt = (e, t) => t + (e ? Wl(e) : ""), Qt = (e, t, a = (l) => l) => (Zt(e) ? e.slice() : Object.keys(e)).reduce(
  (l, n) => (l[a(n)] = t[n], l),
  {}
), Dl = (e) => typeof e == "boolean" ? e : e === "" ? !0 : e === "true", Pe = (e) => !!(e.href || e.to), jl = /_/g, Rl = /([a-z])([A-Z])/g, Ml = /(\s|^)(\w)/, De = /\s+/, Gl = /^#/, Ul = /^#[A-Za-z]+[\w\-:.]*$/, it = (e, t = 2) => Wt(e) ? "" : Zt(e) || Yt(e) && e.toString === Object.prototype.toString ? JSON.stringify(e, null, t) : String(e), wt = (e) => e.replace(jl, " ").replace(Rl, (t, a, l) => `${a} ${l}`).replace(Ml, (t, a, l) => a + l.toUpperCase()), Wl = (e) => (e = Ie(e) ? e.trim() : String(e), e.charAt(0).toUpperCase() + e.slice(1)), ea = (e) => d(() => ({
  "form-check": !e.plain && !e.button,
  "form-check-inline": e.inline,
  "form-switch": e.switch,
  [`form-control-${e.size}`]: e.size && e.size !== "md"
})), ta = (e) => d(() => ({
  "form-check-input": !e.plain && !e.button,
  "is-valid": e.state === !0,
  "is-invalid": e.state === !1,
  "btn-check": e.button
})), aa = (e) => d(() => ({
  "form-check-label": !e.plain && !e.button,
  btn: e.button,
  [`btn-${e.buttonVariant}`]: e.button,
  [`btn-${e.size}`]: e.button && e.size && e.size !== "md"
})), la = (e) => d(() => {
  var t;
  return {
    "aria-invalid": Ye(e.ariaInvalid, e.state),
    "aria-required": ((t = e.required) == null ? void 0 : t.toString()) === "true" ? "true" : null
  };
}), na = (e) => d(() => ({
  "was-validated": e.validated,
  "btn-group": e.buttons && !e.stacked,
  "btn-group-vertical": e.stacked,
  [`btn-group-${e.size}`]: e.size
})), Ge = (e, t, a) => e.filter((l) => l.type.name === t).map((l) => {
  const n = (l.children.default ? l.children.default() : []).find(
    (i) => i.type.toString() === "Symbol(Text)"
  );
  return {
    props: {
      disabled: a,
      ...l.props
    },
    text: n ? n.children : ""
  };
}), oa = (e, t) => typeof e == "string" ? {
  props: {
    value: e,
    disabled: t.disabled
  },
  text: e
} : {
  props: {
    value: e[t.valueField],
    disabled: t.disabled || e[t.disabledField],
    ...e.props
  },
  text: e[t.textField],
  html: e[t.htmlField]
}, sa = (e, t, a, l, n) => ({
  ...e,
  props: {
    "button-variant": a.buttonVariant,
    form: a.form,
    name: l.value,
    id: `${n.value}_option_${t}`,
    button: a.buttons,
    state: a.state,
    plain: a.plain,
    size: a.size,
    inline: !a.stacked,
    required: a.required,
    ...e.props
  }
}), de = (e, t) => d(() => (e == null ? void 0 : e.value) || ye(t)), ia = {
  ariaInvalid: {
    type: [Boolean, String],
    default: void 0
  },
  autocomplete: { type: String, required: !1 },
  autofocus: { type: Boolean, default: !1 },
  disabled: { type: Boolean, default: !1 },
  form: { type: String, required: !1 },
  formatter: { type: Function, required: !1 },
  id: { type: String, required: !1 },
  lazy: { type: Boolean, default: !1 },
  lazyFormatter: { type: Boolean, default: !1 },
  list: { type: String, required: !1 },
  modelValue: { type: [String, Number], default: "" },
  name: { type: String, required: !1 },
  number: { type: Boolean, default: !1 },
  placeholder: { type: String, required: !1 },
  plaintext: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  required: { type: Boolean, default: !1 },
  size: { type: String, required: !1 },
  state: { type: Boolean, default: null },
  trim: { type: Boolean, default: !1 }
}, ra = (e, t) => {
  const a = j();
  let l = null, n = !0;
  const i = de(o(e, "id"), "input"), u = (g, B, p = !1) => (g = String(g), typeof e.formatter == "function" && (!e.lazyFormatter || p) ? (n = !1, e.formatter(g, B)) : g), f = (g) => e.trim ? g.trim() : e.number ? parseFloat(g) : g, v = () => {
    ke(() => {
      var g;
      e.autofocus && ((g = a.value) == null || g.focus());
    });
  };
  ue(v), ue(() => {
    a.value && (a.value.value = e.modelValue);
  }), mt(v);
  const k = d(
    () => {
      var g;
      return Ye(e.ariaInvalid, (g = e.state) != null ? g : void 0);
    }
  ), h = (g) => {
    const { value: B } = g.target, p = u(B, g);
    if (p === !1 || g.defaultPrevented) {
      g.preventDefault();
      return;
    }
    if (e.lazy)
      return;
    const F = f(p);
    e.modelValue !== F && (l = B, t("update:modelValue", F)), t("input", p);
  }, y = (g) => {
    const { value: B } = g.target, p = u(B, g);
    if (p === !1 || g.defaultPrevented) {
      g.preventDefault();
      return;
    }
    if (!e.lazy)
      return;
    l = B, t("update:modelValue", p);
    const F = f(p);
    e.modelValue !== F && t("change", p);
  }, $ = (g) => {
    if (t("blur", g), !e.lazy && !e.lazyFormatter)
      return;
    const { value: B } = g.target, p = u(B, g, !0);
    l = B, t("update:modelValue", p);
  }, A = () => {
    var g;
    e.disabled || (g = a.value) == null || g.focus();
  }, _ = () => {
    var g;
    e.disabled || (g = a.value) == null || g.blur();
  };
  return ie(
    () => e.modelValue,
    (g) => {
      !a.value || (a.value.value = l && n ? l : g, l = null, n = !0);
    }
  ), {
    input: a,
    computedId: i,
    computedAriaInvalid: k,
    onInput: h,
    onChange: y,
    onBlur: $,
    focus: A,
    blur: _
  };
}, xe = (e, t) => {
  if (!e)
    return e;
  if (t in e)
    return e[t];
  const a = t.split(".");
  return xe(e[a[0]], a.splice(1).join("."));
}, lt = (e, t = null, a, l) => {
  if (Object.prototype.toString.call(e) === "[object Object]") {
    const n = xe(e, l.valueField), i = xe(e, l.textField), u = xe(e, l.htmlField), f = xe(e, l.disabledField), v = e[l.optionsField] || null;
    return v !== null ? {
      label: String(xe(e, l.labelField) || i),
      options: yt(v, a, l)
    } : {
      value: typeof n > "u" ? t || i : n,
      text: String(typeof i > "u" ? t : i),
      html: u,
      disabled: Boolean(f)
    };
  }
  return {
    value: t || e,
    text: String(e),
    disabled: !1
  };
}, yt = (e, t, a) => Array.isArray(e) ? e.map((l) => lt(l, null, t, a)) : Object.prototype.toString.call(e) === "[object Object]" ? (console.warn(
  `[BootstrapVue warn]: ${t} - Setting prop "options" to an object is deprecated. Use the array format instead.`
), Object.keys(e).map((l) => {
  const n = e[l];
  switch (typeof n) {
    case "object":
      return lt(n.text, String(n.value), t, a);
    default:
      return lt(n, String(l), t, a);
  }
})) : [], r = (e) => d(() => Dl(e.value)), Xl = ["id"], ua = Symbol(), Kl = /* @__PURE__ */ x({
  __name: "BAccordion",
  props: {
    flush: { default: !1 },
    free: { default: !1 },
    id: { default: void 0 }
  },
  setup(e) {
    const t = e, a = de(o(t, "id"), "accordion"), l = r(o(t, "flush")), n = r(o(t, "free")), i = d(() => ({
      "accordion-flush": l.value
    }));
    return n.value || Oe(ua, a.value.toString()), (u, f) => (c(), m("div", {
      id: s(a),
      class: I(["accordion", s(i)])
    }, [
      C(u.$slots, "default")
    ], 10, Xl));
  }
}), da = /* @__PURE__ */ x({
  __name: "BCollapse",
  props: {
    accordion: null,
    id: { default: ye() },
    modelValue: { default: !1 },
    tag: { default: "div" },
    toggle: { default: !1 },
    visible: { default: !1 },
    isNav: { default: !1 }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "modelValue")), n = r(o(a, "toggle")), i = r(o(a, "visible")), u = r(o(a, "isNav")), f = j(), v = j(), k = d(() => ({
      show: l.value,
      "navbar-collapse": u.value
    })), h = () => t("update:modelValue", !1);
    return ne(f, "show.bs.collapse", () => {
      t("show"), t("update:modelValue", !0);
    }), ne(f, "hide.bs.collapse", () => {
      t("hide"), t("update:modelValue", !1);
    }), ne(f, "shown.bs.collapse", () => t("shown")), ne(f, "hidden.bs.collapse", () => t("hidden")), ue(() => {
      var y;
      v.value = new sl(f.value, {
        parent: a.accordion ? `#${a.accordion}` : void 0,
        toggle: n.value
      }), (i.value || l.value) && (t("update:modelValue", !0), (y = v.value) == null || y.show());
    }), ie(
      () => l.value,
      (y) => {
        var $, A;
        y ? ($ = v.value) == null || $.show() : (A = v.value) == null || A.hide();
      }
    ), ie(
      () => i.value,
      (y) => {
        var $, A;
        y ? (t("update:modelValue", !!y), ($ = v.value) == null || $.show()) : (t("update:modelValue", !!y), (A = v.value) == null || A.hide());
      }
    ), (y, $) => (c(), z(q(e.tag), {
      id: e.id,
      ref_key: "element",
      ref: f,
      class: I(["collapse", s(k)]),
      "data-bs-parent": e.accordion || null,
      "is-nav": s(u)
    }, {
      default: N(() => [
        C(y.$slots, "default", {
          visible: s(l),
          close: h
        })
      ]),
      _: 3
    }, 8, ["id", "class", "data-bs-parent", "is-nav"]));
  }
}), Jl = (e) => {
  if (e.classList.contains("offcanvas"))
    return "offcanvas";
  if (e.classList.contains("collapse"))
    return "collapse";
  throw Error("Couldn't resolve toggle type");
}, Yl = (e, t) => {
  const { modifiers: a, arg: l, value: n } = e, i = Object.keys(a || {}), u = Ie(n) ? n.split(De) : n;
  if (Il(t.tagName, "a")) {
    const f = Gt(t, "href") || "";
    Ul.test(f) && i.push(f.replace(Gl, ""));
  }
  return pl(l, u).forEach((f) => Ie(f) && i.push(f)), i.filter((f, v, k) => f && k.indexOf(f) === v);
}, Bt = {
  mounted(e, t) {
    const a = Yl(t, e), l = [];
    let n = "data-bs-target";
    e.tagName === "a" && (n = "href");
    for (let i = 0; i < a.length; i++) {
      const u = a[i], f = document.getElementById(u);
      f && (e.setAttribute("data-bs-toggle", Jl(f)), l.push(`#${u}`));
    }
    l.length > 0 && e.setAttribute(n, l.join(","));
  }
}, Zl = { class: "accordion-item" }, Ql = ["id"], en = ["aria-expanded", "aria-controls"], tn = { class: "accordion-body" }, an = /* @__PURE__ */ x({
  __name: "BAccordionItem",
  props: {
    id: null,
    title: null,
    visible: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(o(t, "visible")), l = de(o(t, "id"), "accordion_item"), n = $e(ua, "");
    return (i, u) => (c(), m("div", Zl, [
      E("h2", {
        id: `${s(l)}heading`,
        class: "accordion-header"
      }, [
        Te((c(), m("button", {
          class: I(["accordion-button", { collapsed: !s(a) }]),
          type: "button",
          "aria-expanded": s(a) ? "true" : "false",
          "aria-controls": s(l)
        }, [
          C(i.$slots, "title", {}, () => [
            ee(R(e.title), 1)
          ])
        ], 10, en)), [
          [s(Bt), void 0, s(l)]
        ])
      ], 8, Ql),
      pe(da, {
        id: s(l),
        class: "accordion-collapse",
        visible: s(a),
        accordion: s(n),
        "aria-labelledby": `heading${s(l)}`
      }, {
        default: N(() => [
          E("div", tn, [
            C(i.$slots, "default")
          ])
        ]),
        _: 3
      }, 8, ["id", "visible", "accordion", "aria-labelledby"])
    ]));
  }
}), ln = ["aria-label"], nn = /* @__PURE__ */ x({
  __name: "BAlert",
  props: {
    dismissLabel: { default: "Close" },
    dismissible: { default: !1 },
    fade: { default: !1 },
    modelValue: { type: [Boolean, Number], default: !1 },
    show: { default: !1 },
    variant: { default: "info" }
  },
  emits: ["dismissed", "dismiss-count-down", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "dismissible"));
    r(o(a, "fade"));
    const n = r(o(a, "show")), i = j(), u = j(), f = d(() => ({
      [`alert-${a.variant}`]: !!a.variant,
      show: !!a.modelValue,
      "alert-dismissible": l.value,
      fade: !!a.modelValue
    }));
    let v;
    const k = (B) => {
      if (typeof B == "boolean")
        return 0;
      const p = Fe(B, 0);
      return p > 0 ? p : 0;
    }, h = () => {
      v !== void 0 && (clearTimeout(v), v = void 0);
    }, y = j(k(a.modelValue)), $ = d(() => !!a.modelValue || n.value);
    bt(() => {
      var B;
      h(), (B = u.value) == null || B.dispose(), u.value = void 0;
    });
    const A = d(() => a.modelValue === !0 ? !0 : a.modelValue === !1 || Fe(a.modelValue, 0) < 1 ? !1 : !!a.modelValue), _ = () => {
      y.value = k(a.modelValue), (A.value || n.value) && !u.value && (u.value = new il(i.value));
    }, g = () => {
      typeof a.modelValue == "boolean" ? t("update:modelValue", !1) : t("update:modelValue", 0), t("dismissed");
    };
    return ie(() => a.modelValue, _), ie(() => n.value, _), ie(y, (B) => {
      h(), typeof a.modelValue != "boolean" && (t("dismiss-count-down", B), B === 0 && a.modelValue > 0 && t("dismissed"), a.modelValue !== B && t("update:modelValue", B), B > 0 && (v = setTimeout(() => {
        y.value--;
      }, 1e3)));
    }), (B, p) => s($) ? (c(), m("div", {
      key: 0,
      ref_key: "element",
      ref: i,
      class: I(["alert", s(f)]),
      role: "alert"
    }, [
      C(B.$slots, "default"),
      s(l) ? (c(), m("button", {
        key: 0,
        type: "button",
        class: "btn-close",
        "data-bs-dismiss": "alert",
        "aria-label": e.dismissLabel,
        onClick: g
      }, null, 8, ln)) : P("", !0)
    ], 2)) : P("", !0);
  }
}), ca = Symbol(), on = /* @__PURE__ */ x({
  __name: "BAvatarGroup",
  props: {
    overlap: { default: 0.3 },
    rounded: { type: [Boolean, String], default: !1 },
    size: null,
    square: { default: !1 },
    tag: { default: "div" },
    variant: null
  },
  setup(e) {
    const t = e, a = r(o(t, "square")), l = d(() => rt(t.size)), n = (f) => Ie(f) && Xt(f) ? ht(f, 0) : f || 0, i = d(
      () => Math.min(Math.max(n(t.overlap), 0), 1) / 2
    ), u = d(() => {
      let { value: f } = l;
      return f = f ? `calc(${f} * ${i.value})` : null, f ? { paddingLeft: f, paddingRight: f } : {};
    });
    return Oe(ca, {
      overlapScale: i,
      size: t.size,
      square: a.value,
      rounded: t.rounded,
      variant: t.variant
    }), (f, v) => (c(), z(q(e.tag), {
      class: "b-avatar-group",
      role: "group"
    }, {
      default: N(() => [
        E("div", {
          class: "b-avatar-group-inner",
          style: Ae(s(u))
        }, [
          C(f.$slots, "default")
        ], 4)
      ]),
      _: 3
    }));
  }
}), sn = {
  key: 0,
  class: "b-avatar-custom"
}, rn = {
  key: 1,
  class: "b-avatar-img"
}, un = ["src", "alt"], rt = (e) => {
  const t = Ie(e) && Xt(e) ? ht(e, 0) : e;
  return Nl(t) ? `${t}px` : t || null;
}, dn = /* @__PURE__ */ x({
  __name: "BAvatar",
  props: {
    alt: { default: "avatar" },
    ariaLabel: null,
    badge: { type: [Boolean, String], default: !1 },
    badgeLeft: { default: !1 },
    badgeOffset: null,
    badgeTop: { default: !1 },
    badgeVariant: { default: "primary" },
    button: { default: !1 },
    buttonType: { default: "button" },
    disabled: { default: !1 },
    icon: null,
    rounded: { type: [Boolean, String], default: "circle" },
    size: null,
    square: { default: !1 },
    src: null,
    text: null,
    textVariant: { default: void 0 },
    variant: { default: "secondary" }
  },
  emits: ["click", "img-error"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "badgeLeft")), n = r(o(a, "badgeTop")), i = r(o(a, "button")), u = r(o(a, "disabled")), f = r(o(a, "square")), v = we(), k = ["sm", null, "lg"], h = 0.4, y = h * 0.7, $ = $e(ca, null), A = (K) => {
      const re = K;
      return re === "light" || re === "warning" ? "dark" : "light";
    }, _ = d(() => !Ct(v.default)), g = d(() => !Ct(v.badge)), B = d(
      () => a.badge || a.badge === "" || g.value
    ), p = d(
      () => $ != null && $.size ? $.size : rt(a.size)
    ), F = d(
      () => $ != null && $.variant ? $.variant : a.variant
    ), T = d(
      () => $ != null && $.rounded ? $.rounded : a.rounded
    ), S = d(() => ({
      "aria-label": a.ariaLabel || null,
      disabled: u.value || null
    })), b = d(() => ({
      [`bg-${a.badgeVariant}`]: !!a.badgeVariant
    })), V = d(() => a.badge === !0 ? "" : a.badge), H = d(() => `text-${A(a.badgeVariant)}`), O = d(() => ({
      [`b-avatar-${a.size}`]: !!a.size && k.indexOf(rt(a.size)) !== -1,
      [`bg-${F.value}`]: !!F.value,
      badge: !i.value && F.value && _.value,
      rounded: T.value === "" || T.value === !0,
      ["rounded-circle"]: !f.value && T.value === "circle",
      ["rounded-0"]: f.value || T.value === "0",
      ["rounded-1"]: !f.value && T.value === "sm",
      ["rounded-3"]: !f.value && T.value === "lg",
      ["rounded-top"]: !f.value && T.value === "top",
      ["rounded-bottom"]: !f.value && T.value === "bottom",
      ["rounded-start"]: !f.value && T.value === "left",
      ["rounded-end"]: !f.value && T.value === "right",
      btn: i.value,
      [`btn-${F.value}`]: i.value ? !!F.value : !1
    })), w = d(() => `text-${a.textVariant || A(F.value)}`), L = d(() => {
      const K = a.badgeOffset || "0px";
      return {
        fontSize: (k.indexOf(p.value || null) === -1 ? `calc(${p.value} * ${y})` : "") || "",
        top: n.value ? K : "",
        bottom: n.value ? "" : K,
        left: l.value ? K : "",
        right: l.value ? "" : K
      };
    }), W = d(() => {
      const K = k.indexOf(p.value || null) === -1 ? `calc(${p.value} * ${h})` : null;
      return K ? { fontSize: K } : {};
    }), Z = d(() => {
      var be;
      const K = ((be = $ == null ? void 0 : $.overlapScale) == null ? void 0 : be.value) || 0, re = p.value && K ? `calc(${p.value} * -${K})` : null;
      return re ? { marginLeft: re, marginRight: re } : {};
    }), Y = d(() => i.value ? a.buttonType : "span"), D = d(() => ({
      ...Z.value,
      width: p.value,
      height: p.value
    })), le = (K) => {
      !u.value && i.value && t("click", K);
    }, oe = (K) => t("img-error", K);
    return (K, re) => (c(), z(q(s(Y)), G({
      class: ["b-avatar", s(O)],
      style: s(D)
    }, s(S), { onClick: le }), {
      default: N(() => [
        s(_) ? (c(), m("span", sn, [
          C(K.$slots, "default")
        ])) : e.src ? (c(), m("span", rn, [
          E("img", {
            src: e.src,
            alt: e.alt,
            onError: oe
          }, null, 40, un)
        ])) : e.text ? (c(), m("span", {
          key: 2,
          class: I(["b-avatar-text", s(w)]),
          style: Ae(s(W))
        }, R(e.text), 7)) : P("", !0),
        s(B) ? (c(), m("span", {
          key: 3,
          class: I(["b-avatar-badge", s(b)]),
          style: Ae(s(L))
        }, [
          s(g) ? C(K.$slots, "badge", { key: 0 }) : (c(), m("span", {
            key: 1,
            class: I(s(H))
          }, R(s(V)), 3))
        ], 6)) : P("", !0)
      ]),
      _: 3
    }, 16, ["class", "style"]));
  }
}), Ve = {
  active: { type: [Boolean, String], default: !1 },
  activeClass: { type: String, default: "router-link-active" },
  append: { type: [Boolean, String], default: !1 },
  disabled: { type: [Boolean, String], default: !1 },
  event: { type: [String, Array], default: "click" },
  exact: { type: [Boolean, String], default: !1 },
  exactActiveClass: { type: String, default: "router-link-exact-active" },
  href: { type: String },
  rel: { type: String, default: null },
  replace: { type: [Boolean, String], default: !1 },
  routerComponentName: { type: String, default: "router-link" },
  routerTag: { type: String, default: "a" },
  target: { type: String, default: "_self" },
  to: { type: [String, Object], default: null }
}, cn = x({
  props: Ve,
  emits: ["click"],
  setup(e, { emit: t, attrs: a }) {
    const l = r(o(e, "active")), n = r(o(e, "append")), i = r(o(e, "disabled")), u = r(o(e, "exact")), f = r(o(e, "replace")), v = Ya(), k = j(null), h = d(() => {
      const _ = e.routerComponentName.split("-").map((B) => B.charAt(0).toUpperCase() + B.slice(1)).join("");
      return !((v == null ? void 0 : v.appContext.app.component(_)) !== void 0) || i.value || !e.to ? "a" : e.routerComponentName;
    }), y = d(() => {
      const _ = "#";
      if (e.href)
        return e.href;
      if (typeof e.to == "string")
        return e.to || _;
      const g = e.to;
      if (Object.prototype.toString.call(g) === "[object Object]" && (g.path || g.query || g.hash)) {
        const B = g.path || "", p = g.query ? `?${Object.keys(g.query).map((T) => `${T}=${g.query[T]}`).join("=")}` : "", F = !g.hash || g.hash.charAt(0) === "#" ? g.hash || "" : `#${g.hash}`;
        return `${B}${p}${F}` || _;
      }
      return _;
    }), $ = d(() => ({
      to: e.to,
      href: y.value,
      target: e.target,
      rel: e.target === "_blank" && e.rel === null ? "noopener" : e.rel || null,
      tabindex: i.value ? "-1" : typeof a.tabindex > "u" ? null : a.tabindex,
      "aria-disabled": i.value ? "true" : null
    }));
    return {
      tag: h,
      routerAttr: $,
      link: k,
      clicked: (_) => {
        if (i.value) {
          _.preventDefault(), _.stopImmediatePropagation();
          return;
        }
        t("click", _);
      },
      activeBoolean: l,
      appendBoolean: n,
      disabledBoolean: i,
      replaceBoolean: f,
      exactBoolean: u
    };
  }
}), ce = (e, t) => {
  const a = e.__vccOpts || e;
  for (const [l, n] of t)
    a[l] = n;
  return a;
};
function fn(e, t, a, l, n, i) {
  return e.tag === "router-link" ? (c(), z(q(e.tag), G({ key: 0 }, e.routerAttr, { custom: "" }), {
    default: N(({ href: u, navigate: f, isActive: v, isExactActive: k }) => [
      (c(), z(q(e.routerTag), G({
        ref: "link",
        href: u,
        class: [v && e.activeClass, k && e.exactActiveClass]
      }, e.$attrs, { onClick: f }), {
        default: N(() => [
          C(e.$slots, "default")
        ]),
        _: 2
      }, 1040, ["href", "class", "onClick"]))
    ]),
    _: 3
  }, 16)) : (c(), z(q(e.tag), G({
    key: 1,
    ref: "link",
    class: { active: e.activeBoolean, disabled: e.disabledBoolean }
  }, e.routerAttr, { onClick: e.clicked }), {
    default: N(() => [
      C(e.$slots, "default")
    ]),
    _: 3
  }, 16, ["class", "onClick"]));
}
const ve = /* @__PURE__ */ ce(cn, [["render", fn]]), Vt = Ze(Ve, ["event", "routerTag"]), vn = x({
  components: { BLink: ve },
  props: {
    pill: { type: [Boolean, String], default: !1 },
    tag: { type: String, default: "span" },
    variant: { type: String, default: "secondary" },
    textIndicator: { type: [Boolean, String], default: !1 },
    dotIndicator: { type: [Boolean, String], default: !1 },
    ...Vt
  },
  setup(e) {
    const t = d(() => Pe(e)), a = d(() => t.value ? ve : e.tag), l = r(o(e, "pill")), n = r(o(e, "textIndicator")), i = r(o(e, "dotIndicator"));
    return {
      classes: d(() => ({
        [`bg-${e.variant}`]: e.variant,
        active: e.active,
        disabled: e.disabled,
        "text-dark": ["warning", "info", "light"].includes(e.variant),
        "rounded-pill": l.value,
        "position-absolute top-0 start-100 translate-middle": n.value || i.value,
        "p-2 border border-light rounded-circle": i.value,
        "text-decoration-none": t.value
      })),
      props: t.value ? Qt(Vt, e) : {},
      computedTag: a
    };
  }
});
function bn(e, t, a, l, n, i) {
  return c(), z(q(e.computedTag), G({
    class: ["badge", e.classes]
  }, e.props), {
    default: N(() => [
      C(e.$slots, "default")
    ]),
    _: 3
  }, 16, ["class"]);
}
const mn = /* @__PURE__ */ ce(vn, [["render", bn]]), gn = x({
  components: { BLink: ve },
  props: {
    ...Ze(Ve, ["event", "routerTag"]),
    active: { type: [Boolean, String], default: !1 },
    ariaCurrent: { type: String, default: "location" },
    disabled: { type: [Boolean, String], default: !1 },
    text: { type: String, required: !1 }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = r(o(e, "active")), l = r(o(e, "disabled")), n = d(() => ({
      active: a.value
    })), i = d(
      () => a.value ? "span" : ve
    ), u = d(
      () => a.value ? e.ariaCurrent : void 0
    );
    return {
      liClasses: n,
      computedTag: i,
      computedAriaCurrent: u,
      clicked: (v) => {
        if (l.value || a.value) {
          v.preventDefault(), v.stopImmediatePropagation();
          return;
        }
        l.value || t("click", v);
      }
    };
  }
});
function pn(e, t, a, l, n, i) {
  return c(), m("li", {
    class: I(["breadcrumb-item", e.liClasses])
  }, [
    (c(), z(q(e.computedTag), G({ "aria-current": e.computedAriaCurrent }, e.$props, { onClick: e.clicked }), {
      default: N(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16, ["aria-current", "onClick"]))
  ], 2);
}
const fa = /* @__PURE__ */ ce(gn, [["render", pn]]), hn = { "aria-label": "breadcrumb" }, yn = { class: "breadcrumb" }, Bn = /* @__PURE__ */ x({
  __name: "BBreadcrumb",
  props: {
    items: null
  },
  setup(e) {
    const t = e, a = bl(), l = d(() => {
      const n = t.items || (a == null ? void 0 : a.items) || [];
      let i = !1;
      return n.map((f, v) => (typeof f == "string" && (f = { text: f }, v < n.length - 1 && (f.href = "#")), f.active && (i = !0), !f.active && !i && (f.active = v + 1 === n.length), f));
    });
    return (n, i) => (c(), m("nav", hn, [
      E("ol", yn, [
        C(n.$slots, "prepend"),
        (c(!0), m(Q, null, ae(s(l), (u, f) => (c(), z(fa, G({ key: f }, u), {
          default: N(() => [
            ee(R(u.text), 1)
          ]),
          _: 2
        }, 1040))), 128)),
        C(n.$slots, "default"),
        C(n.$slots, "append")
      ])
    ]));
  }
}), $n = x({
  components: { BLink: ve },
  props: {
    ...Ve,
    active: { type: [Boolean, String], default: !1 },
    disabled: { type: [Boolean, String], default: !1 },
    href: { type: String, required: !1 },
    pill: { type: [Boolean, String], default: !1 },
    pressed: { type: [Boolean, String], default: !1 },
    rel: { type: String, default: void 0 },
    size: { type: String, default: "md" },
    squared: { type: [Boolean, String], default: !1 },
    tag: { type: String, default: "button" },
    target: { type: String, default: "_self" },
    type: { type: String, default: "button" },
    variant: { type: String, default: "secondary" },
    loading: { type: [Boolean, String], default: !1 },
    loadingMode: { type: String, default: "inline" }
  },
  emits: ["click", "update:pressed"],
  setup(e, { emit: t }) {
    const a = r(o(e, "active")), l = r(o(e, "disabled")), n = r(o(e, "pill")), i = r(o(e, "pressed")), u = r(o(e, "squared")), f = d(() => i.value === !0), v = d(
      () => e.tag === "button" && e.href === void 0 && e.to === null
    ), k = d(() => Pe(e)), h = d(() => e.to !== null), y = d(
      () => e.href !== void 0 ? !1 : !v.value
    ), $ = d(() => ({
      [`btn-${e.variant}`]: !!e.variant,
      [`btn-${e.size}`]: !!e.size,
      active: a.value || i.value,
      "rounded-pill": n.value,
      "rounded-0": u.value,
      disabled: l.value
    })), A = d(() => ({
      "aria-disabled": y.value ? l.value : null,
      "aria-pressed": f.value ? i.value : null,
      autocomplete: f.value ? "off" : null,
      disabled: v.value ? l.value : null,
      href: e.href,
      rel: k.value ? e.rel : null,
      role: y.value || k.value ? "button" : null,
      target: k.value ? e.target : null,
      type: v.value ? e.type : null,
      to: v.value ? null : e.to,
      append: k.value ? e.append : null,
      activeClass: h.value ? e.activeClass : null,
      event: h.value ? e.event : null,
      exact: h.value ? e.exact : null,
      exactActiveClass: h.value ? e.exactActiveClass : null,
      replace: h.value ? e.replace : null,
      routerComponentName: h.value ? e.routerComponentName : null,
      routerTag: h.value ? e.routerTag : null
    })), _ = d(
      () => h.value ? ve : e.href ? "a" : e.tag
    );
    return {
      classes: $,
      attrs: A,
      computedTag: _,
      clicked: (B) => {
        if (l.value) {
          B.preventDefault(), B.stopPropagation();
          return;
        }
        t("click", B), f.value && t("update:pressed", !i.value);
      }
    };
  }
});
function kn(e, t, a, l, n, i) {
  const u = gt("BSpinner");
  return c(), z(q(e.computedTag), G({
    class: ["btn", e.classes]
  }, e.attrs, { onClick: e.clicked }), {
    default: N(() => [
      e.loading ? (c(), m("div", {
        key: 0,
        class: I(["btn-loading", { "mode-fill": e.loadingMode === "fill", "mode-inline": e.loadingMode === "inline" }])
      }, [
        C(e.$slots, "loading", {}, () => [
          pe(u, {
            class: "btn-spinner",
            small: e.size !== "lg"
          }, null, 8, ["small"])
        ])
      ], 2)) : P("", !0),
      E("div", {
        class: I(["btn-content", { "btn-loading-fill": e.loading && e.loadingMode == "fill" }])
      }, [
        C(e.$slots, "default")
      ], 2)
    ]),
    _: 3
  }, 16, ["class", "onClick"]);
}
const Ee = /* @__PURE__ */ ce($n, [["render", kn]]), Sn = /* @__PURE__ */ x({
  __name: "BButtonGroup",
  props: {
    ariaLabel: { default: "Group" },
    size: null,
    tag: { default: "div" },
    vertical: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(o(t, "vertical")), l = d(() => ({
      "btn-group": !a.value,
      "btn-group-vertical": a.value,
      [`btn-group-${t.size}`]: t.size !== void 0
    }));
    return (n, i) => (c(), z(q(e.tag), {
      class: I(s(l)),
      role: "group",
      "aria-label": e.ariaLabel
    }, {
      default: N(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 8, ["class", "aria-label"]));
  }
}), Cn = ["aria-label"], Tn = /* @__PURE__ */ x({
  __name: "BButtonToolbar",
  props: {
    ariaLabel: { default: "Group" },
    justify: { default: !1 }
  },
  setup(e) {
    const a = r(o(e, "justify")), l = d(() => ({
      "justify-content-between": a.value
    }));
    return (n, i) => (c(), m("div", {
      class: I([s(l), "btn-toolbar"]),
      role: "toolbar",
      "aria-label": e.ariaLabel
    }, [
      C(n.$slots, "default")
    ], 10, Cn));
  }
}), wn = ["disabled", "aria-label"], va = /* @__PURE__ */ x({
  __name: "BCloseButton",
  props: {
    disabled: { default: !1 },
    white: { default: !1 },
    ariaLabel: { default: "Close" }
  },
  setup(e) {
    const t = e, a = r(o(t, "disabled")), l = r(o(t, "white")), n = d(() => ({
      "btn-close-white": l.value
    }));
    return (i, u) => (c(), m("button", {
      type: "button",
      class: I(["btn-close", s(n)]),
      disabled: s(a),
      "aria-label": e.ariaLabel
    }, null, 10, wn));
  }
}), Vn = ["innerHTML"], _n = ["innerHTML"], xn = /* @__PURE__ */ x({
  __name: "BCard",
  props: {
    align: null,
    bgVariant: null,
    bodyBgVariant: null,
    bodyClass: null,
    bodyTag: { default: "div" },
    bodyTextVariant: null,
    borderVariant: null,
    footer: null,
    footerBgVariant: null,
    footerBorderVariant: null,
    footerClass: null,
    footerHtml: { default: "" },
    footerTag: { default: "div" },
    footerTextVariant: null,
    header: null,
    headerBgVariant: null,
    headerBorderVariant: null,
    headerClass: null,
    headerHtml: { default: "" },
    headerTag: { default: "div" },
    headerTextVariant: null,
    imgAlt: null,
    imgBottom: { default: !1 },
    imgEnd: { default: !1 },
    imgHeight: null,
    imgLeft: { default: !1 },
    imgRight: { default: !1 },
    imgSrc: null,
    imgStart: { default: !1 },
    imgTop: { default: !1 },
    imgWidth: null,
    noBody: { default: !1 },
    overlay: { default: !1 },
    subTitle: null,
    subTitleTag: { default: "h6" },
    subTitleTextVariant: { default: "muted" },
    tag: { default: "div" },
    textVariant: null,
    title: null,
    titleTag: { default: "h4" }
  },
  setup(e) {
    const t = e, a = r(o(t, "imgBottom")), l = r(o(t, "imgEnd")), n = r(o(t, "imgLeft")), i = r(o(t, "imgRight")), u = r(o(t, "imgStart")), f = r(o(t, "imgTop")), v = r(o(t, "noBody")), k = r(o(t, "overlay")), h = d(() => ({
      [`text-${t.align}`]: t.align !== void 0,
      [`text-${t.textVariant}`]: t.textVariant !== void 0,
      [`bg-${t.bgVariant}`]: t.bgVariant !== void 0,
      [`border-${t.borderVariant}`]: t.borderVariant !== void 0,
      "flex-row": n.value || u.value,
      "flex-row-reverse": l.value || i.value
    })), y = d(() => ({
      "card-body": !v.value,
      "card-img-overlay": k.value,
      [`bg-${t.bodyBgVariant}`]: t.bodyBgVariant !== void 0,
      [`text-${t.bodyTextVariant}`]: t.bodyTextVariant !== void 0
    })), $ = d(() => ({
      [`bg-${t.footerBgVariant}`]: t.footerBgVariant !== void 0,
      [`border-${t.footerBorderVariant}`]: t.footerBorderVariant !== void 0,
      [`text-${t.footerTextVariant}`]: t.footerTextVariant !== void 0
    })), A = d(() => ({
      [`bg-${t.headerBgVariant}`]: t.headerBgVariant !== void 0,
      [`border-${t.headerBorderVariant}`]: t.headerBorderVariant !== void 0,
      [`text-${t.headerTextVariant}`]: t.headerTextVariant !== void 0
    })), _ = d(() => ({
      "card-img": !l.value && !i.value && !u.value && !n.value && !f.value && !f.value,
      "card-img-right": l.value || i.value,
      "card-img-left": u.value || n.value,
      "card-img-top": f.value,
      "card-img-bottom": a.value
    })), g = d(() => ({
      src: t.imgSrc,
      alt: t.imgAlt,
      height: t.imgHeight,
      width: t.imgWidth
    })), B = d(() => ({
      [`text-${t.subTitleTextVariant}`]: !!t.subTitleTextVariant
    }));
    return (p, F) => (c(), z(q(e.tag), {
      class: I(["card", s(h)])
    }, {
      default: N(() => [
        e.imgSrc && !s(a) ? (c(), m("img", G({ key: 0 }, s(g), { class: s(_) }), null, 16)) : P("", !0),
        e.header || p.$slots.header || e.headerHtml ? (c(), z(q(e.headerTag), {
          key: 1,
          class: I(["card-header", [e.headerClass, s(A)]])
        }, {
          default: N(() => [
            e.headerHtml ? (c(), m("div", {
              key: 0,
              innerHTML: e.headerHtml
            }, null, 8, Vn)) : C(p.$slots, "header", { key: 1 }, () => [
              ee(R(e.header), 1)
            ])
          ]),
          _: 3
        }, 8, ["class"])) : P("", !0),
        s(v) ? P("", !0) : (c(), z(q(e.bodyTag), {
          key: 2,
          class: I([e.bodyClass, s(y)])
        }, {
          default: N(() => [
            e.title && !s(v) ? (c(), z(q(e.titleTag), {
              key: 0,
              class: "card-title"
            }, {
              default: N(() => [
                ee(R(e.title), 1)
              ]),
              _: 1
            })) : P("", !0),
            e.subTitle && !s(v) ? (c(), z(q(e.subTitleTag), {
              key: 1,
              class: I(["card-subtitle mb-2", s(B)])
            }, {
              default: N(() => [
                ee(R(e.subTitle), 1)
              ]),
              _: 1
            }, 8, ["class"])) : P("", !0),
            C(p.$slots, "default")
          ]),
          _: 3
        }, 8, ["class"])),
        s(v) ? C(p.$slots, "default", { key: 3 }) : P("", !0),
        e.footer || p.$slots.footer || e.footerHtml ? (c(), z(q(e.footerTag), {
          key: 4,
          class: I(["card-footer", [e.footerClass, s($)]])
        }, {
          default: N(() => [
            e.footerHtml ? (c(), m("div", {
              key: 0,
              innerHTML: e.footerHtml
            }, null, 8, _n)) : C(p.$slots, "footer", { key: 1 }, () => [
              ee(R(e.footer), 1)
            ])
          ]),
          _: 3
        }, 8, ["class"])) : P("", !0),
        e.imgSrc && s(a) ? (c(), m("img", G({ key: 5 }, s(g), { class: s(_) }), null, 16)) : P("", !0)
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), ba = /* @__PURE__ */ x({
  __name: "BCardTitle",
  props: {
    title: null,
    titleTag: { default: "h4" }
  },
  setup(e) {
    return (t, a) => (c(), z(q(e.titleTag), { class: "card-title" }, {
      default: N(() => [
        C(t.$slots, "default", {}, () => [
          ee(R(e.title), 1)
        ])
      ]),
      _: 3
    }));
  }
}), ma = /* @__PURE__ */ x({
  __name: "BCardSubTitle",
  props: {
    subTitle: null,
    subTitleTag: { default: "h6" },
    subTitleTextVariant: { default: "muted" }
  },
  setup(e) {
    const t = e, a = d(() => ({
      [`text-${t.subTitleTextVariant}`]: !!t.subTitleTextVariant
    }));
    return (l, n) => (c(), z(q(e.subTitleTag), {
      class: I(["card-subtitle mb-2", s(a)])
    }, {
      default: N(() => [
        C(l.$slots, "default", {}, () => [
          ee(R(e.subTitle), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), An = /* @__PURE__ */ x({
  __name: "BCardBody",
  props: {
    bodyBgVariant: null,
    bodyClass: null,
    bodyTag: { default: "div" },
    bodyTextVariant: null,
    overlay: { default: !1 },
    subTitle: null,
    subTitleTag: { default: "h4" },
    subTitleTextVariant: null,
    title: null,
    titleTag: { default: "h4" }
  },
  setup(e) {
    const t = e;
    r(o(t, "overlay"));
    const a = d(() => ({
      [`text-${t.bodyTextVariant}`]: t.bodyTextVariant !== void 0,
      [`bg-${t.bodyBgVariant}`]: t.bodyBgVariant !== void 0
    }));
    return (l, n) => (c(), z(q(e.bodyTag), {
      class: I(["card-body", s(a)])
    }, {
      default: N(() => [
        e.title ? (c(), z(ba, {
          key: 0,
          "title-tag": e.titleTag,
          title: e.title
        }, null, 8, ["title-tag", "title"])) : P("", !0),
        e.subTitle ? (c(), z(ma, {
          key: 1,
          "sub-title-tag": e.subTitleTag,
          "sub-title": e.subTitle,
          "sub-title-text-variant": e.subTitleTextVariant
        }, null, 8, ["sub-title-tag", "sub-title", "sub-title-text-variant"])) : P("", !0),
        C(l.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), In = ["innerHTML"], Fn = /* @__PURE__ */ x({
  __name: "BCardFooter",
  props: {
    footer: null,
    footerBgVariant: null,
    footerBorderVariant: null,
    footerClass: null,
    footerHtml: null,
    footerTag: { default: "div" },
    footerTextVariant: null
  },
  setup(e) {
    const t = e, a = d(() => ({
      [`text-${t.footerTextVariant}`]: t.footerTextVariant !== void 0,
      [`bg-${t.footerBgVariant}`]: t.footerBgVariant !== void 0,
      [`border-${t.footerBorderVariant}`]: t.footerBorderVariant !== void 0
    }));
    return (l, n) => (c(), z(q(e.footerTag), {
      class: I(["card-footer", [e.footerClass, s(a)]])
    }, {
      default: N(() => [
        e.footerHtml ? (c(), m("div", {
          key: 0,
          innerHTML: e.footerHtml
        }, null, 8, In)) : C(l.$slots, "default", { key: 1 }, () => [
          ee(R(e.footer), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), On = /* @__PURE__ */ x({
  __name: "BCardGroup",
  props: {
    columns: { default: !1 },
    deck: { default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = r(o(t, "columns")), l = r(o(t, "deck")), n = d(
      () => l.value ? "card-deck" : a.value ? "card-columns" : "card-group"
    );
    return (i, u) => (c(), z(q(e.tag), {
      class: I(s(n))
    }, {
      default: N(() => [
        C(i.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), zn = ["innerHTML"], Ln = /* @__PURE__ */ x({
  __name: "BCardHeader",
  props: {
    header: null,
    headerBgVariant: null,
    headerBorderVariant: null,
    headerClass: null,
    headerHtml: null,
    headerTag: { default: "div" },
    headerTextVariant: null
  },
  setup(e) {
    const t = e, a = d(() => ({
      [`text-${t.headerTextVariant}`]: t.headerTextVariant !== void 0,
      [`bg-${t.headerBgVariant}`]: t.headerBgVariant !== void 0,
      [`border-${t.headerBorderVariant}`]: t.headerBorderVariant !== void 0
    }));
    return (l, n) => (c(), z(q(e.headerTag), {
      class: I(["card-header", [e.headerClass, s(a)]])
    }, {
      default: N(() => [
        e.headerHtml ? (c(), m("div", {
          key: 0,
          innerHTML: e.headerHtml
        }, null, 8, zn)) : C(l.$slots, "default", { key: 1 }, () => [
          ee(R(e.header), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Nn = /* @__PURE__ */ x({
  __name: "BCardImg",
  props: {
    alt: { default: void 0 },
    bottom: { default: !1 },
    end: { default: !1 },
    height: null,
    left: { default: !1 },
    right: { default: !1 },
    src: null,
    start: { default: !1 },
    top: { default: !1 },
    width: null
  },
  setup(e) {
    const t = e, a = r(o(t, "bottom")), l = r(o(t, "end")), n = r(o(t, "left")), i = r(o(t, "right")), u = r(o(t, "start")), f = r(o(t, "top")), v = d(() => ({
      src: t.src,
      alt: t.alt,
      width: (typeof t.width == "number" ? t.width : parseInt(t.width, 10)) || void 0,
      height: (typeof t.height == "number" ? t.height : parseInt(t.height, 10)) || void 0
    })), k = d(() => {
      const h = n.value ? "float-left" : i.value ? "float-right" : "";
      let y = "card-img";
      return f.value ? y += "-top" : i.value || l.value ? y += "-right" : a.value ? y += "-bottom" : (n.value || u.value) && (y += "-left"), {
        [h]: !!h,
        [y]: !0
      };
    });
    return (h, y) => (c(), m("img", G({ class: s(k) }, s(v)), null, 16));
  }
}), Pn = {}, En = { class: "card-text" };
function Hn(e, t) {
  return c(), m("p", En, [
    C(e.$slots, "default")
  ]);
}
const qn = /* @__PURE__ */ ce(Pn, [["render", Hn]]), Dn = ["id"], jn = {
  key: 0,
  class: "carousel-indicators"
}, Rn = ["data-bs-target", "data-bs-slide-to", "aria-label"], Mn = { class: "carousel-inner" }, Gn = ["data-bs-target"], Un = /* @__PURE__ */ E("span", {
  class: "carousel-control-prev-icon",
  "aria-hidden": "true"
}, null, -1), Wn = /* @__PURE__ */ E("span", { class: "visually-hidden" }, "Previous", -1), Xn = [
  Un,
  Wn
], Kn = ["data-bs-target"], Jn = /* @__PURE__ */ E("span", {
  class: "carousel-control-next-icon",
  "aria-hidden": "true"
}, null, -1), Yn = /* @__PURE__ */ E("span", { class: "visually-hidden" }, "Next", -1), Zn = [
  Jn,
  Yn
], ga = Symbol(), Qn = /* @__PURE__ */ x({
  __name: "BCarousel",
  props: {
    id: null,
    imgHeight: null,
    imgWidth: null,
    background: null,
    modelValue: { default: 0 },
    controls: { default: !1 },
    indicators: { default: !1 },
    interval: { default: 5e3 },
    noTouch: { default: !1 },
    noWrap: { default: !1 }
  },
  emits: ["sliding-start", "sliding-end"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "controls")), n = r(o(a, "indicators")), i = r(o(a, "noTouch"));
    r(o(a, "noWrap"));
    const u = we(), f = j(), v = j(), k = de(o(a, "id"), "accordion"), h = j([]);
    return ne(f, "slide.bs.carousel", (y) => t("sliding-start", y)), ne(f, "slid.bs.carousel", (y) => t("sliding-end", y)), ue(() => {
      v.value = new rl(f.value, {
        wrap: !i.value,
        interval: a.interval,
        touch: !i.value
      }), u.default && (h.value = u.default().filter((y) => {
        var $;
        return (($ = y.type) == null ? void 0 : $.name) === "BCarouselSlide";
      }));
    }), Oe(ga, {
      background: a.background,
      width: a.imgWidth,
      height: a.imgHeight
    }), (y, $) => (c(), m("div", {
      id: s(k),
      ref_key: "element",
      ref: f,
      class: "carousel slide",
      "data-bs-ride": "carousel"
    }, [
      s(n) ? (c(), m("div", jn, [
        (c(!0), m(Q, null, ae(h.value, (A, _) => (c(), m("button", {
          key: _,
          type: "button",
          "data-bs-target": `#${s(k)}`,
          "data-bs-slide-to": _,
          class: I(_ === 0 ? "active" : ""),
          "aria-current": "true",
          "aria-label": `Slide ${_}`
        }, null, 10, Rn))), 128))
      ])) : P("", !0),
      E("div", Mn, [
        C(y.$slots, "default")
      ]),
      s(l) ? (c(), m(Q, { key: 1 }, [
        E("button", {
          class: "carousel-control-prev",
          type: "button",
          "data-bs-target": `#${s(k)}`,
          "data-bs-slide": "prev"
        }, Xn, 8, Gn),
        E("button", {
          class: "carousel-control-next",
          type: "button",
          "data-bs-target": `#${s(k)}`,
          "data-bs-slide": "next"
        }, Zn, 8, Kn)
      ], 64)) : P("", !0)
    ], 8, Dn));
  }
}), pa = /* @__PURE__ */ x({
  __name: "BImg",
  props: {
    alt: { default: void 0 },
    blank: { default: !1 },
    blankColor: { default: "transparent" },
    block: { default: !1 },
    center: { default: !1 },
    fluid: { default: !1 },
    lazy: { default: !1 },
    fluidGrow: { default: !1 },
    height: null,
    left: { default: !1 },
    right: { default: !1 },
    rounded: { type: [Boolean, String], default: !1 },
    sizes: null,
    src: null,
    srcset: null,
    thumbnail: { default: !1 },
    width: null
  },
  emits: ["load"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "lazy")), n = r(o(a, "blank")), i = r(o(a, "block")), u = r(o(a, "center")), f = r(o(a, "fluid")), v = r(o(a, "fluidGrow")), k = r(o(a, "left")), h = r(o(a, "right")), y = r(o(a, "thumbnail")), $ = '<svg width="%{w}" height="%{h}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 %{w} %{h}" preserveAspectRatio="none"><rect width="100%" height="100%" style="fill:%{f};"></rect></svg>', A = (p, F, T) => `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(
      $.replace("%{w}", String(p)).replace("%{h}", String(F)).replace("%{f}", T)
    )}`, _ = d(() => {
      let { src: p } = a, F = (typeof a.width == "number" ? a.width : parseInt(a.width, 10)) || void 0, T = (typeof a.height == "number" ? a.height : parseInt(a.height, 10)) || void 0, S = "";
      typeof a.srcset == "string" ? S = a.srcset.split(",").filter((V) => V).join(",") : Array.isArray(a.srcset) && (S = a.srcset.filter((V) => V).join(","));
      let b = "";
      return typeof a.sizes == "string" ? b = a.sizes.split(",").filter((V) => V).join(",") : Array.isArray(a.sizes) && (b = a.sizes.filter((V) => V).join(",")), n.value && (!T && F ? T = F : !F && T && (F = T), !F && !T && (F = 1, T = 1), p = A(F, T, a.blankColor || "transparent"), S = "", b = ""), {
        src: p,
        alt: a.alt,
        width: F || void 0,
        height: T || void 0,
        srcset: S || void 0,
        sizes: b || void 0,
        loading: l.value ? "lazy" : "eager"
      };
    }), g = d(
      () => k.value ? "float-start" : h.value ? "float-end" : u.value ? "mx-auto" : void 0
    ), B = d(() => ({
      "img-thumbnail": y.value,
      "img-fluid": f.value || v.value,
      "w-100": v.value,
      rounded: a.rounded === "" || a.rounded === !0,
      [`rounded-${a.rounded}`]: typeof a.rounded == "string" && a.rounded !== "",
      [`${g.value}`]: g.value !== void 0,
      "d-block": i.value || u.value
    }));
    return (p, F) => (c(), m("img", G({ class: s(B) }, s(_), {
      onLoad: F[0] || (F[0] = (T) => t("load", T))
    }), null, 16));
  }
}), eo = ["id", "data-bs-interval"], to = { key: 0 }, ao = ["innerHTML"], lo = { key: 0 }, no = ["innerHTML"], oo = /* @__PURE__ */ x({
  __name: "BCarouselSlide",
  props: {
    imgSrc: null,
    imgHeight: null,
    imgWidth: null,
    interval: null,
    active: { default: !1 },
    background: null,
    caption: null,
    captionHtml: null,
    captionTag: { default: "h3" },
    contentTag: { default: "div" },
    contentVisibleUp: null,
    id: null,
    imgAlt: null,
    imgBlank: { default: !1 },
    imgBlankColor: { default: "transparent" },
    text: null,
    textHtml: null,
    textTag: { default: "p" }
  },
  setup(e) {
    const t = e, a = r(o(t, "active")), l = r(o(t, "imgBlank")), n = $e(ga, {}), i = de(o(t, "id"), "accordion");
    d(
      () => l.value ? l.value : t.imgSrc
    );
    const u = d(() => ({
      background: `${t.background || n.background || "rgb(171, 171, 171)"} none repeat scroll 0% 0%`
    })), f = d(() => ({
      "d-none": t.contentVisibleUp !== void 0,
      [`d-${t.contentVisibleUp}-block`]: t.contentVisibleUp !== void 0
    })), v = d(() => t.text && !t.textHtml), k = d(() => t.textHtml), h = d(() => t.caption && !t.captionHtml), y = d(() => t.captionHtml), $ = d(() => n.width), A = d(() => n.height);
    return (_, g) => (c(), m("div", {
      id: s(i),
      class: I(["carousel-item", { active: s(a) }]),
      "data-bs-interval": e.interval,
      style: Ae(s(u))
    }, [
      C(_.$slots, "img", {}, () => [
        pe(pa, {
          class: "d-block w-100",
          alt: e.imgAlt,
          src: e.imgSrc,
          width: e.imgWidth || s($),
          height: e.imgHeight || s(A),
          blank: s(l),
          "blank-color": e.imgBlankColor
        }, null, 8, ["alt", "src", "width", "height", "blank", "blank-color"])
      ]),
      e.caption || e.captionHtml || e.text || e.textHtml || _.$slots.default ? (c(), z(q(e.contentTag), {
        key: 0,
        class: I(["carousel-caption", s(f)])
      }, {
        default: N(() => [
          e.caption || e.captionHtml ? (c(), z(q(e.captionTag), { key: 0 }, {
            default: N(() => [
              s(h) ? (c(), m("span", to, R(e.caption), 1)) : P("", !0),
              s(y) ? (c(), m("span", {
                key: 1,
                innerHTML: e.captionHtml
              }, null, 8, ao)) : P("", !0)
            ]),
            _: 1
          })) : P("", !0),
          e.text || e.textHtml ? (c(), z(q(e.textTag), { key: 1 }, {
            default: N(() => [
              s(v) ? (c(), m("span", lo, R(e.text), 1)) : P("", !0),
              s(k) ? (c(), m("span", {
                key: 1,
                innerHTML: e.textHtml
              }, null, 8, no)) : P("", !0)
            ]),
            _: 1
          })) : P("", !0),
          C(_.$slots, "default")
        ]),
        _: 3
      }, 8, ["class"])) : P("", !0)
    ], 14, eo));
  }
}), _t = Je("", [], { type: [Boolean, String, Number], default: !1 }), xt = Je("offset", [""], { type: [String, Number], default: null }), At = Je("order", [""], { type: [String, Number], default: null }), so = x({
  name: "BCol",
  props: {
    col: { type: [Boolean, String], default: !1 },
    cols: { type: [String, Number], default: null },
    ..._t,
    offset: { type: [String, Number], default: null },
    ...xt,
    order: { type: [String, Number], default: null },
    ...At,
    alignSelf: { type: String, default: null },
    tag: { type: String, default: "div" }
  },
  setup(e) {
    const t = r(o(e, "col")), a = [
      { content: _t, propPrefix: "cols", classPrefix: "col" },
      { content: xt, propPrefix: "offset" },
      { content: At, propPrefix: "order" }
    ], l = d(
      () => a.flatMap((i) => Ut(e, i.content, i.propPrefix, i.classPrefix))
    );
    return {
      classes: d(() => ({
        col: t.value || !l.value.some((i) => /^col-/.test(i) && !e.cols),
        [`col-${e.cols}`]: !!e.cols,
        [`offset-${e.offset}`]: !!e.offset,
        [`order-${e.order}`]: !!e.order,
        [`align-self-${e.alignSelf}`]: !!e.alignSelf
      })),
      classList: l
    };
  }
});
function io(e, t, a, l, n, i) {
  return c(), z(q(e.tag), {
    class: I([e.classes, e.classList])
  }, {
    default: N(() => [
      C(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["class"]);
}
const Ne = /* @__PURE__ */ ce(so, [["render", io]]), _e = { delay: 5e3, value: !0, pos: "top-right" };
class It {
  constructor(t) {
    te(this, "vm");
    te(this, "containerPositions");
    Za(t) ? this.vm = t : this.vm = Be(t), this.containerPositions = d(() => {
      const a = /* @__PURE__ */ new Set([]);
      return this.vm.toasts.map((l) => {
        l.options.pos && a.add(l.options.pos);
      }), a;
    });
  }
  toasts(t) {
    return t ? d(
      () => this.vm.toasts.filter((a) => {
        if (a.options.pos === t && a.options.value)
          return a;
      })
    ) : d(() => this.vm.toasts);
  }
  remove(...t) {
    this.vm.toasts = this.vm.toasts.filter((a) => {
      if (a.options.id && !t.includes(a.options.id))
        return a;
    });
  }
  isRoot() {
    var t;
    return (t = this.vm.root) != null ? t : !1;
  }
  show(t, a = _e) {
    const l = { id: ye(), ..._e, ...a }, n = {
      options: Be(l),
      content: t
    };
    return this.vm.toasts.push(n), n;
  }
  info(t, a = _e) {
    return this.show(t, { variant: "info", ...a });
  }
  danger(t, a = _e) {
    return this.show(t, { variant: "danger", ...a });
  }
  warning(t, a = _e) {
    return this.show(t, { variant: "warning", ...a });
  }
  success(t, a = _e) {
    return this.show(t, { variant: "success", ...a });
  }
  hide() {
  }
}
class ro {
  constructor() {
    te(this, "vms");
    te(this, "rootInstance");
    te(this, "useToast", ya);
    this.vms = {};
  }
  getOrCreateViewModel(t) {
    if (!t) {
      if (this.rootInstance)
        return this.vms[this.rootInstance];
      const a = { root: !0, toasts: [], container: void 0, id: Symbol("toast") };
      return this.rootInstance = a.id, this.vms[a.id] = a, a;
    }
    if (t.root) {
      if (this.rootInstance)
        return this.vms[this.rootInstance];
      this.rootInstance = t.id;
    }
    return this.vms[t.id] = t, t;
  }
  getVM(t) {
    if (!t && this.rootInstance)
      return this.vms[this.rootInstance];
    if (t)
      return this.vms[t];
  }
}
const ut = Symbol(), ha = Symbol(), uo = {
  container: void 0,
  toasts: [],
  root: !1
};
function co() {
  return $e(ha);
}
function ya(e, t = ut) {
  const a = $e(co());
  if (!e)
    return new It(a.getOrCreateViewModel());
  const l = { id: Symbol("toastInstance") }, n = { ...uo, ...l, ...e }, i = a.getOrCreateViewModel(n);
  return new It(i);
}
const fo = {
  install: (e, t = {}) => {
    var a, l, n, i;
    e.provide(ha, (l = (a = t == null ? void 0 : t.BToast) == null ? void 0 : a.injectkey) != null ? l : ut), e.provide((i = (n = t == null ? void 0 : t.BToast) == null ? void 0 : n.injectkey) != null ? i : ut, new ro());
  }
}, Ba = {
  name: "",
  enterActiveClass: "",
  enterToClass: "",
  leaveActiveClass: "",
  leaveToClass: "showing",
  enterFromClass: "showing",
  leaveFromClass: ""
}, vo = {
  ...Ba,
  enterActiveClass: "fade showing",
  leaveActiveClass: "fade showing"
}, Ue = x({
  props: {
    appear: { type: [Boolean, String], default: !1 },
    mode: { type: String, required: !1 },
    noFade: { type: [Boolean, String], default: !1 },
    transProps: { type: Object, required: !1 }
  },
  setup(e, { slots: t }) {
    const a = r(o(e, "appear")), l = r(o(e, "noFade")), n = j(e.transProps);
    return Yt(n.value) || (n.value = l.value ? Ba : vo, a.value && (n.value = {
      ...n.value,
      appear: !0,
      appearClass: n.value.enterClass,
      appearActiveClass: n.value.enterActiveClass,
      appearToClass: n.value.enterToClass
    })), n.value = {
      mode: e.mode,
      ...n.value,
      css: !0
    }, () => X(
      Qa,
      { ...n.value },
      {
        default: () => t.default ? t.default() : []
      }
    );
  }
}), bo = "toast-title", Ft = 1e3, $a = x({
  components: { BLink: ve },
  props: {
    ...Ve,
    delay: { type: Number, default: 5e3 },
    bodyClass: { type: String },
    body: { type: [Object, String] },
    headerClass: { type: String },
    headerTag: { type: String, default: "div" },
    animation: { type: [Boolean, String], default: !0 },
    id: { type: String },
    isStatus: { type: [Boolean, String], default: !1 },
    autoHide: { type: [Boolean, String], default: !0 },
    noCloseButton: { type: [Boolean, String], default: !1 },
    noFade: { type: [Boolean, String], default: !1 },
    noHoverPause: { type: [Boolean, String], default: !1 },
    solid: { type: [Boolean, String], default: !1 },
    static: { type: [Boolean, String], default: !1 },
    title: { type: String },
    modelValue: { type: [Boolean, String], default: !1 },
    toastClass: { type: Array },
    variant: { type: String }
  },
  emits: ["destroyed", "update:modelValue"],
  setup(e, { emit: t, slots: a }) {
    r(o(e, "animation"));
    const l = r(o(e, "isStatus")), n = r(o(e, "autoHide")), i = r(o(e, "noCloseButton")), u = r(o(e, "noFade")), f = r(o(e, "noHoverPause"));
    r(o(e, "solid")), r(o(e, "static"));
    const v = r(o(e, "modelValue")), k = j(!1), h = j(!1), y = j(!1), $ = d(() => ({
      [`b-toast-${e.variant}`]: e.variant !== void 0,
      show: y.value || k.value
    }));
    let A, _, g;
    const B = () => {
      typeof A > "u" || (clearTimeout(A), A = void 0);
    }, p = d(
      () => Math.max(Fe(e.delay, 0), Ft)
    ), F = () => {
      v.value && (_ = g = 0, B(), h.value = !0, qe(() => {
        y.value = !1;
      }));
    }, T = () => {
      B(), t("update:modelValue", !0), _ = g = 0, h.value = !1, ke(() => {
        qe(() => {
          y.value = !0;
        });
      });
    }, S = () => {
      if (!n.value || f.value || !A || g)
        return;
      const Z = Date.now() - _;
      Z > 0 && (B(), g = Math.max(p.value - Z, Ft));
    }, b = () => {
      (!n.value || f.value || !g) && (g = _ = 0), V();
    };
    ie(
      () => v.value,
      (Z) => {
        Z ? T() : F();
      }
    );
    const V = () => {
      B(), n.value && (A = setTimeout(F, g || p.value), _ = Date.now(), g = 0);
    }, H = () => {
      k.value = !0, t("update:modelValue", !0);
    }, O = () => {
      k.value = !1, V();
    }, w = () => {
      k.value = !0;
    }, L = () => {
      k.value = !1, g = _ = 0, t("update:modelValue", !1);
    };
    el(() => {
      B(), n.value && t("destroyed", e.id);
    }), ue(() => {
      ke(() => {
        v.value && qe(() => {
          T();
        });
      });
    });
    const W = () => {
      ke(() => {
        qe(() => {
          F();
        });
      });
    };
    return () => {
      const Z = () => {
        const Y = [], D = fe(bo, { hide: F }, a);
        D ? Y.push(X(D)) : e.title && Y.push(X("strong", { class: "me-auto" }, e.title)), !i.value && Y.length !== 0 && Y.push(
          X(va, {
            class: ["btn-close"],
            onClick: () => {
              F();
            }
          })
        );
        const le = [];
        if (Y.length > 0 && le.push(
          X(
            e.headerTag,
            {
              class: "toast-header"
            },
            { default: () => Y }
          )
        ), fe("default", { hide: F }, a) || e.body) {
          const oe = X(
            Pe(e) ? "b-link" : "div",
            {
              class: ["toast-body", e.bodyClass],
              onClick: Pe(e) ? { click: W } : {}
            },
            fe("default", { hide: F }, a) || e.body
          );
          le.push(oe);
        }
        return X(
          "div",
          {
            class: ["toast", e.toastClass, $.value],
            tabindex: "0"
          },
          le
        );
      };
      return X(
        "div",
        {
          class: ["b-toast"],
          id: e.id,
          role: h.value ? null : l.value ? "status" : "alert",
          "aria-live": h.value ? null : l.value ? "polite" : "assertive",
          "aria-atomic": h.value ? null : "true",
          onmouseenter: S,
          onmouseleave: b
        },
        [
          X(
            Ue,
            {
              noFade: u.value,
              onAfterEnter: O,
              onBeforeEnter: H,
              onAfterLeave: L,
              onBeforeLeave: w
            },
            () => [y.value ? Z() : ""]
          )
        ]
      );
    };
  }
}), dt = /* @__PURE__ */ x({
  __name: "BToaster",
  props: {
    position: { default: "top-right" },
    instance: null
  },
  setup(e) {
    const t = e, a = {
      "top-left": "top-0 start-0",
      "top-center": "top-0 start-50 translate-middle-x",
      "top-right": "top-0 end-0",
      "middle-left": "top-50 start-0 translate-middle-y",
      "middle-center": "top-50 start-50 translate-middle",
      "middle-right": "top-50 end-0 translate-middle-y",
      "bottom-left": "bottom-0 start-0",
      "bottom-center": "bottom-0 start-50 translate-middle-x",
      "bottom-right": "bottom-0 end-0"
    }, l = d(() => a[t.position]), n = (i) => {
      var u;
      (u = t.instance) == null || u.remove(i);
    };
    return (i, u) => {
      var f;
      return c(), m("div", {
        class: I([[s(l)], "b-toaster position-fixed p-3"]),
        style: { "z-index": "11" }
      }, [
        (c(!0), m(Q, null, ae((f = e.instance) == null ? void 0 : f.toasts(e.position).value, (v) => (c(), z($a, {
          id: v.options.id,
          key: v.options.id,
          modelValue: v.options.value,
          "onUpdate:modelValue": (k) => v.options.value = k,
          delay: v.options.delay,
          title: v.content.title,
          body: v.content.body,
          component: v.content.body,
          variant: v.options.variant,
          onDestroyed: n
        }, null, 8, ["id", "modelValue", "onUpdate:modelValue", "delay", "title", "body", "component", "variant"]))), 128))
      ], 2);
    };
  }
}), mo = x({
  name: "BContainer",
  props: {
    gutterX: { type: String, default: null },
    gutterY: { type: String, default: null },
    fluid: { type: [Boolean, String], default: !1 },
    toast: { type: Object },
    position: { type: String, required: !1 }
  },
  setup(e, { slots: t, expose: a }) {
    const l = j();
    let n;
    const i = d(() => ({
      container: !e.fluid,
      ["container-fluid"]: typeof e.fluid == "boolean" && e.fluid,
      [`container-${e.fluid}`]: typeof e.fluid == "string",
      [`gx-${e.gutterX}`]: e.gutterX !== null,
      [`gy-${e.gutterY}`]: e.gutterY !== null
    }));
    return ue(() => {
      e.toast;
    }), e.toast && (n = ya({ container: l, root: e.toast.root }), a({})), () => {
      var f;
      const u = [];
      return n == null || n.containerPositions.value.forEach((v) => {
        u.push(X(dt, { key: v, instance: n, position: v }));
      }), X("div", { class: [i.value, e.position], ref: l }, [
        ...u,
        (f = t.default) == null ? void 0 : f.call(t)
      ]);
    };
  },
  methods: {}
}), go = { class: "visually-hidden" }, po = ["aria-labelledby", "role"], ka = /* @__PURE__ */ x({
  __name: "BDropdown",
  props: {
    id: null,
    menuClass: null,
    size: null,
    splitClass: null,
    splitVariant: null,
    text: null,
    toggleClass: null,
    autoClose: { type: [Boolean, String], default: !0 },
    block: { default: !1 },
    boundary: { default: "clippingParents" },
    dark: { default: !1 },
    disabled: { default: !1 },
    isNav: { default: !1 },
    dropup: { default: !1 },
    dropright: { default: !1 },
    dropleft: { default: !1 },
    noFlip: { default: !1 },
    offset: { default: 0 },
    popperOpts: { default: () => ({}) },
    right: { default: !1 },
    role: { default: "menu" },
    split: { default: !1 },
    splitButtonType: { default: "button" },
    splitHref: { default: void 0 },
    noCaret: { default: !1 },
    toggleText: { default: "Toggle dropdown" },
    variant: { default: "secondary" }
  },
  emits: ["show", "shown", "hide", "hidden", "click", "toggle"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = r(o(l, "block")), i = r(o(l, "dark")), u = r(o(l, "disabled")), f = r(o(l, "dropup")), v = r(o(l, "dropright")), k = r(o(l, "isNav")), h = r(o(l, "dropleft")), y = r(o(l, "right")), $ = r(o(l, "split")), A = r(o(l, "noCaret")), _ = j(), g = j(), B = j(), p = de(o(l, "id"), "dropdown");
    ne(_, "show.bs.dropdown", () => a("show")), ne(_, "shown.bs.dropdown", () => a("shown")), ne(_, "hide.bs.dropdown", () => a("hide")), ne(_, "hidden.bs.dropdown", () => a("hidden"));
    const F = (w) => {
      $.value && a("click", w);
    }, T = d(() => ({
      "d-grid": n.value,
      "d-flex": n.value && $.value
    })), S = d(() => ({
      "nav-link": k.value,
      "dropdown-toggle": !$.value,
      "dropdown-toggle-no-caret": A.value && !$.value,
      "w-100": $.value && n.value
    })), b = d(() => ({
      "dropdown-menu-dark": i.value,
      "dropdown-menu-right": y.value
    })), V = d(() => ({
      "data-bs-toggle": $.value ? void 0 : "dropdown",
      "aria-expanded": $.value ? void 0 : !1,
      ref: $.value ? void 0 : g,
      href: $.value ? l.splitHref : void 0
    })), H = d(() => ({
      ref: $.value ? g : void 0
    })), O = () => {
      var w;
      (w = B.value) == null || w.hide();
    };
    return ue(() => {
      var w;
      B.value = new ul((w = g.value) == null ? void 0 : w.$el, {
        autoClose: l.autoClose,
        boundary: l.boundary,
        offset: l.offset ? l.offset.toString() : "",
        reference: l.offset || $.value ? "parent" : "toggle",
        popperConfig: (L) => {
          const W = {
            placement: "bottom-start",
            modifiers: l.noFlip ? [
              {
                name: "flip",
                options: {
                  fallbackPlacements: []
                }
              }
            ] : []
          };
          return f.value ? W.placement = y.value ? "top-end" : "top-start" : v.value ? W.placement = "right-start" : h.value ? W.placement = "left-start" : y.value && (W.placement = "bottom-end"), st(L, st(W, l.popperOpts));
        }
      });
    }), t({
      hide: O
    }), (w, L) => (c(), m("div", {
      ref_key: "parent",
      ref: _,
      class: I([s(T), "btn-group"])
    }, [
      pe(Ee, G({
        id: s(p),
        variant: e.splitVariant || e.variant,
        size: e.size,
        class: [s(S), s($) ? e.splitClass : e.toggleClass],
        disabled: s(u),
        type: e.splitButtonType
      }, s(V), { onClick: F }), {
        default: N(() => [
          ee(R(e.text) + " ", 1),
          C(w.$slots, "button-content")
        ]),
        _: 3
      }, 16, ["id", "variant", "size", "class", "disabled", "type"]),
      s($) ? (c(), z(Ee, G({
        key: 0,
        variant: e.variant,
        size: e.size,
        disabled: s(u)
      }, s(H), {
        class: [e.toggleClass, "dropdown-toggle-split dropdown-toggle"],
        "data-bs-toggle": "dropdown",
        "aria-expanded": "false",
        onClick: L[0] || (L[0] = (W) => a("toggle"))
      }), {
        default: N(() => [
          E("span", go, R(e.toggleText), 1)
        ]),
        _: 1
      }, 16, ["variant", "size", "disabled", "class"])) : P("", !0),
      E("ul", {
        class: I(["dropdown-menu", [e.menuClass, s(b)]]),
        "aria-labelledby": s(p),
        role: e.role
      }, [
        C(w.$slots, "default")
      ], 10, po)
    ], 2));
  }
}), ho = { role: "presentation" }, yo = /* @__PURE__ */ x({
  __name: "BDropdownDivider",
  props: {
    tag: { default: "hr" }
  },
  setup(e) {
    return (t, a) => (c(), m("li", ho, [
      (c(), z(q(e.tag), {
        class: "dropdown-divider",
        role: "separator",
        "aria-orientation": "horizontal"
      }))
    ]));
  }
}), Bo = {}, $o = { role: "presentation" }, ko = { class: "px-4 py-3" };
function So(e, t) {
  return c(), m("li", $o, [
    E("form", ko, [
      C(e.$slots, "default")
    ])
  ]);
}
const Co = /* @__PURE__ */ ce(Bo, [["render", So]]), To = { role: "presentation" }, wo = ["id", "aria-describedby"], Vo = {
  inheritAttrs: !1
}, _o = /* @__PURE__ */ x({
  ...Vo,
  __name: "BDropdownGroup",
  props: {
    id: null,
    ariaDescribedby: null,
    header: null,
    headerClasses: { default: void 0 },
    headerTag: { default: "header" },
    headerVariant: { default: void 0 }
  },
  setup(e) {
    const t = e, a = d(
      () => t.id ? [t.id, "group_dd_header"].join("_") : void 0
    ), l = d(
      () => t.headerTag === "header" ? void 0 : "heading"
    ), n = d(() => ({
      [`text-${t.headerVariant}`]: !!t.headerVariant
    }));
    return (i, u) => (c(), m("li", To, [
      (c(), z(q(e.headerTag), {
        id: s(a),
        class: I(["dropdown-header", [s(n), e.headerClasses]]),
        role: s(l)
      }, {
        default: N(() => [
          C(i.$slots, "header", {}, () => [
            ee(R(e.header), 1)
          ])
        ]),
        _: 3
      }, 8, ["id", "class", "role"])),
      E("ul", G({
        id: e.id,
        role: "group",
        class: "list-unstyled"
      }, i.$attrs, {
        "aria-describedby": e.ariaDescribedby || s(a)
      }), [
        C(i.$slots, "default")
      ], 16, wo)
    ]));
  }
}), xo = {}, Ao = { class: "dropdown-header" };
function Io(e, t) {
  return c(), m("li", null, [
    E("h6", Ao, [
      C(e.$slots, "default")
    ])
  ]);
}
const Fo = /* @__PURE__ */ ce(xo, [["render", Io]]), Oo = { role: "presentation" }, zo = {
  inheritAttrs: !1
}, Lo = /* @__PURE__ */ x({
  ...zo,
  __name: "BDropdownItem",
  props: {
    href: null,
    linkClass: null,
    active: { default: !1 },
    disabled: { default: !1 },
    rel: { default: void 0 },
    target: { default: "_self" },
    variant: { default: void 0 }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "active")), n = r(o(a, "disabled")), i = Ht(), u = d(() => ({
      active: l.value,
      disabled: n.value,
      [`text-${a.variant}`]: !!a.variant
    })), f = d(
      () => a.href ? "a" : i.to ? ve : "button"
    ), v = d(() => ({
      "aria-current": l.value ? "true" : null,
      href: f.value === "a" ? a.href : null,
      rel: a.rel,
      type: f.value === "button" ? "button" : null,
      target: a.target,
      ...i.to ? { activeClass: "active", ...i } : {}
    })), k = (h) => t("click", h);
    return (h, y) => (c(), m("li", Oo, [
      (c(), z(q(s(f)), G({
        class: ["dropdown-item", [s(u), e.linkClass]]
      }, s(v), { onClick: k }), {
        default: N(() => [
          C(h.$slots, "default")
        ]),
        _: 3
      }, 16, ["class"]))
    ]));
  }
}), No = { role: "presentation" }, Po = {
  inheritAttrs: !1
}, Eo = /* @__PURE__ */ x({
  ...Po,
  __name: "BDropdownItemButton",
  props: {
    buttonClass: null,
    active: { default: !1 },
    activeClass: { default: "active" },
    disabled: { default: !1 },
    variant: { default: void 0 }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "active")), n = r(o(a, "disabled")), i = d(() => ({
      [a.activeClass]: l.value,
      disabled: n.value,
      [`text-${a.variant}`]: !!a.variant
    })), u = d(() => ({
      role: "menuitem",
      type: "button",
      disabled: n.value
    })), f = (v) => t("click", v);
    return (v, k) => (c(), m("li", No, [
      E("button", G({
        class: ["dropdown-item", [s(i), e.buttonClass]]
      }, s(u), { onClick: f }), [
        C(v.$slots, "default")
      ], 16)
    ]));
  }
}), Ho = {}, qo = { role: "presentation" }, Do = { class: "px-4 py-1 mb-0 text-muted" };
function jo(e, t) {
  return c(), m("li", qo, [
    E("p", Do, [
      C(e.$slots, "default")
    ])
  ]);
}
const Ro = /* @__PURE__ */ ce(Ho, [["render", jo]]), Mo = ["id", "novalidate", "onSubmit"], Sa = /* @__PURE__ */ x({
  __name: "BForm",
  props: {
    id: null,
    floating: { default: !1 },
    novalidate: { default: !1 },
    validated: { default: !1 }
  },
  emits: ["submit"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "floating")), n = r(o(a, "novalidate")), i = r(o(a, "validated")), u = d(() => ({
      "form-floating": l.value,
      "was-validated": i.value
    })), f = (v) => t("submit", v);
    return (v, k) => (c(), m("form", {
      id: e.id,
      novalidate: s(n),
      class: I(s(u)),
      onSubmit: pt(f, ["prevent"])
    }, [
      C(v.$slots, "default")
    ], 42, Mo));
  }
}), Go = { class: "form-floating" }, Uo = ["for"], Wo = /* @__PURE__ */ x({
  __name: "BFormFloatingLabel",
  props: {
    labelFor: null,
    label: null
  },
  setup(e) {
    return (t, a) => (c(), m("div", Go, [
      C(t.$slots, "default"),
      E("label", { for: e.labelFor }, R(e.label), 9, Uo)
    ]));
  }
}), ct = /* @__PURE__ */ x({
  __name: "BFormInvalidFeedback",
  props: {
    ariaLive: null,
    forceShow: { default: !1 },
    id: null,
    role: null,
    state: { default: void 0 },
    tag: { default: "div" },
    tooltip: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(o(t, "forceShow")), l = t.state !== void 0 ? r(o(t, "state")) : d(() => {
    }), n = r(o(t, "tooltip")), i = d(
      () => a.value === !0 || l.value === !1
    ), u = d(() => ({
      "d-block": i.value,
      "invalid-feedback": !n.value,
      "invalid-tooltip": n.value
    })), f = d(() => ({
      id: t.id || null,
      role: t.role || null,
      "aria-live": t.ariaLive || null,
      "aria-atomic": t.ariaLive ? "true" : null
    }));
    return (v, k) => (c(), z(q(e.tag), G({ class: s(u) }, s(f)), {
      default: N(() => [
        C(v.$slots, "default")
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), je = /* @__PURE__ */ x({
  __name: "BFormRow",
  props: {
    tag: { default: "div" }
  },
  setup(e) {
    return (t, a) => (c(), z(q(e.tag), { class: "row d-flex flex-wrap" }, {
      default: N(() => [
        C(t.$slots, "default")
      ]),
      _: 3
    }));
  }
}), ft = /* @__PURE__ */ x({
  __name: "BFormText",
  props: {
    id: null,
    inline: { default: !1 },
    tag: { default: "small" },
    textVariant: { default: "muted" }
  },
  setup(e) {
    const t = e, a = r(o(t, "inline")), l = d(() => ({
      "form-text": !a.value,
      [`text-${t.textVariant}`]: !!t.textVariant
    })), n = d(() => ({
      id: t.id || null
    }));
    return (i, u) => (c(), z(q(e.tag), G({ class: s(l) }, s(n)), {
      default: N(() => [
        C(i.$slots, "default")
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), vt = /* @__PURE__ */ x({
  __name: "BFormValidFeedback",
  props: {
    ariaLive: null,
    forceShow: { default: !1 },
    id: null,
    role: null,
    state: { default: void 0 },
    tag: { default: "div" },
    tooltip: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(o(t, "forceShow")), l = t.state !== void 0 ? r(o(t, "state")) : d(() => {
    }), n = r(o(t, "tooltip")), i = d(
      () => a.value === !0 || l.value === !0
    ), u = d(() => ({
      "d-block": i.value,
      "valid-feedback": !n.value,
      "valid-tooltip": n.value
    })), f = d(() => ({
      id: t.id || null,
      role: t.role || null,
      "aria-live": t.ariaLive || null,
      "aria-atomic": t.ariaLive ? "true" : null
    }));
    return (v, k) => (c(), z(q(e.tag), G({ class: s(u) }, s(f)), {
      default: N(() => [
        C(v.$slots, "default")
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), Xo = ["id", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "aria-required", "value", "indeterminate"], Ko = ["for"], Jo = {
  inheritAttrs: !1
}, Ca = /* @__PURE__ */ x({
  ...Jo,
  __name: "BFormCheckbox",
  props: {
    ariaLabel: null,
    ariaLabelledBy: null,
    form: null,
    indeterminate: null,
    name: null,
    id: { default: void 0 },
    autofocus: { default: !1 },
    plain: { default: !1 },
    button: { default: !1 },
    switch: { default: !1 },
    disabled: { default: !1 },
    buttonVariant: { default: "secondary" },
    inline: { default: !1 },
    required: { default: void 0 },
    size: { default: "md" },
    state: { default: void 0 },
    uncheckedValue: { type: [Array, Set, Boolean, String, Object, Number], default: !1 },
    value: { type: [Array, Set, Boolean, String, Object, Number], default: !0 },
    modelValue: { type: [Array, Set, Boolean, String, Object, Number], default: void 0 }
  },
  emits: ["update:modelValue", "input", "change"],
  setup(e, { emit: t }) {
    const a = e, l = a.indeterminate !== void 0 ? r(o(a, "indeterminate")) : d(() => {
    }), n = r(o(a, "autofocus")), i = r(o(a, "plain")), u = r(o(a, "button")), f = r(o(a, "switch")), v = r(o(a, "disabled")), k = r(o(a, "inline")), h = a.required !== void 0 ? r(o(a, "required")) : d(() => {
    }), y = a.state !== void 0 ? r(o(a, "state")) : d(() => {
    }), $ = de(o(a, "id"), "form-check"), A = j(null), _ = j(!1), g = d({
      get: () => a.uncheckedValue ? Array.isArray(a.modelValue) ? a.modelValue.indexOf(a.value) > -1 : a.modelValue === a.value : a.modelValue,
      set: (b) => {
        let V = b;
        Array.isArray(a.modelValue) ? a.uncheckedValue && (V = a.modelValue, b ? (V.indexOf(a.uncheckedValue) > -1 && V.splice(V.indexOf(a.uncheckedValue), 1), V.push(a.value)) : (V.indexOf(a.value) > -1 && V.splice(V.indexOf(a.value), 1), V.push(a.uncheckedValue))) : V = b ? a.value : a.uncheckedValue, t("input", V), t("update:modelValue", V), t("change", V);
      }
    }), B = d(() => Array.isArray(a.modelValue) ? a.modelValue.indexOf(a.value) > -1 : JSON.stringify(a.modelValue) === JSON.stringify(a.value)), p = Be({
      plain: o(i, "value"),
      button: o(u, "value"),
      inline: o(k, "value"),
      switch: o(f, "value"),
      size: o(a, "size"),
      state: o(y, "value"),
      buttonVariant: o(a, "buttonVariant")
    }), F = ea(p), T = ta(p), S = aa(p);
    return ue(() => {
      n.value && A.value.focus();
    }), (b, V) => (c(), m("div", {
      class: I(s(F))
    }, [
      Te(E("input", G({ id: s($) }, b.$attrs, {
        ref_key: "input",
        ref: A,
        "onUpdate:modelValue": V[0] || (V[0] = (H) => He(g) ? g.value = H : null),
        class: s(T),
        type: "checkbox",
        disabled: s(v),
        required: !!e.name && !!s(h),
        name: e.name,
        form: e.form,
        "aria-label": e.ariaLabel,
        "aria-labelledby": e.ariaLabelledBy,
        "aria-required": e.name && s(h) ? "true" : void 0,
        value: e.value,
        indeterminate: s(l),
        onFocus: V[1] || (V[1] = (H) => _.value = !0),
        onBlur: V[2] || (V[2] = (H) => _.value = !1)
      }), null, 16, Xo), [
        [tl, s(g)]
      ]),
      b.$slots.default || !s(i) ? (c(), m("label", {
        key: 0,
        for: s($),
        class: I([s(S), { active: s(B), focus: _.value }])
      }, [
        C(b.$slots, "default")
      ], 10, Ko)) : P("", !0)
    ], 2));
  }
}), Yo = ["id"], Zo = ["innerHTML"], Qo = ["textContent"], es = /* @__PURE__ */ x({
  __name: "BFormCheckboxGroup",
  props: {
    id: null,
    form: null,
    modelValue: { default: () => [] },
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    name: null,
    options: { default: () => [] },
    plain: { default: !1 },
    required: { default: !1 },
    size: null,
    stacked: { default: !1 },
    state: { default: void 0 },
    switches: { default: !1 },
    textField: { default: "text" },
    validated: { default: !1 },
    valueField: { default: "value" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = e;
    r(o(a, "autofocus"));
    const l = r(o(a, "buttons")), n = r(o(a, "disabled"));
    r(o(a, "plain"));
    const i = r(o(a, "required")), u = r(o(a, "stacked")), f = a.state !== void 0 ? r(o(a, "state")) : d(() => {
    }), v = r(o(a, "switches")), k = r(o(a, "validated")), h = we(), y = "BFormCheckbox", $ = de(o(a, "id"), "checkbox"), A = de(o(a, "name"), "checkbox"), _ = d({
      get: () => a.modelValue,
      set: (T) => {
        if (JSON.stringify(T) === JSON.stringify(a.modelValue))
          return;
        const S = a.options.filter(
          (b) => T.map((V) => JSON.stringify(V)).includes(JSON.stringify(typeof b == "string" ? b : b[a.valueField]))
        ).map((b) => typeof b == "string" ? b : b[a.valueField]);
        t("input", S), t("update:modelValue", S), t("change", S);
      }
    }), g = d(
      () => (h.first ? Ge(h.first(), y, n.value) : []).concat(a.options.map((T) => oa(T, a))).concat(h.default ? Ge(h.default(), y, n.value) : []).map((T, S) => sa(T, S, a, A, $)).map((T) => ({
        ...T,
        props: {
          switch: v.value,
          ...T.props
        }
      }))
    ), B = Be({
      required: o(i, "value"),
      ariaInvalid: o(a, "ariaInvalid"),
      state: o(f, "value"),
      validated: o(k, "value"),
      buttons: o(l, "value"),
      stacked: o(u, "value"),
      size: o(a, "size")
    }), p = la(B), F = na(B);
    return (T, S) => (c(), m("div", G(s(p), {
      id: s($),
      role: "group",
      class: [s(F), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      (c(!0), m(Q, null, ae(s(g), (b, V) => (c(), z(Ca, G({
        key: V,
        modelValue: s(_),
        "onUpdate:modelValue": S[0] || (S[0] = (H) => He(_) ? _.value = H : null)
      }, b.props), {
        default: N(() => [
          b.html ? (c(), m("span", {
            key: 0,
            innerHTML: b.html
          }, null, 8, Zo)) : (c(), m("span", {
            key: 1,
            textContent: R(b.text)
          }, null, 8, Qo))
        ]),
        _: 2
      }, 1040, ["modelValue"]))), 128))
    ], 16, Yo));
  }
}), Ta = ["input", "select", "textarea"], ts = Ta.map((e) => `${e}:not([disabled])`).join(), as = [...Ta, "a", "button", "label"], ls = "label", ns = "invalid-feedback", os = "valid-feedback", ss = "description", is = "default", rs = x({
  components: { BCol: Ne, BFormInvalidFeedback: ct, BFormRow: je, BFormText: ft, BFormValidFeedback: vt },
  props: {
    contentCols: { type: [Boolean, String, Number], required: !1 },
    contentColsLg: { type: [Boolean, String, Number], required: !1 },
    contentColsMd: { type: [Boolean, String, Number], required: !1 },
    contentColsSm: { type: [Boolean, String, Number], required: !1 },
    contentColsXl: { type: [Boolean, String, Number], required: !1 },
    description: { type: [String], required: !1 },
    disabled: { type: [Boolean, String], default: !1 },
    feedbackAriaLive: { type: String, default: "assertive" },
    id: { type: String, required: !1 },
    invalidFeedback: { type: String, required: !1 },
    label: { type: String, required: !1 },
    labelAlign: { type: [Boolean, String, Number], required: !1 },
    labelAlignLg: { type: [Boolean, String, Number], required: !1 },
    labelAlignMd: { type: [Boolean, String, Number], required: !1 },
    labelAlignSm: { type: [Boolean, String, Number], required: !1 },
    labelAlignXl: { type: [Boolean, String, Number], required: !1 },
    labelClass: { type: [Array, Object, String], required: !1 },
    labelCols: { type: [Boolean, String, Number], required: !1 },
    labelColsLg: { type: [Boolean, String, Number], required: !1 },
    labelColsMd: { type: [Boolean, String, Number], required: !1 },
    labelColsSm: { type: [Boolean, String, Number], required: !1 },
    labelColsXl: { type: [Boolean, String, Number], required: !1 },
    labelFor: { type: String, required: !1 },
    labelSize: { type: String, required: !1 },
    labelSrOnly: { type: [Boolean, String], default: !1 },
    state: { type: [Boolean, String], default: null },
    tooltip: { type: [Boolean, String], default: !1 },
    validFeedback: { type: String, required: !1 },
    validated: { type: [Boolean, String], default: !1 },
    floating: { type: [Boolean, String], default: !1 }
  },
  setup(e, { attrs: t }) {
    const a = r(o(e, "disabled")), l = r(o(e, "labelSrOnly")), n = r(o(e, "state")), i = r(o(e, "tooltip")), u = r(o(e, "validated")), f = r(o(e, "floating")), v = null, k = ["xs", "sm", "md", "lg", "xl"], h = (V, H) => k.reduce((O, w) => {
      const L = V[Tt(w, `${H}Align`)] || null;
      return L && O.push(["text", w, L].filter((W) => W).join("-")), O;
    }, []), y = (V, H) => k.reduce((O, w) => {
      let L = V[Tt(w, `${H}Cols`)];
      return L = L === "" ? !0 : L || !1, !tt(L) && L !== "auto" && (L = Pl(L, 0), L = L > 0 ? L : !1), L && (O[w || (tt(L) ? "col" : "cols")] = L), O;
    }, {}), $ = j(), A = (V, H = null) => {
      if (Bl && e.labelFor) {
        const O = Vl(`#${hl(e.labelFor)}`, $);
        if (O) {
          const w = "aria-describedby", L = (V || "").split(De), W = (H || "").split(De), Z = (Gt(O, w) || "").split(De).filter((Y) => !ml(W, Y)).concat(L).filter((Y, D, le) => le.indexOf(Y) === D).filter((Y) => Y).join(" ").trim();
          Z ? xl(O, w, Z) : Al(O, w);
        }
      }
    }, _ = d(() => y(e, "content")), g = d(() => h(e, "label")), B = d(() => y(e, "label")), p = d(
      () => Object.keys(_.value).length > 0 || Object.keys(B.value).length > 0
    ), F = d(
      () => tt(n.value) ? n.value : null
    ), T = d(() => {
      const V = F.value;
      return V === !0 ? "is-valid" : V === !1 ? "is-invalid" : null;
    }), S = d(
      () => Ye(t.ariaInvalid, n.value)
    );
    return ie(
      () => v,
      (V, H) => {
        V !== H && A(V, H);
      }
    ), ue(() => {
      ke(() => {
        A(v);
      });
    }), {
      disabledBoolean: a,
      labelSrOnlyBoolean: l,
      stateBoolean: n,
      tooltipBoolean: i,
      validatedBoolean: u,
      floatingBoolean: f,
      ariaDescribedby: v,
      computedAriaInvalid: S,
      contentColProps: _,
      isHorizontal: p,
      labelAlignClasses: g,
      labelColProps: B,
      onLegendClick: (V) => {
        if (e.labelFor)
          return;
        const { target: H } = V, O = H ? H.tagName : "";
        if (as.indexOf(O) !== -1)
          return;
        const w = _l(ts, $).filter(wl);
        w.length === 1 && Cl(w[0]);
      },
      stateClass: T
    };
  },
  render() {
    const e = this.$props, t = this.$slots, a = de(), l = !e.labelFor;
    let n = null;
    const i = fe(ls, {}, t) || e.label, u = i ? ye("_BV_label_") : null;
    if (i || this.isHorizontal) {
      const S = l ? "legend" : "label";
      if (this.labelSrOnlyBoolean)
        i && (n = X(
          S,
          {
            class: "visually-hidden",
            id: u,
            for: e.labelFor || null
          },
          i
        )), this.isHorizontal ? n = X(Ne, this.labelColProps, { default: () => n }) : n = X("div", {}, [n]);
      else {
        const b = {
          onClick: l ? this.onLegendClick : null,
          ...this.isHorizontal ? this.labelColProps : {},
          tag: this.isHorizontal ? S : null,
          id: u,
          for: e.labelFor || null,
          tabIndex: l ? "-1" : null,
          class: [
            this.isHorizontal ? "col-form-label" : "form-label",
            {
              "bv-no-focus-ring": l,
              "col-form-label": this.isHorizontal || l,
              "pt-0": !this.isHorizontal && l,
              "d-block": !this.isHorizontal && !l,
              [`col-form-label-${e.labelSize}`]: !!e.labelSize
            },
            this.labelAlignClasses,
            e.labelClass
          ]
        };
        this.isHorizontal ? n = X(Ne, b, { default: () => i }) : n = X(S, b, i);
      }
    }
    let f = null;
    const v = fe(ns, {}, t) || this.invalidFeedback, k = v ? ye("_BV_feedback_invalid_") : void 0;
    v && (f = X(
      ct,
      {
        ariaLive: e.feedbackAriaLive,
        id: k,
        state: this.stateBoolean,
        tooltip: this.tooltipBoolean
      },
      { default: () => v }
    ));
    let h = null;
    const y = fe(os, {}, t) || this.validFeedback, $ = y ? ye("_BV_feedback_valid_") : void 0;
    y && (h = X(
      vt,
      {
        ariaLive: e.feedbackAriaLive,
        id: $,
        state: this.stateBoolean,
        tooltip: this.tooltipBoolean
      },
      { default: () => y }
    ));
    let A = null;
    const _ = fe(ss, {}, t) || this.description, g = _ ? ye("_BV_description_") : void 0;
    _ && (A = X(
      ft,
      {
        id: g
      },
      { default: () => _ }
    ));
    const B = this.ariaDescribedby = [
      g,
      this.stateBoolean === !1 ? k : null,
      this.stateBoolean === !0 ? $ : null
    ].filter((S) => S).join(" ") || null, p = [
      fe(is, { ariaDescribedby: B, descriptionId: g, id: a, labelId: u }, t) || "",
      f,
      h,
      A
    ];
    !this.isHorizontal && this.floatingBoolean && p.push(n);
    let F = X(
      "div",
      {
        ref: "content",
        class: [
          {
            "form-floating": !this.isHorizontal && this.floatingBoolean
          }
        ]
      },
      p
    );
    this.isHorizontal && (F = X(Ne, { ref: "content", ...this.contentColProps }, { default: () => p }));
    const T = {
      class: [
        "mb-3",
        this.stateClass,
        {
          "was-validated": this.validatedBoolean
        }
      ],
      id: de(o(e, "id")).value,
      disabled: l ? this.disabledBoolean : null,
      role: l ? null : "group",
      "aria-invalid": this.computedAriaInvalid,
      "aria-labelledby": l && this.isHorizontal ? u : null
    };
    return this.isHorizontal && !l ? X(je, T, { default: () => [n, F] }) : X(
      l ? "fieldset" : "div",
      T,
      this.isHorizontal && l ? [X(je, {}, { default: () => [n, F] })] : this.isHorizontal || !this.floatingBoolean ? [n, F] : [F]
    );
  }
}), Ot = [
  "text",
  "number",
  "email",
  "password",
  "search",
  "url",
  "tel",
  "date",
  "time",
  "range",
  "color"
], us = x({
  props: {
    ...ia,
    max: { type: [String, Number], required: !1 },
    min: { type: [String, Number], required: !1 },
    step: { type: [String, Number], required: !1 },
    type: {
      type: String,
      default: "text",
      validator: (e) => Ot.includes(e)
    }
  },
  emits: ["update:modelValue", "change", "blur", "input"],
  setup(e, { emit: t }) {
    const a = d(() => {
      const $ = e.type === "range", A = e.type === "color";
      return {
        "form-range": $,
        "form-control": A || !e.plaintext && !$,
        "form-control-color": A,
        "form-control-plaintext": e.plaintext && !$ && !A,
        [`form-control-${e.size}`]: !!e.size,
        "is-valid": e.state === !0,
        "is-invalid": e.state === !1
      };
    }), l = d(
      () => Ot.includes(e.type) ? e.type : "text"
    ), { input: n, computedId: i, computedAriaInvalid: u, onInput: f, onChange: v, onBlur: k, focus: h, blur: y } = ra(e, t);
    return {
      classes: a,
      localType: l,
      input: n,
      computedId: i,
      computedAriaInvalid: u,
      onInput: f,
      onChange: v,
      onBlur: k,
      focus: h,
      blur: y
    };
  }
}), ds = ["id", "name", "form", "type", "disabled", "placeholder", "required", "autocomplete", "readonly", "min", "max", "step", "list", "aria-required", "aria-invalid"];
function cs(e, t, a, l, n, i) {
  return c(), m("input", G({
    id: e.computedId,
    ref: "input",
    class: e.classes,
    name: e.name || void 0,
    form: e.form || void 0,
    type: e.localType,
    disabled: e.disabled,
    placeholder: e.placeholder,
    required: e.required,
    autocomplete: e.autocomplete || void 0,
    readonly: e.readonly || e.plaintext,
    min: e.min,
    max: e.max,
    step: e.step,
    list: e.type !== "password" ? e.list : void 0,
    "aria-required": e.required ? "true" : void 0,
    "aria-invalid": e.computedAriaInvalid
  }, e.$attrs, {
    onInput: t[0] || (t[0] = (u) => e.onInput(u)),
    onChange: t[1] || (t[1] = (u) => e.onChange(u)),
    onBlur: t[2] || (t[2] = (u) => e.onBlur(u))
  }), null, 16, ds);
}
const fs = /* @__PURE__ */ ce(us, [["render", cs]]), vs = ["id", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "value", "aria-required"], bs = ["for"], wa = /* @__PURE__ */ x({
  __name: "BFormRadio",
  props: {
    ariaLabel: null,
    ariaLabelledBy: null,
    form: null,
    id: null,
    name: null,
    size: null,
    autofocus: { default: !1 },
    modelValue: { type: [Boolean, String, Array, Object, Number], default: void 0 },
    plain: { default: !1 },
    button: { default: !1 },
    switch: { default: !1 },
    disabled: { default: !1 },
    buttonVariant: { default: "secondary" },
    inline: { default: !1 },
    required: { default: !1 },
    state: { default: void 0 },
    value: { type: [String, Boolean, Object, Number], default: !0 }
  },
  emits: ["input", "change", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "autofocus")), n = r(o(a, "plain")), i = r(o(a, "button")), u = r(o(a, "switch")), f = r(o(a, "disabled")), v = r(o(a, "inline")), k = r(o(a, "required")), h = a.state !== void 0 ? r(o(a, "state")) : d(() => {
    }), y = de(o(a, "id"), "form-check"), $ = j(null), A = j(!1), _ = d({
      get: () => Array.isArray(a.modelValue) ? a.modelValue[0] : a.modelValue,
      set: (S) => {
        const b = S ? a.value : !1, V = Array.isArray(a.modelValue) ? [b] : b;
        t("input", V), t("change", V), t("update:modelValue", V);
      }
    }), g = d(() => Array.isArray(a.modelValue) ? (a.modelValue || []).find((S) => S === a.value) : JSON.stringify(a.modelValue) === JSON.stringify(a.value)), B = Be({
      plain: o(n, "value"),
      button: o(i, "value"),
      inline: o(v, "value"),
      switch: o(u, "value"),
      size: o(a, "size"),
      state: o(h, "value"),
      buttonVariant: o(a, "buttonVariant")
    }), p = ea(B), F = ta(B), T = aa(B);
    return ue(() => {
      l.value && $.value.focus();
    }), (S, b) => (c(), m("div", {
      class: I(s(p))
    }, [
      Te(E("input", G({ id: s(y) }, S.$attrs, {
        ref_key: "input",
        ref: $,
        "onUpdate:modelValue": b[0] || (b[0] = (V) => He(_) ? _.value = V : null),
        class: s(F),
        type: "radio",
        disabled: s(f),
        required: !!e.name && !!s(k),
        name: e.name,
        form: e.form,
        "aria-label": e.ariaLabel,
        "aria-labelledby": e.ariaLabelledBy,
        value: e.value,
        "aria-required": e.name && s(k) ? !0 : void 0,
        onFocus: b[1] || (b[1] = (V) => A.value = !0),
        onBlur: b[2] || (b[2] = (V) => A.value = !1)
      }), null, 16, vs), [
        [al, s(_)]
      ]),
      S.$slots.default || !s(n) ? (c(), m("label", {
        key: 0,
        for: s(y),
        class: I([s(T), { active: s(g), focus: A.value }])
      }, [
        C(S.$slots, "default")
      ], 10, bs)) : P("", !0)
    ], 2));
  }
}), ms = ["id"], gs = ["innerHTML"], ps = ["textContent"], hs = /* @__PURE__ */ x({
  __name: "BFormRadioGroup",
  props: {
    size: null,
    form: null,
    id: null,
    name: null,
    modelValue: { type: [String, Boolean, Array, Object, Number], default: "" },
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    options: { default: () => [] },
    plain: { default: !1 },
    required: { default: !1 },
    stacked: { default: !1 },
    state: { default: void 0 },
    textField: { default: "text" },
    validated: { default: !1 },
    valueField: { default: "value" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = e;
    r(o(a, "autofocus"));
    const l = r(o(a, "buttons")), n = r(o(a, "disabled"));
    r(o(a, "plain"));
    const i = r(o(a, "required")), u = r(o(a, "stacked")), f = a.state !== void 0 ? r(o(a, "state")) : d(() => {
    }), v = r(o(a, "validated")), k = we(), h = "BFormRadio", y = de(o(a, "id"), "radio"), $ = de(o(a, "name"), "checkbox"), A = d({
      get: () => a.modelValue,
      set: (F) => {
        t("input", F), t("update:modelValue", F), t("change", F);
      }
    }), _ = d(
      () => (k.first ? Ge(k.first(), h, n.value) : []).concat(a.options.map((F) => oa(F, a))).concat(k.default ? Ge(k.default(), h, n.value) : []).map((F, T) => sa(F, T, a, $, y)).map((F) => ({
        ...F
      }))
    ), g = Be({
      required: o(i, "value"),
      ariaInvalid: o(a, "ariaInvalid"),
      state: o(f, "value"),
      validated: o(v, "value"),
      buttons: o(l, "value"),
      stacked: o(u, "value"),
      size: o(a, "size")
    }), B = la(g), p = na(g);
    return (F, T) => (c(), m("div", G(s(B), {
      id: s(y),
      role: "radiogroup",
      class: [s(p), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      (c(!0), m(Q, null, ae(s(_), (S, b) => (c(), z(wa, G({
        key: b,
        modelValue: s(A),
        "onUpdate:modelValue": T[0] || (T[0] = (V) => He(A) ? A.value = V : null)
      }, S.props), {
        default: N(() => [
          S.html ? (c(), m("span", {
            key: 0,
            innerHTML: S.html
          }, null, 8, gs)) : (c(), m("span", {
            key: 1,
            textContent: R(S.text)
          }, null, 8, ps))
        ]),
        _: 2
      }, 1040, ["modelValue"]))), 128))
    ], 16, ms));
  }
}), ys = ["value", "disabled"], $t = /* @__PURE__ */ x({
  __name: "BFormSelectOption",
  props: {
    value: null,
    disabled: { default: !1 }
  },
  setup(e) {
    const a = r(o(e, "disabled"));
    return (l, n) => {
      var i;
      return c(), m("option", {
        value: (i = e.value) != null ? i : "",
        disabled: s(a)
      }, [
        C(l.$slots, "default")
      ], 8, ys);
    };
  }
}), Bs = ["label"], Va = /* @__PURE__ */ x({
  __name: "BFormSelectOptionGroup",
  props: {
    label: null,
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    options: { default: () => [] },
    textField: { default: "text" },
    valueField: { default: "value" }
  },
  setup(e) {
    const t = e, a = d(
      () => yt(t.options, "BFormSelectOptionGroup", t)
    );
    return (l, n) => (c(), m("optgroup", { label: e.label }, [
      C(l.$slots, "first"),
      (c(!0), m(Q, null, ae(s(a), (i, u) => (c(), z($t, G({
        key: `option_${u}`,
        value: i.value,
        disabled: i.disabled
      }, l.$attrs, {
        innerHTML: i.html || i.text
      }), null, 16, ["value", "disabled", "innerHTML"]))), 128)),
      C(l.$slots, "default")
    ], 8, Bs));
  }
}), $s = ["id", "name", "form", "multiple", "size", "disabled", "required", "aria-required", "aria-invalid"], ks = /* @__PURE__ */ x({
  __name: "BFormSelect",
  props: {
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    form: null,
    htmlField: { default: "html" },
    id: null,
    labelField: { default: "label" },
    multiple: { default: !1 },
    name: null,
    options: { default: () => [] },
    optionsField: { default: "options" },
    plain: { default: !1 },
    required: { default: !1 },
    selectSize: { default: 0 },
    size: null,
    state: { default: void 0 },
    textField: { default: "text" },
    valueField: { default: "value" },
    modelValue: { default: "" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = r(o(l, "autofocus")), i = r(o(l, "disabled")), u = r(o(l, "multiple")), f = r(o(l, "plain")), v = r(o(l, "required")), k = l.state !== void 0 ? r(o(l, "state")) : d(() => {
    }), h = j(), y = de(o(l, "id"), "input"), $ = () => {
      ke(() => {
        var S;
        n.value && ((S = h.value) == null || S.focus());
      });
    };
    ue($), mt($);
    const A = d(() => ({
      "form-control": f.value,
      [`form-control-${l.size}`]: l.size && f.value,
      "form-select": !f.value,
      [`form-select-${l.size}`]: l.size && !f.value,
      "is-valid": k.value === !0,
      "is-invalid": k.value === !1
    })), _ = d(() => {
      if (l.selectSize || f.value)
        return l.selectSize;
    }), g = d(
      () => Ye(l.ariaInvalid, k.value)
    ), B = d(
      () => yt(l.options, "BFormSelect", l)
    ), p = d({
      get() {
        return l.modelValue;
      },
      set(S) {
        a("change", S), a("update:modelValue", S), a("input", S);
      }
    });
    return t({
      blur: () => {
        var S;
        i.value || (S = h.value) == null || S.blur();
      },
      focus: () => {
        var S;
        i.value || (S = h.value) == null || S.focus();
      }
    }), (S, b) => Te((c(), m("select", G({
      id: s(y),
      ref_key: "input",
      ref: h
    }, S.$attrs, {
      "onUpdate:modelValue": b[0] || (b[0] = (V) => He(p) ? p.value = V : null),
      class: s(A),
      name: e.name,
      form: e.form || void 0,
      multiple: s(u) || void 0,
      size: s(_),
      disabled: s(i),
      required: s(v),
      "aria-required": s(v) ? !0 : void 0,
      "aria-invalid": s(g)
    }), [
      C(S.$slots, "first"),
      (c(!0), m(Q, null, ae(s(B), (V, H) => (c(), m(Q, null, [
        Array.isArray(V.options) ? (c(), z(Va, {
          key: `option_${H}`,
          label: V.label,
          options: V.options
        }, null, 8, ["label", "options"])) : (c(), z($t, {
          key: `option2_${H}`,
          value: V.value,
          disabled: V.disabled,
          innerHTML: V.html || V.text
        }, null, 8, ["value", "disabled", "innerHTML"]))
      ], 64))), 256)),
      C(S.$slots, "default")
    ], 16, $s)), [
      [ll, s(p)]
    ]);
  }
}), Ss = ["id"], Cs = ["aria-label", "aria-controls", "aria-describedby"], _a = /* @__PURE__ */ x({
  __name: "BFormTag",
  props: {
    id: null,
    title: null,
    disabled: { default: !1 },
    noRemove: { default: !1 },
    pill: { default: !1 },
    removeLabel: { default: "Remove tag" },
    tag: { default: "span" },
    variant: { default: "secondary" }
  },
  emits: ["remove"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "disabled")), n = r(o(a, "noRemove")), i = r(o(a, "pill")), u = we(), f = d(
      () => {
        var y, $, A;
        return (A = (($ = (y = u.default) == null ? void 0 : y.call(u)[0].children) == null ? void 0 : $.toString()) || a.title) != null ? A : "";
      }
    ), v = de(o(a, "id")), k = d(() => `${v.value}taglabel__`), h = d(() => [
      `bg-${a.variant}`,
      {
        "text-dark": ["warning", "info", "light"].includes(a.variant),
        "rounded-pill": i.value,
        disabled: l.value
      }
    ]);
    return (y, $) => (c(), z(q(e.tag), {
      id: s(v),
      title: s(f),
      class: I(["badge b-form-tag d-inline-flex align-items-center mw-100", s(h)]),
      "aria-labelledby": s(k)
    }, {
      default: N(() => [
        E("span", {
          id: s(k),
          class: "b-form-tag-content flex-grow-1 text-truncate"
        }, [
          C(y.$slots, "default", {}, () => [
            ee(R(s(f)), 1)
          ])
        ], 8, Ss),
        !s(l) && !s(n) ? (c(), m("button", {
          key: 0,
          "aria-keyshortcuts": "Delete",
          type: "button",
          "aria-label": e.removeLabel,
          class: I(["btn-close b-form-tag-remove", {
            "btn-close-white": !["warning", "info", "light"].includes(e.variant)
          }]),
          "aria-controls": e.id,
          "aria-describedby": s(k),
          onClick: $[0] || ($[0] = (A) => t("remove", s(f)))
        }, null, 10, Cs)) : P("", !0)
      ]),
      _: 3
    }, 8, ["id", "title", "class", "aria-labelledby"]));
  }
}), Ts = ["id"], ws = ["id", "for", "aria-live"], Vs = ["id", "aria-live"], _s = ["id"], xs = ["aria-controls"], As = {
  role: "group",
  class: "d-flex"
}, Is = ["id", "disabled", "value", "type", "placeholder", "form", "required"], Fs = ["disabled"], Os = {
  "aria-live": "polite",
  "aria-atomic": "true"
}, zs = {
  key: 0,
  class: "d-block invalid-feedback"
}, Ls = {
  key: 1,
  class: "form-text text-muted"
}, Ns = {
  key: 2,
  class: "form-text text-muted"
}, Ps = ["name", "value"], Es = /* @__PURE__ */ x({
  __name: "BFormTags",
  props: {
    addButtonText: { default: "Add" },
    addButtonVariant: { default: "outline-secondary" },
    addOnChange: { default: !1 },
    autofocus: { default: !1 },
    disabled: { default: !1 },
    duplicateTagText: { default: "Duplicate tag(s)" },
    inputAttrs: null,
    inputClass: null,
    inputId: null,
    inputType: { default: "text" },
    invalidTagText: { default: "Invalid tag(s)" },
    form: null,
    limit: null,
    limitTagsText: { default: "Tag limit reached" },
    modelValue: { default: () => [] },
    name: null,
    noAddOnEnter: { default: !1 },
    noOuterFocus: { default: !1 },
    noTagRemove: { default: !1 },
    placeholder: { default: "Add tag..." },
    removeOnDelete: { default: !1 },
    required: { default: !1 },
    separator: null,
    state: { default: void 0 },
    size: null,
    tagClass: null,
    tagPills: { default: !1 },
    tagRemoveLabel: null,
    tagRemovedLabel: { default: "Tag removed" },
    tagValidator: { type: Function, default: () => !0 },
    tagVariant: { default: "secondary" }
  },
  emits: ["update:modelValue", "input", "tag-state", "focus", "focusin", "focusout", "blur"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "addOnChange")), n = r(o(a, "autofocus")), i = r(o(a, "disabled")), u = r(o(a, "noAddOnEnter")), f = r(o(a, "noOuterFocus")), v = r(o(a, "noTagRemove")), k = r(o(a, "removeOnDelete")), h = r(o(a, "required")), y = a.state !== void 0 ? r(o(a, "state")) : d(() => {
    }), $ = r(o(a, "tagPills")), A = j(null), _ = de(), g = d(() => a.inputId || `${_.value}input__`);
    ue(() => {
      Y(), a.modelValue.length > 0 && (F.value = !0);
    }), mt(() => Y()), ie(
      () => a.modelValue,
      (M) => {
        B.value = M;
      }
    );
    const B = j(a.modelValue), p = j(""), F = j(!1), T = j(!1), S = j(""), b = j([]), V = j([]), H = j([]), O = d(() => ({
      [`form-control-${a.size}`]: a.size !== void 0,
      disabled: i.value,
      focus: T.value,
      "is-invalid": y.value === !1,
      "is-valid": y.value === !0
    })), w = d(() => B.value.includes(p.value)), L = d(
      () => p.value === "" ? !1 : !a.tagValidator(p.value)
    ), W = d(() => B.value.length === a.limit), Z = d(() => !L.value && !w.value), Y = () => {
      var M;
      n.value && ((M = A.value) == null || M.focus());
    }, D = (M) => {
      if (i.value) {
        M.target.blur();
        return;
      }
      t("focusin", M);
    }, le = (M) => {
      i.value || f.value || (T.value = !0, t("focus", M));
    }, oe = (M) => {
      T.value = !1, t("blur", M);
    }, K = (M) => {
      var U, ge;
      const J = typeof M == "string" ? M : M.target.value;
      if (F.value = !1, ((U = a.separator) == null ? void 0 : U.includes(J.charAt(0))) && J.length > 0) {
        A.value && (A.value.value = "");
        return;
      }
      if (p.value = J, (ge = a.separator) != null && ge.includes(J.charAt(J.length - 1))) {
        se(J.slice(0, J.length - 1));
        return;
      }
      b.value = a.tagValidator(J) && !w.value ? [J] : [], V.value = a.tagValidator(J) ? [] : [J], H.value = w.value ? [J] : [], t("tag-state", b.value, V.value, H.value);
    }, re = (M) => {
      l.value && (K(M), w.value || se(p.value));
    }, be = (M) => {
      if (M.key === "Enter" && !u.value) {
        se(p.value);
        return;
      }
      (M.key === "Backspace" || M.key === "Delete") && k.value && p.value === "" && F.value && B.value.length > 0 ? me(B.value[B.value.length - 1]) : F.value = !0;
    }, se = (M) => {
      var U;
      if (M = (M || p.value).trim(), M === "" || w.value || !a.tagValidator(M) || a.limit && W.value)
        return;
      const J = [...a.modelValue, M];
      p.value = "", F.value = !0, t("update:modelValue", J), t("input", J), (U = A.value) == null || U.focus();
    }, me = (M) => {
      var U;
      const J = B.value.indexOf((U = M == null ? void 0 : M.toString()) != null ? U : "");
      S.value = B.value.splice(J, 1).toString(), t("update:modelValue", B.value);
    }, ze = d(() => {
      const {
        addButtonText: M,
        addButtonVariant: J,
        duplicateTagText: U,
        inputAttrs: ge,
        form: Le,
        inputType: Ea,
        invalidTagText: Ha,
        limitTagsText: qa,
        limit: Da,
        placeholder: ja,
        separator: Ra,
        size: Ma,
        tagClass: Ga,
        tagRemoveLabel: Ua,
        tagVariant: Wa
      } = a;
      return {
        addButtonText: M,
        addButtonVariant: J,
        addTag: se,
        disableAddButton: Z,
        disabled: i.value,
        duplicateTagText: U,
        duplicateTags: H,
        form: Le,
        inputAttrs: {
          ...ge,
          disabled: i.value,
          form: Le,
          id: g,
          value: p
        },
        inputHandlers: {
          input: K,
          keydown: be,
          change: re
        },
        inputId: g,
        inputType: Ea,
        invalidTagText: Ha,
        invalidTags: V,
        isDuplicate: w,
        isInvalid: L,
        isLimitReached: W,
        limitTagsText: qa,
        limit: Da,
        noTagRemove: v.value,
        placeholder: ja,
        removeTag: me,
        required: h.value,
        separator: Ra,
        size: Ma,
        state: y.value,
        tagClass: Ga,
        tagPills: $.value,
        tagRemoveLabel: Ua,
        tagVariant: Wa,
        tags: B
      };
    });
    return (M, J) => (c(), m("div", {
      id: s(_),
      class: I(["b-form-tags form-control h-auto", s(O)]),
      role: "group",
      tabindex: "-1",
      onFocusin: D,
      onFocusout: J[1] || (J[1] = (U) => M.$emit("focusout", U))
    }, [
      E("output", {
        id: `${s(_)}selected_tags__`,
        class: "visually-hidden",
        role: "status",
        for: s(g),
        "aria-live": T.value ? "polite" : "off",
        "aria-atomic": "true",
        "aria-relevant": "additions text"
      }, R(B.value.join(", ")), 9, ws),
      E("div", {
        id: `${s(_)}removed_tags__`,
        role: "status",
        "aria-live": T.value ? "assertive" : "off",
        "aria-atomic": "true",
        class: "visually-hidden"
      }, " (" + R(e.tagRemovedLabel) + ") " + R(S.value), 9, Vs),
      C(M.$slots, "default", We(Xe(s(ze))), () => [
        E("ul", {
          id: `${s(_)}tag_list__`,
          class: "b-form-tags-list list-unstyled mb-0 d-flex flex-wrap align-items-center"
        }, [
          (c(!0), m(Q, null, ae(B.value, (U) => (c(), z(_a, {
            key: U,
            class: I(e.tagClass),
            tag: "li",
            variant: e.tagVariant,
            pill: s($),
            onRemove: me
          }, {
            default: N(() => [
              ee(R(U), 1)
            ]),
            _: 2
          }, 1032, ["class", "variant", "pill"]))), 128)),
          E("li", {
            role: "none",
            "aria-live": "off",
            class: "b-from-tags-field flex-grow-1",
            "aria-controls": `${s(_)}tag_list__`
          }, [
            E("div", As, [
              E("input", G({
                id: s(g),
                ref_key: "input",
                ref: A,
                disabled: s(i),
                value: p.value,
                type: e.inputType,
                placeholder: e.placeholder,
                class: "b-form-tags-input w-100 flex-grow-1 p-0 m-0 bg-transparent border-0",
                style: { outline: "currentcolor none 0px", "min-width": "5rem" }
              }, e.inputAttrs, {
                form: e.form,
                required: s(h),
                onInput: K,
                onChange: re,
                onKeydown: be,
                onFocus: le,
                onBlur: oe
              }), null, 16, Is),
              s(Z) ? (c(), m("button", {
                key: 0,
                type: "button",
                class: I(["btn b-form-tags-button py-0", [
                  `btn-${e.addButtonVariant}`,
                  {
                    "disabled invisible": p.value.length === 0
                  },
                  e.inputClass
                ]]),
                style: { "font-size": "90%" },
                disabled: s(i) || p.value.length === 0 || s(W),
                onClick: J[0] || (J[0] = (U) => se(p.value))
              }, [
                C(M.$slots, "add-button-text", {}, () => [
                  ee(R(e.addButtonText), 1)
                ])
              ], 10, Fs)) : P("", !0)
            ])
          ], 8, xs)
        ], 8, _s),
        E("div", Os, [
          s(L) ? (c(), m("div", zs, R(e.invalidTagText) + ": " + R(p.value), 1)) : P("", !0),
          s(w) ? (c(), m("small", Ls, R(e.duplicateTagText) + ": " + R(p.value), 1)) : P("", !0),
          B.value.length === e.limit ? (c(), m("small", Ns, "Tag limit reached")) : P("", !0)
        ])
      ]),
      e.name ? (c(!0), m(Q, { key: 0 }, ae(B.value, (U) => (c(), m("input", {
        key: U,
        type: "hidden",
        name: e.name,
        value: U
      }, null, 8, Ps))), 128)) : P("", !0)
    ], 42, Ts));
  }
}), Hs = x({
  props: {
    ...ia,
    noResize: { type: [Boolean, String], default: !1 },
    rows: { type: [String, Number], required: !1, default: 2 },
    wrap: { type: String, default: "soft" }
  },
  emits: ["update:modelValue", "change", "blur", "input"],
  setup(e, { emit: t }) {
    const a = r(o(e, "noResize")), l = d(() => ({
      "form-control": !e.plaintext,
      "form-control-plaintext": e.plaintext,
      [`form-control-${e.size}`]: !!e.size,
      "is-valid": e.state === !0,
      "is-invalid": e.state === !1
    })), n = d(
      () => a.value ? { resize: "none" } : void 0
    ), { input: i, computedId: u, computedAriaInvalid: f, onInput: v, onChange: k, onBlur: h, focus: y, blur: $ } = ra(e, t);
    return {
      input: i,
      computedId: u,
      computedAriaInvalid: f,
      onInput: v,
      onChange: k,
      onBlur: h,
      focus: y,
      blur: $,
      classes: l,
      computedStyles: n
    };
  }
}), qs = ["id", "name", "form", "disabled", "placeholder", "required", "autocomplete", "readonly", "aria-required", "aria-invalid", "rows", "wrap"];
function Ds(e, t, a, l, n, i) {
  return c(), m("textarea", G({
    id: e.computedId,
    ref: "input",
    class: e.classes,
    name: e.name || void 0,
    form: e.form || void 0,
    disabled: e.disabled,
    placeholder: e.placeholder,
    required: e.required,
    autocomplete: e.autocomplete || void 0,
    readonly: e.readonly || e.plaintext,
    "aria-required": e.required ? "true" : void 0,
    "aria-invalid": e.computedAriaInvalid,
    rows: e.rows,
    style: e.computedStyles,
    wrap: e.wrap || void 0
  }, e.$attrs, {
    onInput: t[0] || (t[0] = (u) => e.onInput(u)),
    onChange: t[1] || (t[1] = (u) => e.onChange(u)),
    onBlur: t[2] || (t[2] = (u) => e.onBlur(u))
  }), null, 16, qs);
}
const js = /* @__PURE__ */ ce(Hs, [["render", Ds]]), Rs = {
  key: 0,
  class: "input-group-text"
}, Ms = { key: 0 }, Gs = ["innerHTML"], Us = {
  key: 0,
  class: "input-group-text"
}, Ws = { key: 0 }, Xs = ["innerHTML"], Ks = /* @__PURE__ */ x({
  __name: "BInputGroup",
  props: {
    append: null,
    appendHtml: null,
    id: null,
    prepend: null,
    prependHtml: null,
    size: null,
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = d(() => ({
      "input-group-sm": t.size === "sm",
      "input-group-lg": t.size === "lg"
    })), l = d(() => !!t.append || !!t.appendHtml), n = d(() => !!t.prepend || !!t.prependHtml), i = d(() => !!t.appendHtml), u = d(() => !!t.prependHtml);
    return (f, v) => (c(), z(q(e.tag), {
      id: e.id,
      class: I(["input-group", s(a)]),
      role: "group"
    }, {
      default: N(() => [
        C(f.$slots, "prepend", {}, () => [
          s(n) ? (c(), m("span", Rs, [
            s(u) ? P("", !0) : (c(), m("span", Ms, R(e.prepend), 1)),
            s(u) ? (c(), m("span", {
              key: 1,
              innerHTML: e.prependHtml
            }, null, 8, Gs)) : P("", !0)
          ])) : P("", !0)
        ]),
        C(f.$slots, "default"),
        C(f.$slots, "append", {}, () => [
          s(l) ? (c(), m("span", Us, [
            s(i) ? P("", !0) : (c(), m("span", Ws, R(e.append), 1)),
            s(i) ? (c(), m("span", {
              key: 1,
              innerHTML: e.appendHtml
            }, null, 8, Xs)) : P("", !0)
          ])) : P("", !0)
        ])
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), xa = /* @__PURE__ */ x({
  __name: "BInputGroupText",
  props: {
    tag: { default: "div" }
  },
  setup(e) {
    return (t, a) => (c(), z(q(e.tag), { class: "input-group-text" }, {
      default: N(() => [
        C(t.$slots, "default")
      ]),
      _: 3
    }));
  }
}), kt = /* @__PURE__ */ x({
  __name: "BInputGroupAddon",
  props: {
    append: { default: !1 },
    id: null,
    isText: { default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = r(o(t, "append")), l = r(o(t, "isText")), n = d(() => ({
      "input-group-append": a.value,
      "input-group-prepend": !a.value
    }));
    return (i, u) => (c(), z(q(e.tag), {
      id: e.id,
      class: I(["d-flex", s(n)])
    }, {
      default: N(() => [
        s(l) ? (c(), z(xa, { key: 0 }, {
          default: N(() => [
            C(i.$slots, "default")
          ]),
          _: 3
        })) : C(i.$slots, "default", { key: 1 })
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Js = /* @__PURE__ */ x({
  __name: "BInputGroupAppend",
  props: {
    id: null,
    isText: { default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const a = r(o(e, "isText"));
    return (l, n) => (c(), z(kt, {
      id: e.id,
      "is-text": s(a),
      tag: e.tag,
      append: ""
    }, {
      default: N(() => [
        C(l.$slots, "default")
      ]),
      _: 3
    }, 8, ["id", "is-text", "tag"]));
  }
}), Ys = /* @__PURE__ */ x({
  __name: "BInputGroupPrepend",
  props: {
    id: null,
    isText: { default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const a = r(o(e, "isText"));
    return (l, n) => (c(), z(kt, {
      id: e.id,
      "is-text": s(a),
      tag: e.tag,
      append: !1
    }, {
      default: N(() => [
        C(l.$slots, "default")
      ]),
      _: 3
    }, 8, ["id", "is-text", "tag"]));
  }
}), Aa = Symbol(), Zs = /* @__PURE__ */ x({
  __name: "BListGroup",
  props: {
    flush: { default: !1 },
    horizontal: { type: [Boolean, String], default: !1 },
    numbered: { default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = r(o(t, "flush")), l = r(o(t, "numbered")), n = d(() => {
      const u = a.value ? !1 : t.horizontal;
      return {
        "list-group-flush": a.value,
        "list-group-horizontal": u === !0,
        [`list-group-horizontal-${u}`]: typeof u == "string",
        "list-group-numbered": l.value
      };
    }), i = d(() => l.value === !0 ? "ol" : t.tag);
    return Oe(Aa, {
      numbered: l.value
    }), (u, f) => (c(), z(q(s(i)), {
      class: I(["list-group", s(n)])
    }, {
      default: N(() => [
        C(u.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Qs = /* @__PURE__ */ x({
  __name: "BListGroupItem",
  props: {
    action: { default: !1 },
    active: { default: !1 },
    button: { default: !1 },
    disabled: { default: !1 },
    href: null,
    tag: { default: "div" },
    target: { default: "_self" },
    to: null,
    variant: null
  },
  setup(e) {
    const t = e, a = r(o(t, "action")), l = r(o(t, "active")), n = r(o(t, "button")), i = r(o(t, "disabled")), u = Ht(), f = $e(Aa, null), v = d(() => !n.value && (!!t.href || !!t.to)), k = d(
      () => f != null && f.numbered ? "li" : n.value ? "button" : v.value ? ve : t.tag
    ), h = d(() => {
      const $ = a.value || v.value || n.value || ["a", "router-link", "button", "b-link"].includes(t.tag);
      return {
        [`list-group-item-${t.variant}`]: t.variant !== void 0,
        "list-group-item-action": $,
        active: l.value,
        disabled: i.value
      };
    }), y = d(() => {
      const $ = {};
      return n.value && ((!u || !u.type) && ($.type = "button"), i.value && ($.disabled = !0)), $;
    });
    return ($, A) => (c(), z(q(s(k)), G({
      class: ["list-group-item", s(h)],
      "aria-current": s(l) ? !0 : null,
      "aria-disabled": s(i) ? !0 : null,
      target: s(v) ? e.target : null,
      href: s(n) ? null : e.href,
      to: s(n) ? null : e.to
    }, s(y)), {
      default: N(() => [
        C($.$slots, "default")
      ]),
      _: 3
    }, 16, ["class", "aria-current", "aria-disabled", "target", "href", "to"]));
  }
}), ei = ["id"], ti = ["aria-label"], ai = {
  inheritAttrs: !1
}, li = /* @__PURE__ */ x({
  ...ai,
  __name: "BModal",
  props: {
    bodyBgVariant: null,
    bodyClass: null,
    bodyTextVariant: null,
    busy: { default: !1 },
    lazy: { default: !1 },
    buttonSize: { default: "md" },
    cancelDisabled: { default: !1 },
    cancelTitle: { default: "Cancel" },
    cancelVariant: { default: "secondary" },
    centered: { default: !1 },
    contentClass: null,
    dialogClass: null,
    footerBgVariant: null,
    footerBorderVariant: null,
    footerClass: null,
    footerTextVariant: null,
    fullscreen: { type: [Boolean, String], default: !1 },
    headerBgVariant: null,
    headerBorderVariant: null,
    headerClass: null,
    headerCloseLabel: { default: "Close" },
    headerCloseWhite: { default: !1 },
    headerTextVariant: null,
    hideBackdrop: { default: !1 },
    hideFooter: { default: !1 },
    hideHeader: { default: !1 },
    hideHeaderClose: { default: !1 },
    id: null,
    modalClass: null,
    modelValue: { default: !1 },
    noCloseOnBackdrop: { default: !1 },
    noCloseOnEsc: { default: !1 },
    noFade: { default: !1 },
    noFocus: { default: !1 },
    okDisabled: { default: !1 },
    okOnly: { default: !1 },
    okTitle: { default: "Ok" },
    okVariant: { default: "primary" },
    scrollable: { default: !1 },
    show: { default: !1 },
    size: null,
    title: null,
    titleClass: null,
    titleSrOnly: { default: !1 },
    titleTag: { default: "h5" }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden", "hide-prevented", "ok", "cancel"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "busy")), n = r(o(a, "lazy")), i = r(o(a, "cancelDisabled")), u = r(o(a, "centered")), f = r(o(a, "headerCloseWhite")), v = r(o(a, "hideBackdrop")), k = r(o(a, "hideFooter")), h = r(o(a, "hideHeader")), y = r(o(a, "hideHeaderClose")), $ = r(o(a, "modelValue")), A = r(o(a, "noCloseOnBackdrop")), _ = r(o(a, "noCloseOnEsc")), g = r(o(a, "noFade")), B = r(o(a, "noFocus")), p = r(o(a, "okDisabled")), F = r(o(a, "okOnly")), T = r(o(a, "scrollable")), S = r(o(a, "show")), b = r(o(a, "titleSrOnly")), V = j(!1), H = we(), O = j(), w = j(), L = d(() => [
      {
        fade: !g.value,
        show: S.value
      },
      a.modalClass
    ]), W = d(() => [
      {
        "modal-fullscreen": typeof a.fullscreen == "boolean" ? a.fullscreen : !1,
        [`modal-fullscreen-${a.fullscreen}-down`]: typeof a.fullscreen == "string" ? a.fullscreen : !1,
        [`modal-${a.size}`]: a.size,
        "modal-dialog-centered": u.value,
        "modal-dialog-scrollable": T.value
      },
      a.dialogClass
    ]), Z = d(() => [
      {
        [`bg-${a.bodyBgVariant}`]: a.bodyBgVariant,
        [`text-${a.bodyTextVariant}`]: a.bodyTextVariant
      },
      a.bodyClass
    ]), Y = d(() => [
      {
        [`bg-${a.headerBgVariant}`]: a.headerBgVariant,
        [`border-${a.headerBorderVariant}`]: a.headerBorderVariant,
        [`text-${a.headerTextVariant}`]: a.headerTextVariant
      },
      a.headerClass
    ]), D = d(() => [
      {
        [`bg-${a.footerBgVariant}`]: a.footerBgVariant,
        [`border-${a.footerBorderVariant}`]: a.footerBorderVariant,
        [`text-${a.footerTextVariant}`]: a.footerTextVariant
      },
      a.footerClass
    ]), le = d(() => [
      {
        ["visually-hidden"]: b.value
      },
      a.titleClass
    ]), oe = d(() => !!H["header-close"]), K = d(() => [
      {
        ["btn-close-content"]: oe.value,
        ["d-flex"]: oe.value,
        ["btn-close-white"]: !oe.value && f.value
      }
    ]), re = d(() => i.value || l.value), be = d(() => p.value || l.value);
    ne(O, "shown.bs.modal", (U) => se(U)), ne(O, "hidden.bs.modal", (U) => me(U));
    const se = (U) => {
      t("shown", U), n.value === !0 && (V.value = !0);
    }, me = (U) => {
      t("hidden", U), n.value === !0 && (V.value = !1);
    }, ze = () => {
      t("update:modelValue", !0), J().show();
    }, M = () => {
      t("update:modelValue", !1), J().hide();
    }, J = () => (w.value !== void 0 || (w.value = new dl(O.value, {
      backdrop: !1,
      keyboard: !_.value,
      focus: !B.value
    })), w.value);
    return ue(() => {
      $.value && J().show();
    }), ie(
      () => a.noCloseOnBackdrop,
      (U) => {
        J()._config.backdrop = a.hideBackdrop ? !1 : U ? "static" : !a.hideBackdrop;
      }
    ), ie(
      () => a.noCloseOnEsc,
      (U) => {
        J()._config.keyboard = !U;
      }
    ), ie(
      () => $.value,
      (U) => {
        ke(() => {
          U ? ze() : M();
        });
      }
    ), (U, ge) => (c(), z(nl, { to: "body" }, [
      E("div", G({
        id: e.id,
        ref_key: "element",
        ref: O,
        class: ["modal", s(L)],
        tabindex: "-1"
      }, U.$attrs), [
        E("div", {
          class: I(["modal-dialog", s(W)])
        }, [
          !s(n) || s(n) && V.value || s(n) && s($) === !0 ? (c(), m("div", {
            key: 0,
            class: I(["modal-content", e.contentClass])
          }, [
            s(h) ? P("", !0) : (c(), m("div", {
              key: 0,
              class: I(["modal-header", s(Y)])
            }, [
              (c(), z(q(e.titleTag), {
                class: I(["modal-title", s(le)])
              }, {
                default: N(() => [
                  C(U.$slots, "title", {}, () => [
                    ee(R(e.title), 1)
                  ], !0)
                ]),
                _: 3
              }, 8, ["class"])),
              s(y) ? P("", !0) : (c(), m("button", {
                key: 0,
                type: "button",
                class: I(["btn-close", s(K)]),
                "data-bs-dismiss": "modal",
                "aria-label": e.headerCloseLabel
              }, [
                C(U.$slots, "header-close", {}, void 0, !0)
              ], 10, ti))
            ], 2)),
            E("div", {
              class: I(["modal-body", s(Z)])
            }, [
              C(U.$slots, "default", {}, void 0, !0)
            ], 2),
            s(k) ? P("", !0) : (c(), m("div", {
              key: 1,
              class: I(["modal-footer", s(D)])
            }, [
              C(U.$slots, "footer", {}, () => [
                s(F) ? P("", !0) : (c(), z(Ee, {
                  key: 0,
                  type: "button",
                  class: "btn",
                  disabled: s(re),
                  size: e.buttonSize,
                  variant: e.cancelVariant,
                  onClick: ge[0] || (ge[0] = (Le) => (M(), U.$emit("cancel")))
                }, {
                  default: N(() => [
                    ee(R(e.cancelTitle), 1)
                  ]),
                  _: 1
                }, 8, ["disabled", "size", "variant"])),
                pe(Ee, {
                  type: "button",
                  class: "btn",
                  disabled: s(be),
                  size: e.buttonSize,
                  variant: e.okVariant,
                  onClick: ge[1] || (ge[1] = (Le) => (M(), U.$emit("ok")))
                }, {
                  default: N(() => [
                    ee(R(e.okTitle), 1)
                  ]),
                  _: 1
                }, 8, ["disabled", "size", "variant"])
              ], !0)
            ], 2))
          ], 2)) : P("", !0)
        ], 2),
        s(v) === !1 ? (c(), m("div", {
          key: 0,
          class: "modal-backdrop fade show",
          onClick: ge[2] || (ge[2] = pt((Le) => s(A) === !1 && M(), ["prevent"]))
        })) : P("", !0)
      ], 16, ei)
    ]));
  }
});
const ni = /* @__PURE__ */ ce(li, [["__scopeId", "data-v-0368138c"]]), oi = /* @__PURE__ */ x({
  __name: "BNav",
  props: {
    align: null,
    cardHeader: { default: !1 },
    fill: { default: !1 },
    justified: { default: !1 },
    pills: { default: !1 },
    small: { default: !1 },
    tabs: { default: !1 },
    tag: { default: "ul" },
    vertical: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(o(t, "cardHeader")), l = r(o(t, "fill")), n = r(o(t, "justified")), i = r(o(t, "pills")), u = r(o(t, "small")), f = r(o(t, "tabs")), v = r(o(t, "vertical")), k = d(() => ({
      "nav-tabs": f.value,
      "nav-pills": i.value && !f.value,
      "card-header-tabs": !v.value && a.value && f.value,
      "card-header-pills": !v.value && a.value && i.value && !f.value,
      "flex-column": v.value,
      "nav-fill": !v.value && l.value,
      "nav-justified": !v.value && n.value,
      [`justify-content-${t.align}`]: !v.value && t.align !== void 0,
      small: u.value
    }));
    return (h, y) => (c(), z(q(e.tag), {
      class: I(["nav", s(k)])
    }, {
      default: N(() => [
        C(h.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), si = /* @__PURE__ */ x({
  __name: "BNavForm",
  props: {
    role: null,
    id: null,
    floating: { default: !1 },
    novalidate: { default: !1 },
    validated: { default: !1 }
  },
  setup(e) {
    const t = e, a = d(() => ({
      floating: t.floating,
      role: t.role,
      id: t.id,
      novalidate: t.novalidate,
      validated: t.validated
    }));
    return (l, n) => (c(), z(Sa, G(s(a), { class: "d-flex" }), {
      default: N(() => [
        C(l.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), ii = Ze(Ve, ["event", "routerTag"]), ri = x({
  components: { BLink: ve },
  props: {
    ...ii
  },
  setup(e) {
    return { disabledBoolean: r(o(e, "disabled")) };
  }
}), ui = { class: "nav-item" };
function di(e, t, a, l, n, i) {
  const u = gt("b-link");
  return c(), m("li", ui, [
    pe(u, G({ class: "nav-link" }, e.$props, {
      tabindex: e.disabledBoolean ? -1 : void 0,
      "aria-disabled": e.disabledBoolean ? !0 : void 0
    }), {
      default: N(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16, ["tabindex", "aria-disabled"])
  ]);
}
const ci = /* @__PURE__ */ ce(ri, [["render", di]]), fi = { class: "nav-item dropdown" }, vi = /* @__PURE__ */ x({
  __name: "BNavItemDropdown",
  props: {
    id: null,
    text: null,
    size: null,
    offset: null,
    autoClose: { type: [Boolean, String], default: !0 },
    dark: { type: Boolean, default: !1 },
    dropleft: { type: Boolean, default: !1 },
    dropright: { type: Boolean, default: !1 },
    dropup: { type: Boolean, default: !1 },
    right: { type: Boolean, default: !1 },
    left: { type: [Boolean, String], default: !1 },
    split: { type: Boolean, default: !1 },
    splitVariant: null,
    noCaret: { type: Boolean, default: !1 },
    variant: { default: "link" }
  },
  setup(e) {
    return (t, a) => (c(), m("li", fi, [
      pe(ka, G(t.$props, { "is-nav": "" }), ol({ _: 2 }, [
        ae(t.$slots, (l, n) => ({
          name: n,
          fn: N((i) => [
            C(t.$slots, n, We(Xe(i || {})))
          ])
        }))
      ]), 1040)
    ]));
  }
}), bi = {}, mi = { class: "navbar-text" };
function gi(e, t) {
  return c(), m("li", mi, [
    C(e.$slots, "default")
  ]);
}
const pi = /* @__PURE__ */ ce(bi, [["render", gi]]), hi = /* @__PURE__ */ x({
  __name: "BNavbar",
  props: {
    fixed: null,
    print: { default: !1 },
    sticky: null,
    tag: { default: "nav" },
    toggleable: { type: [Boolean, String], default: !1 },
    dark: { default: !1 },
    variant: null,
    container: { type: [String, Boolean], default: "fluid" }
  },
  setup(e) {
    const t = e, a = r(o(t, "print")), l = r(o(t, "dark")), n = d(
      () => t.tag === "nav" ? void 0 : "navigation"
    ), i = d(
      () => typeof t.toggleable == "string" ? `navbar-expand-${t.toggleable}` : t.toggleable === !1 ? "navbar-expand" : void 0
    ), u = d(
      () => t.container === !1 ? void 0 : t.container === !0 ? "container" : `container-${t.container}`
    ), f = d(() => ({
      "d-print": a.value,
      [`sticky-${t.sticky}`]: t.sticky !== void 0,
      "navbar-dark": l.value,
      [`bg-${t.variant}`]: t.variant !== void 0,
      [`fixed-${t.fixed}`]: t.fixed !== void 0,
      [`${i.value}`]: i.value !== void 0
    }));
    return (v, k) => (c(), z(q(e.tag), {
      class: I(["navbar", s(f)]),
      role: s(n)
    }, {
      default: N(() => [
        e.container !== !1 ? (c(), m("div", {
          key: 0,
          class: I(s(u))
        }, [
          C(v.$slots, "default")
        ], 2)) : C(v.$slots, "default", { key: 1 })
      ]),
      _: 3
    }, 8, ["class", "role"]));
  }
}), zt = Ze(Ve, ["event", "routerTag"]), yi = x({
  components: {
    BLink: ve
  },
  props: {
    tag: { type: String, default: "div" },
    ...zt
  },
  setup(e) {
    const t = d(() => Pe(e)), a = d(() => t.value ? ve : e.tag);
    return {
      props: t.value ? Qt(zt, e) : {},
      computedTag: a
    };
  }
});
function Bi(e, t, a, l, n, i) {
  return c(), z(q(e.computedTag), G({ class: "navbar-brand" }, e.props), {
    default: N(() => [
      C(e.$slots, "default")
    ]),
    _: 3
  }, 16);
}
const $i = /* @__PURE__ */ ce(yi, [["render", Bi]]), ki = /* @__PURE__ */ x({
  __name: "BNavbarNav",
  props: {
    align: null,
    fill: { default: !1 },
    justified: { default: !1 },
    small: { default: !1 },
    tag: { default: "ul" }
  },
  setup(e) {
    const t = e, a = r(o(t, "fill")), l = r(o(t, "justified")), n = r(o(t, "small")), i = d(() => ({
      "nav-fill": a.value,
      "nav-justified": l.value,
      [`justify-content-${t.align}`]: t.align !== void 0,
      small: n.value
    }));
    return (u, f) => (c(), m("ul", {
      class: I(["navbar-nav", s(i)])
    }, [
      C(u.$slots, "default")
    ], 2));
  }
}), Si = {
  mounted(e, t) {
    let a = t.value;
    Object.keys(t.modifiers).length > 0 && ([a] = Object.keys(t.modifiers)), e.setAttribute("data-bs-toggle", "modal"), e.setAttribute("data-bs-target", `#${a}`);
  }
}, Ci = {
  mounted(e, t) {
    let a = "right";
    const l = [];
    t.modifiers.left ? a = "left" : t.modifiers.right ? a = "right" : t.modifiers.bottom ? a = "bottom" : t.modifiers.top && (a = "top"), t.modifiers.manual ? l.push("manual") : (t.modifiers.click && l.push("click"), t.modifiers.hover && l.push("hover"), t.modifiers.focus && l.push("focus")), e.setAttribute("data-bs-toggle", "popover"), new ot(e, {
      trigger: l.length === 0 ? "click" : l.join(" "),
      placement: a,
      content: t.value
    });
  },
  unmounted(e) {
    const t = ot.getInstance(e);
    t == null || t.dispose();
  }
}, Ti = (e) => {
  if (e.manual)
    return "manual";
  const t = [];
  return e.click && t.push("click"), e.hover && t.push("hover"), e.focus && t.push("focus"), t.length > 0 ? t.join(" ") : "hover focus";
}, wi = (e) => e.left ? "left" : e.right ? "right" : e.bottom ? "bottom" : "top", Vi = (e) => e != null && e.delay ? e.delay : 0, _i = {
  beforeMount(e, t) {
    e.setAttribute("data-bs-toggle", "tooltip");
    const a = /<("[^"]*"|'[^']*'|[^'">])*>/.test(e.title), l = Ti(t.modifiers), n = wi(t.modifiers), i = Vi(t.value), u = e.getAttribute("title");
    new Qe(e, {
      trigger: l,
      placement: n,
      delay: i,
      html: a
    }), u && e.setAttribute("data-bs-original-title", u);
  },
  updated(e) {
    const t = e.getAttribute("title"), a = e.getAttribute("data-bs-original-title"), l = Qe.getInstance(e);
    e.removeAttribute("title"), t && t !== a && (l == null || l.setContent({ ".tooltip-inner": t }), e.setAttribute("data-bs-original-title", t));
  },
  unmounted(e) {
    const t = Qe.getInstance(e);
    t == null || t.dispose();
  }
}, Re = /* @__PURE__ */ new Map(), Ia = (e) => {
  if (Re.has(e)) {
    const t = Re.get(e);
    t && t.stop && t.stop(), Re.delete(e);
  }
}, Lt = (e, t) => {
  const a = {
    margin: "0px",
    once: !1,
    callback: t.value
  };
  Object.keys(t.modifiers).forEach((n) => {
    Number.isInteger(n) ? a.margin = `${n}px` : n.toLowerCase() === "once" && (a.once = !0);
  }), Ia(e);
  const l = new Ai(
    e,
    a.margin,
    a.once,
    a.callback,
    t.instance
  );
  Re.set(e, l);
}, xi = {
  beforeMount(e, t) {
    Lt(e, t);
  },
  updated(e, t) {
    Lt(e, t);
  },
  unmounted(e) {
    Ia(e);
  }
};
class Ai {
  constructor(t, a, l, n, i) {
    te(this, "element");
    te(this, "margin");
    te(this, "once");
    te(this, "callback");
    te(this, "instance");
    te(this, "observer");
    te(this, "doneOnce");
    te(this, "visible");
    this.element = t, this.margin = a, this.once = l, this.callback = n, this.instance = i, this.createObserver();
  }
  createObserver() {
    if (this.observer && this.stop(), !(this.doneOnce || typeof this.callback != "function")) {
      try {
        this.observer = new IntersectionObserver(this.handler.bind(this), {
          root: null,
          rootMargin: this.margin,
          threshold: 0
        });
      } catch {
        console.error("Intersection Observer not supported"), this.doneOnce = !0, this.observer = void 0, this.callback(null);
        return;
      }
      this.instance.$nextTick(() => {
        this.observer && this.observer.observe(this.element);
      });
    }
  }
  handler(t) {
    const [a] = t, l = Boolean(a.isIntersecting || a.intersectionRatio > 0);
    l !== this.visible && (this.visible = l, this.callback(l), this.once && this.visible && (this.doneOnce = !0, this.stop()));
  }
  stop() {
    this.observer && this.observer.disconnect(), this.observer = null;
  }
}
const Ii = {
  mounted(e, t) {
    t.value !== !1 && e.focus();
  }
}, Fi = {
  BModal: Si,
  BPopover: Ci,
  BToggle: Bt,
  BTooltip: _i,
  BVisible: xi,
  focus: Ii
}, Oi = /* @__PURE__ */ E("span", { class: "navbar-toggler-icon" }, null, -1), zi = /* @__PURE__ */ x({
  __name: "BNavbarToggle",
  props: {
    disabled: { default: !1 },
    label: { default: "Toggle navigation" },
    target: null
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "disabled")), n = d(() => ({
      disabled: l.value,
      "aria-label": a.label
    })), i = d(() => ({
      disabled: l.value
    })), u = () => {
      l.value || t("click");
    };
    return (f, v) => Te((c(), m("button", G({
      class: ["navbar-toggler", s(i)],
      type: "button"
    }, s(n), { onClick: u }), [
      C(f.$slots, "default", {}, () => [
        Oi
      ])
    ], 16)), [
      [s(Bt), s(l) ? void 0 : e.target]
    ]);
  }
}), Li = ["data-bs-backdrop", "data-bs-scroll"], Ni = { class: "offcanvas-header" }, Pi = {
  id: "offcanvasLabel",
  class: "offcanvas-title"
}, Ei = ["aria-label"], Hi = { class: "offcanvas-body" }, qi = /* @__PURE__ */ x({
  __name: "BOffcanvas",
  props: {
    dismissLabel: { default: "Close" },
    modelValue: { default: !1 },
    bodyScrolling: { default: !1 },
    backdrop: { default: !0 },
    placement: { default: "start" },
    title: null
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "modelValue")), n = r(o(a, "bodyScrolling")), i = r(o(a, "backdrop")), u = j(), f = j();
    ne(u, "shown.bs.offcanvas", () => t("shown")), ne(u, "hidden.bs.offcanvas", () => t("hidden")), ne(u, "show.bs.offcanvas", () => {
      t("show"), t("update:modelValue", !0);
    }), ne(u, "hide.bs.offcanvas", () => {
      t("hide"), t("update:modelValue", !1);
    }), ue(() => {
      var k;
      f.value = new cl(u.value), l.value && ((k = f.value) == null || k.show(u.value));
    });
    const v = d(() => ({
      [`offcanvas-${a.placement}`]: !!a.placement
    }));
    return ie(
      () => l.value,
      (k) => {
        var h, y;
        k ? (h = f.value) == null || h.show(u.value) : (y = f.value) == null || y.hide();
      }
    ), (k, h) => (c(), m("div", {
      ref_key: "element",
      ref: u,
      class: I(["offcanvas", s(v)]),
      tabindex: "-1",
      "aria-labelledby": "offcanvasLabel",
      "data-bs-backdrop": s(i),
      "data-bs-scroll": s(n)
    }, [
      E("div", Ni, [
        E("h5", Pi, [
          C(k.$slots, "title", {}, () => [
            ee(R(e.title), 1)
          ])
        ]),
        E("button", {
          type: "button",
          class: "btn-close text-reset",
          "data-bs-dismiss": "offcanvas",
          "aria-label": e.dismissLabel
        }, null, 8, Ei)
      ]),
      E("div", Hi, [
        C(k.$slots, "default")
      ])
    ], 10, Li));
  }
}), nt = { top: 0, left: 0, bottom: 0, right: 0 }, Di = "default", ji = "overlay", Ri = x({
  components: { BTransition: Ue },
  props: {
    bgColor: { type: String, required: !1 },
    blur: { type: String, default: "2px" },
    fixed: { type: [Boolean, String], default: !1 },
    noCenter: { type: [Boolean, String], default: !1 },
    noFade: { type: [Boolean, String], default: !1 },
    noWrap: { type: [Boolean, String], default: !1 },
    opacity: {
      type: [Number, String],
      default: 0.85,
      validator: (e) => {
        const t = ht(e, 0);
        return t >= 0 && t <= 1;
      }
    },
    overlayTag: { type: String, default: "div" },
    rounded: { type: [Boolean, String], default: !1 },
    show: { type: [Boolean, String], default: !1 },
    spinnerSmall: { type: [Boolean, String], default: !1 },
    spinnerType: { type: String, default: "border" },
    spinnerVariant: { type: String, required: !1 },
    variant: { type: String, default: "light" },
    wrapTag: { type: String, default: "div" },
    zIndex: { type: [Number, String], default: 10 }
  },
  emits: ["click", "hidden", "shown"],
  setup(e, { slots: t, emit: a }) {
    const l = r(o(e, "fixed")), n = r(o(e, "noCenter")), i = r(o(e, "noFade")), u = r(o(e, "noWrap")), f = r(o(e, "show")), v = r(o(e, "spinnerSmall")), k = d(
      () => e.rounded === !0 || e.rounded === "" ? "rounded" : e.rounded ? `rounded-${e.rounded}` : ""
    ), h = d(
      () => e.variant && !e.bgColor ? `bg-${e.variant}` : ""
    ), y = d(() => ({
      spinnerType: e.spinnerType || null,
      spinnerVariant: e.spinnerVariant || null,
      spinnerSmall: v.value
    }));
    return () => {
      const $ = (B) => X(gt("BSpinner"), {
        type: B.spinnerType,
        variant: B.spinnerVariant,
        small: v.value
      });
      let A = "";
      if (f.value) {
        const B = X("div", {
          class: ["position-absolute", h.value, k.value],
          style: {
            ...nt,
            opacity: e.opacity,
            backgroundColor: e.bgColor || null,
            backdropFilter: e.blur ? `blur(${e.blur})` : null
          }
        }), p = X(
          "div",
          {
            class: "position-absolute",
            style: n.value ? { ...nt } : { top: "50%", left: "50%", transform: "translateX(-50%) translateY(-50%)" }
          },
          fe(ji, y.value, t) || $(y.value) || ""
        );
        A = X(
          e.overlayTag,
          {
            class: [
              "b-overlay",
              {
                "position-absolute": !u.value || u.value && !l.value,
                "position-fixed": u.value && l.value
              }
            ],
            style: {
              ...nt,
              zIndex: e.zIndex || 10
            },
            onClick: (F) => a("click", F),
            key: "overlay"
          },
          [B, p]
        );
      }
      const _ = () => X(
        Ue,
        {
          noFade: i.value,
          transProps: { enterToClass: "show" },
          name: "fade",
          onAfterEnter: () => a("shown"),
          onAfterLeave: () => a("hidden")
        },
        { default: () => A }
      );
      return u.value ? _() : X(
        e.wrapTag,
        {
          class: ["b-overlay-wrap position-relative"],
          "aria-busy": f.value ? "true" : null
        },
        [X("span", fe(Di, {}, t)), _()]
      );
    };
  }
}), Mi = 5, Fa = 20, Oa = 0, he = 3, Gi = "ellipsis-text", Ui = "first-text", Wi = "last-text", Xi = "next-text", Ki = "page", Ji = "prev-text", Nt = (e) => Math.max(Fe(e) || Fa, 1), Pt = (e) => Math.max(Fe(e) || Oa, 0), Yi = (e, t) => {
  const a = Fe(e) || 1;
  return a > t ? t : a < 1 ? 1 : a;
}, Zi = x({
  name: "BPagination",
  props: {
    align: { type: String, default: "start" },
    ariaControls: { type: String, required: !1 },
    ariaLabel: { type: String, default: "Pagination" },
    disabled: { type: [Boolean, String], default: !1 },
    ellipsisClass: { type: [Array, String], default: () => [] },
    ellipsisText: { type: String, default: "\u2026" },
    firstClass: { type: [Array, String], default: () => [] },
    firstNumber: { type: [Boolean, String], default: !1 },
    firstText: { type: String, default: "\xAB" },
    hideEllipsis: { type: [Boolean, String], default: !1 },
    hideGotoEndButtons: { type: [Boolean, String], default: !1 },
    labelFirstPage: { type: String, default: "Go to first page" },
    labelLastPage: { type: String, default: "Go to last page" },
    labelNextPage: { type: String, default: "Go to next page" },
    labelPage: { type: String, default: "Go to page" },
    labelPrevPage: { type: String, default: "Go to previous page" },
    lastClass: { type: [Array, String], default: () => [] },
    lastNumber: { type: [Boolean, String], default: !1 },
    lastText: { type: String, default: "\xBB" },
    limit: { type: Number, default: Mi },
    modelValue: { type: Number, default: 1 },
    nextClass: { type: [Array, String], default: () => [] },
    nextText: { type: String, default: "\u203A" },
    pageClass: { type: [Array, String], default: () => [] },
    perPage: { type: Number, default: Fa },
    pills: { type: [Boolean, String], default: !1 },
    prevClass: { type: [Array, String], default: () => [] },
    prevText: { type: String, default: "\u2039" },
    size: { type: String, required: !1 },
    totalRows: { type: Number, default: Oa }
  },
  emits: ["update:modelValue", "page-click"],
  setup(e, { emit: t, slots: a }) {
    const l = r(o(e, "disabled")), n = r(o(e, "firstNumber")), i = r(o(e, "hideEllipsis")), u = r(o(e, "hideGotoEndButtons")), f = r(o(e, "lastNumber")), v = r(o(e, "pills")), k = fl(o(e, "align")), h = d(
      () => Math.ceil(Pt(e.totalRows) / Nt(e.perPage))
    ), y = d(() => {
      let S;
      return h.value - e.modelValue + 2 < e.limit && e.limit > he ? S = h.value - A.value + 1 : S = e.modelValue - Math.floor(A.value / 2), S < 1 ? S = 1 : S > h.value - A.value && (S = h.value - A.value + 1), e.limit <= he && f.value && h.value === S + A.value - 1 && (S = Math.max(S - 1, 1)), S;
    }), $ = d(() => {
      const S = h.value - e.modelValue;
      let b = !1;
      return S + 2 < e.limit && e.limit > he ? e.limit > he && (b = !0) : e.limit > he && (b = !!(!i.value || n.value)), y.value <= 1 && (b = !1), b && n.value && y.value < 4 && (b = !1), b;
    }), A = d(() => {
      let S = e.limit;
      return h.value <= e.limit ? S = h.value : e.modelValue < e.limit - 1 && e.limit > he ? ((!i.value || f.value) && (S = e.limit - (n.value ? 0 : 1)), S = Math.min(S, e.limit)) : h.value - e.modelValue + 2 < e.limit && e.limit > he ? (!i.value || n.value) && (S = e.limit - (f.value ? 0 : 1)) : e.limit > he && (S = e.limit - (i.value ? 0 : 2)), S;
    }), _ = d(() => {
      const S = h.value - A.value;
      let b = !1;
      e.modelValue < e.limit - 1 && e.limit > he ? (!i.value || f.value) && (b = !0) : e.limit > he && (b = !!(!i.value || f.value)), y.value > S && (b = !1);
      const V = y.value + A.value - 1;
      return b && f.value && V > h.value - 3 && (b = !1), b;
    }), g = Be({
      pageSize: Nt(e.perPage),
      totalRows: Pt(e.totalRows),
      numberOfPages: h.value
    }), B = (S, b) => {
      if (b === e.modelValue)
        return;
      const { target: V } = S, H = new Ke("page-click", {
        cancelable: !0,
        vueTarget: this,
        target: V
      });
      t("page-click", H, b), !H.defaultPrevented && t("update:modelValue", b);
    }, p = d(() => e.size ? `pagination-${e.size}` : ""), F = d(() => v.value ? "b-pagination-pills" : "");
    ie(
      () => e.modelValue,
      (S) => {
        const b = Yi(S, h.value);
        b !== e.modelValue && t("update:modelValue", b);
      }
    ), ie(g, (S, b) => {
      Wt(S) || (b.pageSize !== S.pageSize && b.totalRows === S.totalRows || b.numberOfPages !== S.numberOfPages && e.modelValue > b.numberOfPages) && t("update:modelValue", 1);
    });
    const T = d(() => {
      const S = [];
      for (let b = 0; b < A.value; b++)
        S.push({ number: y.value + b, classes: null });
      return S;
    });
    return () => {
      const S = [], b = T.value.map((D) => D.number), V = (D) => D === e.modelValue, H = e.modelValue < 1, O = e.align === "fill", w = (D, le, oe, K, re, be) => {
        const se = l.value || V(be) || H || D < 1 || D > h.value, me = D < 1 ? 1 : D > h.value ? h.value : D, ze = { disabled: se, page: me, index: me - 1 }, M = fe(oe, ze, a) || K || "";
        return X(
          "li",
          {
            class: [
              "page-item",
              {
                disabled: se,
                "flex-fill": O,
                "d-flex": O && !se
              },
              re
            ]
          },
          X(
            se ? "span" : "button",
            {
              class: ["page-link", { "flex-grow-1": !se && O }],
              "aria-label": le,
              "aria-controls": e.ariaControls || null,
              "aria-disabled": se ? "true" : null,
              role: "menuitem",
              type: se ? null : "button",
              tabindex: se ? null : "-1",
              onClick: (J) => {
                se || B(J, me);
              }
            },
            M
          )
        );
      }, L = (D) => X(
        "li",
        {
          class: [
            "page-item",
            "disabled",
            "bv-d-xs-down-none",
            O ? "flex-fill" : "",
            e.ellipsisClass
          ],
          role: "separator",
          key: `ellipsis-${D ? "last" : "first"}`
        },
        [
          X(
            "span",
            { class: ["page-link"] },
            fe(Gi, {}, a) || e.ellipsisText || "..."
          )
        ]
      ), W = (D, le) => {
        const oe = V(D.number) && !H, K = l.value ? null : oe || H && le === 0 ? "0" : "-1", re = {
          active: oe,
          disabled: l.value,
          page: D.number,
          index: D.number - 1,
          content: D.number
        }, be = fe(Ki, re, a) || D.number, se = X(
          l.value ? "span" : "button",
          {
            class: ["page-link", { "flex-grow-1": !l.value && O }],
            "aria-controls": e.ariaControls || null,
            "aria-disabled": l.value ? "true" : null,
            "aria-label": e.labelPage ? `${e.labelPage} ${D.number}` : null,
            role: "menuitemradio",
            type: l.value ? null : "button",
            tabindex: K,
            onClick: (me) => {
              l.value || B(me, D.number);
            }
          },
          be
        );
        return X(
          "li",
          {
            class: [
              "page-item",
              {
                disabled: l.value,
                active: oe,
                "flex-fill": O,
                "d-flex": O && !l.value
              },
              e.pageClass
            ],
            role: "presentation",
            key: `page-${D.number}`
          },
          se
        );
      };
      if (!u.value && !n.value) {
        const D = w(
          1,
          e.labelFirstPage,
          Ui,
          e.firstText,
          e.firstClass,
          1
        );
        S.push(D);
      }
      const Z = w(
        e.modelValue - 1,
        e.labelFirstPage,
        Ji,
        e.prevText,
        e.prevClass,
        1
      );
      S.push(Z), n.value && b[0] !== 1 && S.push(W({ number: 1 }, 0)), $.value && S.push(L(!1)), T.value.forEach((D, le) => {
        const oe = $.value && n.value && b[0] !== 1 ? 1 : 0;
        S.push(W(D, le + oe));
      }), _.value && S.push(L(!0)), f.value && b[b.length - 1] !== h.value && S.push(W({ number: h.value }, -1));
      const Y = w(
        e.modelValue + 1,
        e.labelNextPage,
        Xi,
        e.nextText,
        e.nextClass,
        h.value
      );
      if (S.push(Y), !f.value && !u.value) {
        const D = w(
          h.value,
          e.labelLastPage,
          Wi,
          e.lastText,
          e.lastClass,
          h.value
        );
        S.push(D);
      }
      return X(
        "ul",
        {
          class: ["pagination", p.value, k.value, F.value],
          role: "menubar",
          "aria-disabled": l.value,
          "aria-label": e.ariaLabel || null
        },
        S
      );
    };
  }
}), Qi = x({
  props: {
    container: {
      type: [String, Object],
      default: "body"
    },
    content: { type: String },
    id: { type: String },
    customClass: { type: String, default: "" },
    noninteractive: { type: [Boolean, String], default: !1 },
    placement: { type: String, default: "right" },
    target: {
      type: [String, Object],
      default: void 0
    },
    title: { type: String },
    delay: { type: [Number, Object], default: 0 },
    triggers: { type: String, default: "click" },
    show: { type: [Boolean, String], default: !1 },
    variant: { type: String, default: void 0 },
    html: { type: [Boolean, String], default: !0 },
    sanitize: { type: [Boolean, String], default: !1 },
    offset: { type: String, default: "0" }
  },
  emits: ["show", "shown", "hide", "hidden", "inserted"],
  setup(e, { emit: t, slots: a }) {
    r(o(e, "noninteractive"));
    const l = r(o(e, "show")), n = r(o(e, "html")), i = r(o(e, "sanitize")), u = j(), f = j(), v = j(), k = j(), h = j(), y = d(() => ({
      [`b-popover-${e.variant}`]: e.variant !== void 0
    })), $ = (g) => {
      if (typeof g == "string")
        return g;
      if (g instanceof HTMLElement)
        return g;
      if (typeof g < "u")
        return g.$el;
    }, A = (g) => {
      if (!!g) {
        if (typeof g == "string") {
          const B = document.getElementById(g);
          return B || void 0;
        }
        return g;
      }
    }, _ = (g) => {
      f.value = A($(g)), f.value && (v.value = new ot(f.value, {
        customClass: e.customClass,
        container: $(e.container),
        trigger: e.triggers,
        placement: e.placement,
        title: e.title || a.title ? k.value : "",
        content: h.value,
        html: n.value,
        delay: e.delay,
        sanitize: i.value,
        offset: e.offset
      }));
    };
    return ue(() => {
      var g, B, p;
      ke(() => {
        _(e.target);
      }), (B = (g = u.value) == null ? void 0 : g.parentNode) == null || B.removeChild(u.value), l.value && ((p = v.value) == null || p.show());
    }), bt(() => {
      var g;
      (g = v.value) == null || g.dispose();
    }), ie(
      () => e.target,
      (g) => {
        var B;
        (B = v.value) == null || B.dispose(), _(g);
      }
    ), ie(
      () => l.value,
      (g, B) => {
        var p, F;
        g !== B && (g ? (p = v.value) == null || p.show() : (F = v.value) == null || F.hide());
      }
    ), ne(f, "show.bs.popover", () => t("show")), ne(f, "shown.bs.popover", () => t("shown")), ne(f, "hide.bs.popover", () => t("hide")), ne(f, "hidden.bs.popover", () => t("hidden")), ne(f, "inserted.bs.popover", () => t("inserted")), {
      element: u,
      titleRef: k,
      contentRef: h,
      classes: y
    };
  }
}), er = ["id"], tr = { ref: "titleRef" }, ar = { ref: "contentRef" };
function lr(e, t, a, l, n, i) {
  return c(), m("div", {
    id: e.id,
    ref: "element",
    class: I(["popover b-popover", e.classes]),
    role: "tooltip",
    tabindex: "-1"
  }, [
    E("div", tr, [
      C(e.$slots, "title", {}, () => [
        ee(R(e.title), 1)
      ])
    ], 512),
    E("div", ar, [
      C(e.$slots, "default", {}, () => [
        ee(R(e.content), 1)
      ])
    ], 512)
  ], 10, er);
}
const nr = /* @__PURE__ */ ce(Qi, [["render", lr]]), za = x({
  props: {
    animated: { type: [Boolean, String], default: !1 },
    label: { type: String },
    labelHtml: { type: String },
    max: { type: [Number, String] },
    precision: { type: [Number, String], default: 0 },
    showProgress: { type: [Boolean, String], default: !1 },
    showValue: { type: [Boolean, String], default: !1 },
    striped: { type: [Boolean, String], default: !1 },
    value: { type: [Number, String], default: 0 },
    variant: { type: String }
  },
  setup(e, { slots: t }) {
    const a = r(o(e, "animated")), l = r(o(e, "showProgress")), n = r(o(e, "showValue")), i = r(o(e, "striped")), u = $e(La), f = d(() => ({
      "progress-bar-animated": a.value || (u == null ? void 0 : u.animated),
      "progress-bar-striped": i.value || (u == null ? void 0 : u.striped) || a.value || (u == null ? void 0 : u.animated),
      [`bg-${e.variant}`]: e.variant !== void 0
    })), v = d(() => {
      if (n.value || (u == null ? void 0 : u.showValue))
        return parseFloat(e.value).toFixed(e.precision);
      if (l.value || (u == null ? void 0 : u.showProgress)) {
        const y = (e.value * 100 / parseInt(e.max || 100)).toString();
        return parseFloat(y).toFixed(e.precision);
      }
      return e.label || "";
    }), k = d(() => e.max || (u == null ? void 0 : u.max) ? `${e.value * 100 / parseInt(e.max || (u == null ? void 0 : u.max))}%` : typeof e.value == "string" ? e.value : `${e.value}%`), h = d(() => {
      const y = {
        class: ["progress-bar", f.value],
        role: "progressbar",
        "aria-valuenow": e.value,
        "aria-valuemin": 0,
        "aria-valuemax": e.max,
        style: { width: k.value }
      };
      return e.labelHtml ? {
        ...y,
        innerHTML: e.labelHtml
      } : y;
    });
    return () => {
      var y;
      return X("div", h.value, ((y = t.default) == null ? void 0 : y.call(t)) || v.value);
    };
  }
}), La = Symbol(), or = /* @__PURE__ */ x({
  __name: "BProgress",
  props: {
    variant: null,
    max: null,
    height: null,
    animated: { default: !1 },
    precision: { default: 0 },
    showProgress: { default: !1 },
    showValue: { default: !1 },
    striped: { default: !1 },
    value: { default: 0 }
  },
  setup(e) {
    const t = e, a = r(o(t, "animated")), l = r(o(t, "showProgress")), n = r(o(t, "showValue")), i = r(o(t, "striped"));
    return Oe(La, {
      animated: a.value,
      max: t.max,
      showProgress: l.value,
      showValue: n.value,
      striped: i.value
    }), (u, f) => (c(), m("div", {
      class: "progress",
      style: Ae({ height: e.height })
    }, [
      C(u.$slots, "default", {}, () => [
        pe(za, We(Xe({
          animated: s(a),
          max: e.max,
          precision: e.precision,
          showProgress: s(l),
          showValue: s(n),
          striped: s(i),
          value: e.value,
          variant: e.variant
        })), null, 16)
      ])
    ], 4));
  }
}), Et = Je("cols", [""], { type: [String, Number], default: null }), sr = x({
  name: "BRow",
  props: {
    tag: { type: String, default: "div" },
    gutterX: { type: String, default: null },
    gutterY: { type: String, default: null },
    noGutters: { type: [Boolean, String], default: !1 },
    alignV: { type: String, default: null },
    alignH: { type: String, default: null },
    alignContent: { type: String, default: null },
    ...Et
  },
  setup(e) {
    const t = r(o(e, "noGutters")), a = Ut(e, Et, "cols", "row-cols");
    return {
      classes: d(() => ({
        [`gx-${e.gutterX}`]: e.gutterX !== null,
        [`gy-${e.gutterY}`]: e.gutterY !== null,
        "g-0": t.value,
        [`align-items-${e.alignV}`]: e.alignV !== null,
        [`justify-content-${e.alignH}`]: e.alignH !== null,
        [`align-content-${e.alignContent}`]: e.alignContent !== null
      })),
      rowColsClasses: a
    };
  }
});
function ir(e, t, a, l, n, i) {
  return c(), z(q(e.tag), {
    class: I(["row", [e.classes, e.rowColsClasses]])
  }, {
    default: N(() => [
      C(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["class"]);
}
const rr = /* @__PURE__ */ ce(sr, [["render", ir]]), Me = /* @__PURE__ */ x({
  __name: "BSkeleton",
  props: {
    height: null,
    width: null,
    size: null,
    animation: { default: "wave" },
    type: { default: "text" },
    variant: null
  },
  setup(e) {
    const t = e, a = d(() => [
      `b-skeleton-${t.type}`,
      {
        [`b-skeleton-animate-${t.animation}`]: typeof t.animation == "boolean" ? !1 : t.animation,
        [`bg-${t.variant}`]: t.variant !== void 0
      }
    ]), l = d(() => ({
      width: t.size || t.width,
      height: t.size || t.height
    }));
    return (n, i) => (c(), m("div", {
      class: I(["b-skeleton", s(a)]),
      style: Ae(s(l))
    }, null, 6));
  }
}), ur = /* @__PURE__ */ x({
  __name: "BSkeletonIcon",
  props: {
    animation: { default: "wave" }
  },
  setup(e) {
    const t = e, a = d(() => [`b-skeleton-animate-${t.animation}`]);
    return (l, n) => (c(), m("div", {
      class: I(["b-skeleton-icon-wrapper position-relative d-inline-block overflow-hidden", s(a)])
    }, [
      C(l.$slots, "default")
    ], 2));
  }
}), Na = /* @__PURE__ */ x({
  __name: "BTableSimple",
  props: {
    bordered: { default: !1 },
    borderless: { default: !1 },
    borderVariant: null,
    captionTop: { default: !1 },
    dark: { default: !1 },
    hover: { default: !1 },
    responsive: { type: [Boolean, String], default: !1 },
    stacked: { type: [Boolean, String], default: !1 },
    striped: { default: !1 },
    small: { default: !1 },
    tableClass: null,
    tableVariant: null
  },
  setup(e) {
    const t = e, a = r(o(t, "captionTop")), l = r(o(t, "borderless")), n = r(o(t, "bordered")), i = r(o(t, "dark")), u = r(o(t, "hover")), f = r(o(t, "small")), v = r(o(t, "striped")), k = d(() => [
      "table",
      "b-table",
      {
        "table-bordered": n.value,
        "table-borderless": l.value,
        [`border-${t.borderVariant}`]: t.borderVariant !== void 0,
        "caption-top": a.value,
        "table-dark": i.value,
        "table-hover": u.value,
        "b-table-stacked": typeof t.stacked == "boolean" && t.stacked,
        [`b-table-stacked-${t.stacked}`]: typeof t.stacked == "string",
        "table-striped": v.value,
        "table-sm": f.value,
        [`table-${t.tableVariant}`]: t.tableVariant !== void 0
      },
      t.tableClass
    ]), h = d(() => [
      {
        "table-responsive": typeof t.responsive == "boolean" && t.responsive,
        [`table-responsive-${t.responsive}`]: typeof t.responsive == "string"
      }
    ]);
    return (y, $) => e.responsive ? (c(), m("div", {
      key: 1,
      class: I(s(h))
    }, [
      E("table", {
        role: "table",
        class: I(s(k))
      }, [
        C(y.$slots, "default")
      ], 2)
    ], 2)) : (c(), m("table", {
      key: 0,
      role: "table",
      class: I(s(k))
    }, [
      C(y.$slots, "default")
    ], 2));
  }
}), dr = { key: 0 }, cr = { key: 1 }, fr = /* @__PURE__ */ x({
  __name: "BSkeletonTable",
  props: {
    animation: { default: "wave" },
    columns: { default: 5 },
    hideHeader: { default: !1 },
    rows: { default: 3 },
    showFooter: { default: !1 },
    tableProps: null
  },
  setup(e) {
    const t = e, a = r(o(t, "hideHeader")), l = r(o(t, "showFooter"));
    return (n, i) => (c(), z(Na, We(Xe(e.tableProps)), {
      default: N(() => [
        s(a) ? P("", !0) : (c(), m("thead", dr, [
          E("tr", null, [
            (c(!0), m(Q, null, ae(e.columns, (u, f) => (c(), m("th", { key: f }, [
              pe(Me)
            ]))), 128))
          ])
        ])),
        E("tbody", null, [
          (c(!0), m(Q, null, ae(e.rows, (u, f) => (c(), m("tr", { key: f }, [
            (c(!0), m(Q, null, ae(e.columns, (v, k) => (c(), m("td", { key: k }, [
              pe(Me, { width: "75%" })
            ]))), 128))
          ]))), 128))
        ]),
        s(l) ? (c(), m("tfoot", cr, [
          E("tr", null, [
            (c(!0), m(Q, null, ae(e.columns, (u, f) => (c(), m("th", { key: f }, [
              pe(Me)
            ]))), 128))
          ])
        ])) : P("", !0)
      ]),
      _: 1
    }, 16));
  }
}), vr = /* @__PURE__ */ x({
  __name: "BSkeletonWrapper",
  props: {
    loading: { default: !1 }
  },
  setup(e) {
    const a = r(o(e, "loading"));
    return (l, n) => s(a) ? C(l.$slots, "loading", { key: 0 }) : C(l.$slots, "default", { key: 1 });
  }
}), br = {
  key: 0,
  class: "visually-hidden"
}, mr = /* @__PURE__ */ x({
  __name: "BSpinner",
  props: {
    label: null,
    role: { default: "status" },
    small: { default: !1 },
    tag: { default: "span" },
    type: { default: "border" },
    variant: null
  },
  setup(e) {
    const t = e, a = r(o(t, "small")), l = d(() => ({
      "spinner-border": t.type === "border",
      "spinner-border-sm": t.type === "border" && a.value,
      "spinner-grow": t.type === "grow",
      "spinner-grow-sm": t.type === "grow" && a.value,
      [`text-${t.variant}`]: t.variant !== void 0
    }));
    return (n, i) => (c(), z(q(e.tag), {
      class: I(s(l)),
      role: e.label || n.$slots.label ? e.role : null,
      "aria-hidden": e.label || n.$slots.label ? null : !0
    }, {
      default: N(() => [
        e.label || n.$slots.label ? (c(), m("span", br, [
          C(n.$slots, "label", {}, () => [
            ee(R(e.label), 1)
          ])
        ])) : P("", !0)
      ]),
      _: 3
    }, 8, ["class", "role", "aria-hidden"]));
  }
}), gr = /* @__PURE__ */ x({
  __name: "BTableContainer",
  props: {
    responsive: { type: [Boolean, String], default: !1 },
    responsiveClasses: null
  },
  setup(e) {
    return (t, a) => e.responsive ? (c(), m("div", {
      key: 0,
      class: I(e.responsiveClasses)
    }, [
      C(t.$slots, "default")
    ], 2)) : C(t.$slots, "default", { key: 1 });
  }
}), pr = () => ({
  normaliseFields: (a, l) => {
    const n = [];
    return !(a != null && a.length) && (l == null ? void 0 : l.length) ? (Object.keys(l[0]).forEach((i) => n.push({ key: i, label: wt(i) })), n) : (Array.isArray(a) && a.forEach((i) => {
      typeof i == "string" ? n.push({ key: i, label: wt(i) }) : Ol(i) && i.key && Ie(i.key) && n.push({ ...i });
    }), n);
  },
  sortItems: (a, l, n) => {
    if (!n || !n.key)
      return l;
    const i = n.key;
    return l.sort(
      (u, f) => u[i] > f[i] ? n.desc ? -1 : 1 : f[i] > u[i] ? n.desc ? 1 : -1 : 0
    );
  }
}), hr = ["title", "abbr", "onClick"], yr = { class: "d-flex flex-nowrap align-items-center gap-1" }, Br = {
  key: 0,
  class: "text-muted small"
}, $r = { key: 1 }, kr = { key: 0 }, Sr = ["title", "abbr"], Cr = { key: 1 }, Tr = { key: 2 }, wr = /* @__PURE__ */ x({
  __name: "BTable",
  props: {
    align: null,
    caption: null,
    captionTop: { default: !1 },
    borderless: { default: !1 },
    bordered: { default: !1 },
    borderVariant: null,
    dark: { default: !1 },
    fields: { default: () => [] },
    footClone: { default: !1 },
    hover: { default: !1 },
    items: { default: () => [] },
    responsive: { type: [Boolean, String], default: !1 },
    small: { default: !1 },
    striped: { default: !1 },
    variant: null,
    sortBy: null,
    sortDesc: { type: Boolean },
    sortInternal: { type: Boolean, default: !0 }
  },
  emits: ["update:sortBy", "update:sortDesc", "sorted"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "captionTop")), n = r(o(a, "borderless")), i = r(o(a, "bordered")), u = r(o(a, "dark")), f = r(o(a, "footClone")), v = r(o(a, "hover")), k = r(o(a, "small")), h = r(o(a, "striped")), y = d(() => [
      "table",
      {
        [`align-${a.align}`]: a.align !== void 0,
        [`table-${a.variant}`]: a.variant !== void 0,
        "table-striped": h.value,
        "table-hover": v.value,
        "table-dark": u.value,
        "table-bordered": i.value,
        [`border-${a.borderVariant}`]: a.borderVariant !== void 0,
        "table-borderless": n.value,
        "table-sm": k.value,
        "caption-top": l.value
      }
    ]), $ = pr(), A = d(() => $.normaliseFields(a.fields, a.items)), _ = d(
      () => a.sortInternal ? $.sortItems(a.fields, a.items, { key: a.sortBy, desc: a.sortDesc }) : a.items
    ), g = d(() => ({
      "table-responsive": typeof a.responsive == "boolean" && a.responsive,
      [`table-responsive-${a.responsive}`]: typeof a.responsive == "string"
    })), B = d(
      () => a.fields.filter((T) => typeof T == "string" ? !1 : T.sortable).length > 0
    ), p = (T) => {
      //!! make sure to enable this flag after implementing the table.busy feature.
      const S = typeof T == "string" ? T : T.key, b = typeof T == "string" ? !1 : T.sortable;
      B.value === !0 && b === !0 && (S === a.sortBy ? t("update:sortDesc", !a.sortDesc) : (t("update:sortBy", typeof T == "string" ? T : T.key), t("update:sortDesc", !1)), t("sorted", a.sortBy, a.sortDesc));
    }, F = (T) => [
      T.class,
      T.thClass,
      T.variant ? `table-${T.variant}` : void 0,
      { "b-table-sortable-column": B.value && T.sortable }
    ];
    return (T, S) => (c(), z(gr, {
      responsive: e.responsive,
      "responsive-classes": s(g)
    }, {
      default: N(() => [
        E("table", {
          class: I(s(y))
        }, [
          E("thead", null, [
            T.$slots["thead-top"] ? C(T.$slots, "thead-top", { key: 0 }) : P("", !0),
            E("tr", null, [
              (c(!0), m(Q, null, ae(s(A), (b) => (c(), m("th", G({
                key: b.key,
                scope: "col",
                class: F(b),
                title: b.headerTitle,
                abbr: b.headerAbbr,
                style: b.thStyle
              }, b.thAttr, {
                onClick: (V) => p(b)
              }), [
                E("div", yr, [
                  s(B) && b.sortable && b.key === e.sortBy ? (c(), m("span", Br, [
                    Te(E("span", null, "\u25BC", 512), [
                      [St, e.sortDesc === !0]
                    ]),
                    Te(E("span", null, "\u25B2", 512), [
                      [St, e.sortDesc === !1]
                    ])
                  ])) : P("", !0),
                  E("div", null, [
                    T.$slots["head(" + b.key + ")"] ? C(T.$slots, "head(" + b.key + ")", {
                      key: 0,
                      label: b.label
                    }) : (c(), m(Q, { key: 1 }, [
                      ee(R(b.label), 1)
                    ], 64))
                  ])
                ])
              ], 16, hr))), 128))
            ]),
            T.$slots["thead-sub"] ? (c(), m("tr", $r, [
              (c(!0), m(Q, null, ae(s(A), (b) => (c(), m("td", {
                key: b.key,
                scope: "col",
                class: I([b.class, b.thClass, b.variant ? `table-${b.variant}` : ""])
              }, [
                T.$slots["thead-sub"] ? C(T.$slots, "thead-sub", G({
                  key: 0,
                  items: s(A)
                }, b)) : (c(), m(Q, { key: 1 }, [
                  ee(R(b.label), 1)
                ], 64))
              ], 2))), 128))
            ])) : P("", !0)
          ]),
          E("tbody", null, [
            (c(!0), m(Q, null, ae(s(_), (b, V) => (c(), m("tr", {
              key: V,
              class: I(b._rowVariant ? `table-${b._rowVariant}` : null)
            }, [
              (c(!0), m(Q, null, ae(s(A), (H, O) => (c(), m("td", G({
                key: H.key
              }, H.tdAttr, {
                class: [
                  H.class,
                  H.tdClass,
                  H.variant ? `table-${H.variant}` : "",
                  (b == null ? void 0 : b._cellVariants) && (b == null ? void 0 : b._cellVariants[H.key]) ? `table-${b == null ? void 0 : b._cellVariants[H.key]}` : ""
                ]
              }), [
                T.$slots["cell(" + H.key + ")"] ? C(T.$slots, "cell(" + H.key + ")", {
                  key: 0,
                  value: b[H.key],
                  index: O,
                  item: b,
                  items: e.items
                }) : (c(), m(Q, { key: 1 }, [
                  ee(R(b[H.key]), 1)
                ], 64))
              ], 16))), 128))
            ], 2))), 128))
          ]),
          s(f) ? (c(), m("tfoot", kr, [
            E("tr", null, [
              (c(!0), m(Q, null, ae(s(A), (b) => (c(), m("th", G({
                key: b.key
              }, b.thAttr, {
                scope: "col",
                class: [b.class, b.thClass, b.variant ? `table-${b.variant}` : ""],
                title: b.headerTitle,
                abbr: b.headerAbbr,
                style: b.thStyle
              }), R(b.label), 17, Sr))), 128))
            ])
          ])) : P("", !0),
          T.$slots["table-caption"] ? (c(), m("caption", Cr, [
            C(T.$slots, "table-caption")
          ])) : e.caption ? (c(), m("caption", Tr, R(e.caption), 1)) : P("", !0)
        ], 2)
      ]),
      _: 3
    }, 8, ["responsive", "responsive-classes"]));
  }
}), Vr = /* @__PURE__ */ x({
  __name: "BTbody",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = d(() => ({
      [`thead-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (c(), m("tbody", {
      role: "rowgroup",
      class: I(s(a))
    }, [
      C(l.$slots, "default")
    ], 2));
  }
}), _r = ["scope", "colspan", "rowspan", "data-label"], xr = { key: 0 }, Ar = /* @__PURE__ */ x({
  __name: "BTd",
  props: {
    colspan: null,
    rowspan: null,
    stackedHeading: null,
    stickyColumn: { default: !1 },
    variant: null
  },
  setup(e) {
    const t = e, a = r(o(t, "stickyColumn")), l = d(() => ({
      [`table-${t.variant}`]: t.variant !== void 0,
      "b-table-sticky-column": a.value,
      "table-b-table-default": a.value && !t.variant
    })), n = d(() => t.colspan ? "colspan" : t.rowspan ? "rowspan" : "col");
    return (i, u) => (c(), m("td", {
      role: "cell",
      scope: s(n),
      class: I(s(l)),
      colspan: e.colspan,
      rowspan: e.rowspan,
      "data-label": e.stackedHeading
    }, [
      e.stackedHeading ? (c(), m("div", xr, [
        C(i.$slots, "default")
      ])) : C(i.$slots, "default", { key: 1 })
    ], 10, _r));
  }
}), Ir = /* @__PURE__ */ x({
  __name: "BTfoot",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = d(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (c(), m("tfoot", {
      role: "rowgroup",
      class: I(s(a))
    }, [
      C(l.$slots, "default")
    ], 2));
  }
}), Fr = ["scope", "colspan", "rowspan", "data-label"], Or = { key: 0 }, zr = /* @__PURE__ */ x({
  __name: "BTh",
  props: {
    colspan: null,
    rowspan: null,
    stackedHeading: null,
    stickyColumn: { default: !1 },
    variant: null
  },
  setup(e) {
    const t = e, a = r(o(t, "stickyColumn")), l = d(() => ({
      [`table-${t.variant}`]: t.variant !== void 0,
      "b-table-sticky-column": a.value,
      "table-b-table-default": a.value && t.variant === void 0
    })), n = d(() => t.colspan ? "colspan" : t.rowspan ? "rowspan" : "col");
    return (i, u) => (c(), m("th", {
      role: "columnheader",
      scope: s(n),
      class: I(s(l)),
      colspan: e.colspan,
      rowspan: e.rowspan,
      "data-label": e.stackedHeading
    }, [
      e.stackedHeading !== void 0 ? (c(), m("div", Or, [
        C(i.$slots, "default")
      ])) : C(i.$slots, "default", { key: 1 })
    ], 10, Fr));
  }
}), Lr = /* @__PURE__ */ x({
  __name: "BThead",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = d(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (c(), m("thead", {
      role: "rowgroup",
      class: I(s(a))
    }, [
      C(l.$slots, "default")
    ], 2));
  }
}), Nr = /* @__PURE__ */ x({
  __name: "BTr",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = d(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (c(), m("tr", {
      role: "row",
      class: I(s(a))
    }, [
      C(l.$slots, "default")
    ], 2));
  }
}), Pr = ["id", "data-bs-target", "aria-controls", "aria-selected", "onClick"], Pa = Symbol(), Er = /* @__PURE__ */ x({
  __name: "BTabs",
  props: {
    activeNavItemClass: { default: void 0 },
    activeTabClass: { default: void 0 },
    align: { default: void 0 },
    card: { default: !1 },
    contentClass: { default: void 0 },
    end: { default: !1 },
    fill: { default: !1 },
    id: { default: void 0 },
    justified: { default: !1 },
    lazy: { default: !1 },
    navClass: { default: void 0 },
    navWrapperClass: { default: void 0 },
    noFade: { default: !1 },
    noNavStyle: { default: !1 },
    pills: { default: !1 },
    small: { default: !1 },
    tag: { default: "div" },
    vertical: { default: !1 },
    modelValue: { default: -1 }
  },
  emits: ["update:modelValue", "activate-tab", "click"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "card")), n = r(o(a, "end")), i = r(o(a, "fill")), u = r(o(a, "justified")), f = r(o(a, "lazy")), v = r(o(a, "noFade")), k = r(o(a, "noNavStyle")), h = r(o(a, "pills")), y = r(o(a, "small")), $ = r(o(a, "vertical")), A = we(), _ = j(a.modelValue), g = j(""), B = d({
      get: () => _.value,
      set: (O) => {
        _.value = O, p.value.length > 0 && O >= 0 && O < p.value.length ? g.value = p.value[O].buttonId : g.value = "", t("update:modelValue", O);
      }
    }), p = d(() => {
      let O = [];
      return A.default && (O = H(A).map((w, L) => {
        w.props || (w.props = {});
        const W = w.props["button-id"] || ye("tab"), Z = w.props.id || ye(), Y = B.value > -1 ? L === B.value : w.props.active === "", D = w.props["title-item-class"], le = w.props["title-link-attributes"];
        return {
          buttonId: W,
          contentId: Z,
          active: Y,
          disabled: w.props.disabled === "" || w.props.disabled === !0,
          navItemClasses: [
            {
              active: Y,
              disabled: w.props.disabled === "" || w.props.disabled === !0
            },
            Y && a.activeNavItemClass ? a.activeNavItemClass : null,
            w.props["title-link-class"]
          ],
          tabClasses: [
            {
              fade: !v.value
            },
            Y && a.activeTabClass ? a.activeTabClass : null
          ],
          target: `#${Z}`,
          title: w.props.title,
          titleItemClass: D,
          titleLinkAttributes: le,
          onClick: w.props.onClick,
          tab: w
        };
      })), O;
    }), F = d(() => !((p == null ? void 0 : p.value) && p.value.length > 0)), T = d(() => ({
      "d-flex align-items-start": $.value
    })), S = d(() => ({
      "nav-pills": h.value,
      "flex-column me-3": $.value,
      [`justify-content-${a.align}`]: !!a.align,
      "nav-fill": i.value,
      "card-header-tabs": l.value,
      "nav-justified": u.value,
      "nav-tabs": !k.value && !h.value,
      small: y.value
    })), b = (O) => {
      let w = !1;
      if (O !== void 0 && O > -1 && O < p.value.length && !p.value[O].disabled && (B.value < 0 || p.value[O].buttonId !== g.value)) {
        const L = new Ke("activate-tab", { cancelable: !0, vueTarget: this });
        t("activate-tab", O, B.value, L), L.defaultPrevented || (B.value = O, w = !0);
      }
      return !w && a.modelValue !== B.value && t("update:modelValue", B.value), w;
    }, V = (O, w) => {
      var L;
      b(w), w >= 0 && !p.value[w].disabled && ((L = p.value[w]) == null ? void 0 : L.onClick) && Jt(p.value[w].onClick) && p.value[w].onClick(O);
    }, H = (O) => !O || !O.default ? [] : O.default().reduce((w, L) => (typeof L.type == "symbol" ? w = w.concat(L.children) : w.push(L), w), []).filter((w) => {
      var L;
      return ((L = w.type) == null ? void 0 : L.__name) === "BTab";
    });
    return b(_.value), ie(
      () => a.modelValue,
      (O, w) => {
        if (O === w)
          return;
        if (O = Math.max(O, -1), w = Math.max(w, -1), p.value.length <= 0) {
          B.value = -1;
          return;
        }
        const L = O > w;
        let W = O;
        const Z = p.value.length - 1;
        for (; W >= 0 && W <= Z && p.value[W].disabled; )
          W += L ? 1 : -1;
        if (W < 0) {
          b(0);
          return;
        }
        if (W >= p.value.length) {
          b(p.value.length - 1);
          return;
        }
        b(W);
      }
    ), ie(
      () => p.value,
      () => {
        let O = p.value.map((w) => w.active && !w.disabled).lastIndexOf(!0);
        O < 0 && (B.value >= p.value.length ? O = p.value.map((w) => !w.disabled).lastIndexOf(!0) : p.value[B.value] && !p.value[B.value].disabled && (O = B.value)), O < 0 && (O = p.value.map((w) => !w.disabled).indexOf(!0)), p.value.forEach((w, L) => w.active = L === O), b(O);
      }
    ), ue(() => {
      if (B.value < 0 && p.value.length > 0 && !p.value.some((O) => O.active)) {
        const O = p.value.map((w) => !w.disabled).indexOf(!0);
        b(O >= 0 ? O : -1);
      }
    }), Oe(Pa, {
      lazy: f.value,
      card: l.value
    }), (O, w) => (c(), z(q(e.tag), {
      id: e.id,
      class: I(["tabs", s(T)])
    }, {
      default: N(() => [
        s(n) ? (c(), m("div", {
          key: 0,
          class: I(["tab-content", e.contentClass])
        }, [
          (c(!0), m(Q, null, ae(s(p), ({ tab: L, contentId: W, tabClasses: Z, active: Y }, D) => (c(), z(q(L), {
            key: D,
            id: W,
            class: I(Z),
            active: Y
          }, null, 8, ["id", "class", "active"]))), 128)),
          s(F) ? (c(), m("div", {
            key: "bv-empty-tab",
            class: I(["tab-pane active", { "card-body": s(l) }])
          }, [
            C(O.$slots, "empty")
          ], 2)) : P("", !0)
        ], 2)) : P("", !0),
        E("div", {
          class: I([e.navWrapperClass, { "card-header": s(l), "ms-auto": e.vertical && s(n) }])
        }, [
          E("ul", {
            class: I(["nav", [s(S), e.navClass]]),
            role: "tablist"
          }, [
            C(O.$slots, "tabs-start"),
            (c(!0), m(Q, null, ae(s(p), ({ tab: L, buttonId: W, contentId: Z, navItemClasses: Y, active: D, target: le }, oe) => (c(), m("li", {
              key: oe,
              class: I(["nav-item", L.props["title-item-class"]])
            }, [
              E("button", G({
                id: W,
                class: ["nav-link", Y],
                "data-bs-toggle": "tab",
                "data-bs-target": le,
                role: "tab",
                "aria-controls": Z,
                "aria-selected": D
              }, L.props["title-link-attributes"], {
                onClick: pt((K) => V(K, oe), ["stop", "prevent"])
              }), [
                L.children && L.children.title ? (c(), z(q(L.children.title), { key: 0 })) : (c(), m(Q, { key: 1 }, [
                  ee(R(L.props.title), 1)
                ], 64))
              ], 16, Pr)
            ], 2))), 128)),
            C(O.$slots, "tabs-end")
          ], 2)
        ], 2),
        s(n) ? P("", !0) : (c(), m("div", {
          key: 1,
          class: I(["tab-content", e.contentClass])
        }, [
          (c(!0), m(Q, null, ae(s(p), ({ tab: L, contentId: W, tabClasses: Z, active: Y }, D) => (c(), z(q(L), {
            key: D,
            id: W,
            class: I(Z),
            active: Y
          }, null, 8, ["id", "class", "active"]))), 128)),
          s(F) ? (c(), m("div", {
            key: "bv-empty-tab",
            class: I(["tab-pane active", { "card-body": s(l) }])
          }, [
            C(O.$slots, "empty")
          ], 2)) : P("", !0)
        ], 2))
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Hr = /* @__PURE__ */ x({
  __name: "BTab",
  props: {
    id: null,
    title: null,
    active: { default: !1 },
    buttonId: { default: void 0 },
    disabled: { default: !1 },
    lazy: { default: !1 },
    noBody: { type: [Boolean, String], default: !1 },
    tag: { default: "div" },
    titleItemClass: { default: void 0 },
    titleLinkAttributes: { default: void 0 },
    titleLinkClass: { default: void 0 }
  },
  setup(e) {
    const t = e, a = r(o(t, "active")), l = r(o(t, "disabled")), n = r(o(t, "lazy")), i = $e(Pa, null), u = d(() => (i == null ? void 0 : i.lazy) || n.value), f = d(() => a.value && !l.value), v = d(() => f.value || !u.value), k = d(() => ({
      active: a.value,
      show: a.value,
      "card-body": (i == null ? void 0 : i.card) && t.noBody === !1
    }));
    return (h, y) => (c(), z(q(e.tag), {
      id: e.id,
      class: I(["tab-pane", s(k)]),
      role: "tabpanel",
      "aria-labelledby": "profile-tab"
    }, {
      default: N(() => [
        s(v) ? C(h.$slots, "default", { key: 0 }) : P("", !0)
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), qr = {
  BAccordion: Kl,
  BAccordionItem: an,
  BNavText: pi,
  BAlert: nn,
  BAvatar: dn,
  BAvatarGroup: on,
  BNavForm: si,
  BBadge: mn,
  BBreadcrumb: Bn,
  BBreadcrumbItem: fa,
  BButton: Ee,
  BButtonGroup: Sn,
  BButtonToolbar: Tn,
  BCard: xn,
  BCardBody: An,
  BCardFooter: Fn,
  BCardGroup: On,
  BCardHeader: Ln,
  BCardImg: Nn,
  BCardSubTitle: ma,
  BCardText: qn,
  BCardTitle: ba,
  BCarousel: Qn,
  BCarouselSlide: oo,
  BCloseButton: va,
  BCol: Ne,
  BCollapse: da,
  BContainer: mo,
  BDropdown: ka,
  BDropdownDivider: yo,
  BDropdownForm: Co,
  BDropdownGroup: _o,
  BDropdownHeader: Fo,
  BDropdownItem: Lo,
  BDropdownItemButton: Eo,
  BDropdownText: Ro,
  BForm: Sa,
  BFormCheckbox: Ca,
  BFormCheckboxGroup: es,
  BFormFloatingLabel: Wo,
  BFormGroup: rs,
  BFormInput: fs,
  BFormInvalidFeedback: ct,
  BFormRadio: wa,
  BFormRadioGroup: hs,
  BFormRow: je,
  BFormSelect: ks,
  BFormSelectOption: $t,
  BFormSelectOptionGroup: Va,
  BFormText: ft,
  BFormTextarea: js,
  BFormTag: _a,
  BFormTags: Es,
  BFormValidFeedback: vt,
  BImg: pa,
  BInputGroup: Ks,
  BInputGroupAddon: kt,
  BInputGroupAppend: Js,
  BInputGroupPrepend: Ys,
  BInputGroupText: xa,
  BLink: ve,
  BListGroup: Zs,
  BListGroupItem: Qs,
  BModal: ni,
  BNav: oi,
  BNavbar: hi,
  BNavbarBrand: $i,
  BNavbarNav: ki,
  BNavbarToggle: zi,
  BNavItem: ci,
  BNavItemDropdown: vi,
  BOffcanvas: qi,
  BOverlay: Ri,
  BPagination: Zi,
  BPopover: nr,
  BProgress: or,
  BProgressBar: za,
  BRow: rr,
  BSkeleton: Me,
  BSkeletonIcon: ur,
  BSkeletonTable: fr,
  BSkeletonWrapper: vr,
  BSpinner: mr,
  BTab: Hr,
  BTable: wr,
  BTableSimple: Na,
  BTbody: Vr,
  BTd: Ar,
  BTfoot: Ir,
  BTh: zr,
  BThead: Lr,
  BTr: Nr,
  BToast: $a,
  BToaster: dt,
  BToastContainer: dt,
  BTabs: Er,
  BTransition: Ue,
  BToastPlugin: fo
};
const Mr = {
  install(e, t = {}) {
    Object.entries(qr).forEach(([a, l]) => {
      e.component(a, l);
    }), Object.entries(Fi).forEach(([a, l]) => {
      e.directive(a, l);
    }), vl(e);
  }
};
export {
  Kl as BAccordion,
  an as BAccordionItem,
  nn as BAlert,
  dn as BAvatar,
  on as BAvatarGroup,
  mn as BBadge,
  Bn as BBreadcrumb,
  fa as BBreadcrumbItem,
  Ee as BButton,
  Sn as BButtonGroup,
  Tn as BButtonToolbar,
  xn as BCard,
  An as BCardBody,
  Fn as BCardFooter,
  On as BCardGroup,
  Ln as BCardHeader,
  Nn as BCardImg,
  ma as BCardSubTitle,
  qn as BCardText,
  ba as BCardTitle,
  Qn as BCarousel,
  oo as BCarouselSlide,
  va as BCloseButton,
  Ne as BCol,
  da as BCollapse,
  mo as BContainer,
  ka as BDropdown,
  yo as BDropdownDivider,
  Co as BDropdownForm,
  _o as BDropdownGroup,
  Fo as BDropdownHeader,
  Lo as BDropdownItem,
  Eo as BDropdownItemButton,
  Ro as BDropdownText,
  Sa as BForm,
  Ca as BFormCheckbox,
  es as BFormCheckboxGroup,
  Wo as BFormFloatingLabel,
  rs as BFormGroup,
  fs as BFormInput,
  ct as BFormInvalidFeedback,
  wa as BFormRadio,
  hs as BFormRadioGroup,
  je as BFormRow,
  ks as BFormSelect,
  $t as BFormSelectOption,
  Va as BFormSelectOptionGroup,
  _a as BFormTag,
  Es as BFormTags,
  ft as BFormText,
  js as BFormTextarea,
  vt as BFormValidFeedback,
  pa as BImg,
  Ks as BInputGroup,
  kt as BInputGroupAddon,
  Js as BInputGroupAppend,
  Ys as BInputGroupPrepend,
  xa as BInputGroupText,
  ve as BLink,
  Zs as BListGroup,
  Qs as BListGroupItem,
  ni as BModal,
  oi as BNav,
  si as BNavForm,
  ci as BNavItem,
  vi as BNavItemDropdown,
  pi as BNavText,
  hi as BNavbar,
  $i as BNavbarBrand,
  ki as BNavbarNav,
  zi as BNavbarToggle,
  qi as BOffcanvas,
  Ri as BOverlay,
  Zi as BPagination,
  nr as BPopover,
  or as BProgress,
  za as BProgressBar,
  rr as BRow,
  Me as BSkeleton,
  ur as BSkeletonIcon,
  fr as BSkeletonTable,
  vr as BSkeletonWrapper,
  mr as BSpinner,
  Hr as BTab,
  wr as BTable,
  Na as BTableSimple,
  Er as BTabs,
  Vr as BTbody,
  Ar as BTd,
  Ir as BTfoot,
  zr as BTh,
  Lr as BThead,
  $a as BToast,
  dt as BToastContainer,
  fo as BToastPlugin,
  dt as BToaster,
  Nr as BTr,
  Ue as BTransition,
  Mr as BootstrapVue3,
  Ke as BvEvent,
  Ci as VBPopover,
  Bt as VBToggle,
  _i as VBTooltip,
  xi as VBVisible,
  Mr as default,
  bl as useBreadcrumb,
  ya as useToast
};
